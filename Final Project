{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":[" Ankita, Louise, Mike"],"metadata":{"id":"_x27KTOXnPqA"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"1NYSnO8nNogQ"},"outputs":[],"source":["#import libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import sqlite3\n","import statsmodels.api as m"]},{"cell_type":"markdown","metadata":{"id":"qpeQBNtracTE","tags":[]},"source":["# Final Project: Food Spending, Nutrient Intake & Pricing Trends\n","\n","## Introduction\n","\n","This project explores the intersection of food spending, nutrient intake, and pricing trends in the United States. Our target audience includes policymakers, public health officials, and nutrition researchers interested in understanding how economic and consumption patterns influence dietary outcomes.\n","\n","We chose this topic to address growing concerns around food affordability, nutritional quality, and public health equity. By analyzing multiple datasets — from CPI forecasts to historical food sales and nutrient intake data — we aim to answer the following questions:\n","\n","1. How have food prices evolved over time, and what are their projected trends?\n","2. How do changes in food pricing relate to shifts in nutrient and food group intake?\n","3. Where are the greatest disparities or potential areas for intervention?\n","\n","Through rigorous exploratory data analysis, SQL-based data wrangling, and a logistic regression model, we provide both descriptive and predictive insights into the economic and health implications of food consumption in the U.S."]},{"cell_type":"markdown","metadata":{"tags":[],"id":"zvbKp0MvaCtX"},"source":["## 1. Datasets Overview & Quality Checks\n","### Datasets Used\n","- **CPI Data**: Contains percent change in consumer food prices across categories for 2024, historical averages, and YoY projections.\n","- **Sales Data**: Annual food sales by state from 1997–2023, including nominal and real dollars, with and without taxes/tips.\n","- **Per Capita Sales**: Same as above, but adjusted by population.\n","- **Nutrient Intake Data**: Average U.S. nutrient intake by food source and year (1977–2018).\n","- **Food Group Intake**: Similar to nutrient intake but by food group.\n","- **Food Density**: Nutrient or group density per 1000 calories, by food source.\n","- **Recommended Densities**: USDA guidelines for nutrient targets per 1000 calories.\n","- **Sample Size Table**: Survey sample sizes by demographic and year."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JYT36ZoNNtCD"},"outputs":[],"source":["CPI = pd.read_csv(\"CPIForecast.csv\") # Consumer Price Index data set\n","sales = pd.read_csv(\"state_sales.csv\") # food sales by state with tax & tip\n","sales_percapita = pd.read_csv(\"state_sales_per_capita.csv\") # food sales by state (per capita)\n","sales_NTT = pd.read_csv(\"state_sales_no_taxes_tips.csv\") # food sales by state excluding tax/tip\n","sales_percapNTT = pd.read_csv(\"state_sales_per_capita_no_taxes_tips.csv\") # food sales by state (per capita) excluding tax/tip\n","size = pd.read_csv(\"table-1-sample-sizes.csv\") # sample size for consumption data tables\n","nut_intake = pd.read_csv(\"table-2-US-nutrient-intake-by-food-source.csv\") #US nutrient intake by food source\n","food_group = pd.read_csv(\"table-5-US-food-group-intakes-by-food-source.csv\") #US food group intake by food source\n","density = pd.read_csv(\"table-7-US-food-density-of-food-group-by-food-source.csv\") #US food density of food groups by food source\n","rec_density = pd.read_csv(\"table-8-recommended-density-and-2017-2018-density.csv\") #recommended food density"]},{"cell_type":"markdown","metadata":{"id":"V_z6HpLOaCtY"},"source":["### Initial Exploration\n","\n","We used common exploratory checks to understand the shape, structure, and quality of each dataset before cleaning. Below are some examples:\n","\n","- `nunique()` helped us identify how many distinct values were in each column.\n","- `list(df.columns)` gave us quick insight into feature names and formats.\n","- `isna().sum()` flagged missing values, especially in the nutrient intake data.\n","- We isolated and reviewed rows with missing nutrient values for further inspection."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"wG-QDCdANwhP","outputId":"b762062b-289a-42fc-b0a6-06c4d8850e4f","executionInfo":{"status":"ok","timestamp":1748319543487,"user_tz":300,"elapsed":99,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Top-level Aggregate Mid-level Low-level Disaggregate  \\\n","0  All food       NaN       NaN       NaN          NaN   \n","1  All food       NaN       NaN       NaN          NaN   \n","2  All food       NaN       NaN       NaN          NaN   \n","3  All food       NaN       NaN       NaN          NaN   \n","4  All food       NaN       NaN       NaN          NaN   \n","\n","                                    Attribute            Unit  Value  \n","0                         Relative importance         Percent  100.0  \n","1  Month-to-month February 2025 to March 2025  Percent change    0.4  \n","2     Year-over-year March 2024 to March 2025  Percent change    3.0  \n","3         Year-to-date avg. 2025 to avg. 2024  Percent change    1.9  \n","4                                 Annual 2022  Percent change    9.9  "],"text/html":["\n","  <div id=\"df-4e4b2509-0b01-4a37-afe3-4e8dd4822f21\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Top-level</th>\n","      <th>Aggregate</th>\n","      <th>Mid-level</th>\n","      <th>Low-level</th>\n","      <th>Disaggregate</th>\n","      <th>Attribute</th>\n","      <th>Unit</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>All food</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Relative importance</td>\n","      <td>Percent</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>All food</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Month-to-month February 2025 to March 2025</td>\n","      <td>Percent change</td>\n","      <td>0.4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>All food</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Year-over-year March 2024 to March 2025</td>\n","      <td>Percent change</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>All food</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Year-to-date avg. 2025 to avg. 2024</td>\n","      <td>Percent change</td>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>All food</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Annual 2022</td>\n","      <td>Percent change</td>\n","      <td>9.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e4b2509-0b01-4a37-afe3-4e8dd4822f21')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4e4b2509-0b01-4a37-afe3-4e8dd4822f21 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4e4b2509-0b01-4a37-afe3-4e8dd4822f21');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-76f1f970-d638-4fcf-8aa1-e0a92bd1a102\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-76f1f970-d638-4fcf-8aa1-e0a92bd1a102')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-76f1f970-d638-4fcf-8aa1-e0a92bd1a102 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"CPI","summary":"{\n  \"name\": \"CPI\",\n  \"rows\": 242,\n  \"fields\": [\n    {\n      \"column\": \"Top-level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"All food\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Aggregate\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Food at home\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mid-level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Nonalcoholic beverages\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low-level\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Poultry\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Disaggregate\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Pork\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Attribute\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Annual 2023\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unit\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Percent change\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.612789157685146,\n        \"min\": -7.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 116,\n        \"samples\": [\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}],"source":["# looking at the beginning of each data set\n","CPI.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"_2uWVx3rggLL","outputId":"0851dba3-a537-4161-b7bb-f04fa5270077","executionInfo":{"status":"ok","timestamp":1748319543524,"user_tz":300,"elapsed":54,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Year    State  \\\n","1372  2019  Wyoming   \n","1373  2020  Wyoming   \n","1374  2021  Wyoming   \n","1375  2022  Wyoming   \n","1376  2023  Wyoming   \n","\n","     FAH sales per capita nominal U.S. dollars with taxes and tips  \\\n","1372                                           2,873.98              \n","1373                                           3,121.94              \n","1374                                           3,389.81              \n","1375                                           3,591.28              \n","1376                                           3,638.57              \n","\n","     FAFH sales per capita nominal U.S. dollars with taxes and tips  \\\n","1372                                           2,851.21               \n","1373                                           2,758.76               \n","1374                                           3,514.07               \n","1375                                           3,778.54               \n","1376                                           4,000.32               \n","\n","     Total sales per capita nominal U.S. dollars with taxes and tips  \\\n","1372                                           5,725.19                \n","1373                                           5,880.70                \n","1374                                           6,903.87                \n","1375                                           7,369.83                \n","1376                                           7,638.89                \n","\n","     FAH sales per capita constant 1988 U.S. dollars with taxes and tips  \\\n","1372                                           1,336.29                    \n","1373                                           1,395.92                    \n","1374                                           1,452.35                    \n","1375                                           1,381.16                    \n","1376                                           1,337.45                    \n","\n","     FAFH sales per capita constant 1988 U.S. dollars with taxes and tips  \\\n","1372                                           1,196.14                     \n","1373                                           1,106.66                     \n","1374                                           1,344.11                     \n","1375                                           1,347.13                     \n","1376                                           1,327.31                     \n","\n","     Total sales per capita constant 1988 U.S. dollars with taxes and tips  \n","1372                                           2,532.43                     \n","1373                                           2,502.58                     \n","1374                                           2,796.46                     \n","1375                                           2,728.29                     \n","1376                                           2,664.75                     "],"text/html":["\n","  <div id=\"df-f2d7366c-a49d-418e-92d6-ccc7925b5a14\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>State</th>\n","      <th>FAH sales per capita nominal U.S. dollars with taxes and tips</th>\n","      <th>FAFH sales per capita nominal U.S. dollars with taxes and tips</th>\n","      <th>Total sales per capita nominal U.S. dollars with taxes and tips</th>\n","      <th>FAH sales per capita constant 1988 U.S. dollars with taxes and tips</th>\n","      <th>FAFH sales per capita constant 1988 U.S. dollars with taxes and tips</th>\n","      <th>Total sales per capita constant 1988 U.S. dollars with taxes and tips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1372</th>\n","      <td>2019</td>\n","      <td>Wyoming</td>\n","      <td>2,873.98</td>\n","      <td>2,851.21</td>\n","      <td>5,725.19</td>\n","      <td>1,336.29</td>\n","      <td>1,196.14</td>\n","      <td>2,532.43</td>\n","    </tr>\n","    <tr>\n","      <th>1373</th>\n","      <td>2020</td>\n","      <td>Wyoming</td>\n","      <td>3,121.94</td>\n","      <td>2,758.76</td>\n","      <td>5,880.70</td>\n","      <td>1,395.92</td>\n","      <td>1,106.66</td>\n","      <td>2,502.58</td>\n","    </tr>\n","    <tr>\n","      <th>1374</th>\n","      <td>2021</td>\n","      <td>Wyoming</td>\n","      <td>3,389.81</td>\n","      <td>3,514.07</td>\n","      <td>6,903.87</td>\n","      <td>1,452.35</td>\n","      <td>1,344.11</td>\n","      <td>2,796.46</td>\n","    </tr>\n","    <tr>\n","      <th>1375</th>\n","      <td>2022</td>\n","      <td>Wyoming</td>\n","      <td>3,591.28</td>\n","      <td>3,778.54</td>\n","      <td>7,369.83</td>\n","      <td>1,381.16</td>\n","      <td>1,347.13</td>\n","      <td>2,728.29</td>\n","    </tr>\n","    <tr>\n","      <th>1376</th>\n","      <td>2023</td>\n","      <td>Wyoming</td>\n","      <td>3,638.57</td>\n","      <td>4,000.32</td>\n","      <td>7,638.89</td>\n","      <td>1,337.45</td>\n","      <td>1,327.31</td>\n","      <td>2,664.75</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2d7366c-a49d-418e-92d6-ccc7925b5a14')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f2d7366c-a49d-418e-92d6-ccc7925b5a14 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f2d7366c-a49d-418e-92d6-ccc7925b5a14');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b6f3e04e-2fde-4312-9ba8-bb35d98c79e4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6f3e04e-2fde-4312-9ba8-bb35d98c79e4')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b6f3e04e-2fde-4312-9ba8-bb35d98c79e4 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"sales_percapita\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2019,\n        \"max\": 2023,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2020,\n          2023,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Wyoming\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales per capita nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"3,121.94\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales per capita nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2,758.76\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales per capita nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"5,880.70\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales per capita constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"1,395.92\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales per capita constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"1,106.66\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales per capita constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2,502.58\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}],"source":["# looking at the end of each data set\n","sales_percapita.tail()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H8mGvYDdhTYF","outputId":"103408e0-29d9-4ac5-bdc3-11227011735f","executionInfo":{"status":"ok","timestamp":1748319543525,"user_tz":300,"elapsed":8,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(299, 4)"]},"metadata":{},"execution_count":5}],"source":["# number of rows & columns\n","rec_density.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"xLsHgb8niciE","outputId":"e0697986-dcaa-48ed-f90d-7a9211d988b3","executionInfo":{"status":"ok","timestamp":1748319543558,"user_tz":300,"elapsed":35,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Year           State  \\\n","1000  1998          Oregon   \n","463   2001        Kentucky   \n","540   1997        Maryland   \n","901   2007  North Carolina   \n","857   2017      New Mexico   \n","698   2020        Missouri   \n","140   2002        Colorado   \n","709   2004         Montana   \n","1366  2013         Wyoming   \n","1221  2003         Vermont   \n","\n","     FAH sales million nominal U.S. dollars with taxes and tips  \\\n","1000                                           4,930.35           \n","463                                            5,858.93           \n","540                                            7,652.77           \n","901                                           17,011.12           \n","857                                            4,876.20           \n","698                                           15,516.24           \n","140                                            8,067.49           \n","709                                            1,775.34           \n","1366                                           1,407.38           \n","1221                                           1,093.59           \n","\n","     FAFH sales million nominal U.S. dollars with taxes and tips  \\\n","1000                                           3,603.21            \n","463                                            4,454.42            \n","540                                            5,274.06            \n","901                                           14,541.97            \n","857                                            5,054.35            \n","698                                           13,798.16            \n","140                                            6,980.75            \n","709                                            1,218.29            \n","1366                                            1172.69            \n","1221                                             768.68            \n","\n","     Total sales million nominal U.S. dollars with taxes and tips  \\\n","1000                                           8,533.56             \n","463                                           10,313.34             \n","540                                           12,926.83             \n","901                                           31,553.09             \n","857                                            9,930.55             \n","698                                           29,314.40             \n","140                                           15,048.24             \n","709                                            2,993.63             \n","1366                                           2,580.07             \n","1221                                           1,862.26             \n","\n","     FAH sales million constant 1988 U.S. dollars with taxes and tips  \\\n","1000                                             3420.1                 \n","463                                            4,001.81                 \n","540                                            5,691.53                 \n","901                                              9966.7                 \n","857                                            2,311.86                 \n","698                                            7,634.71                 \n","140                                            5,065.02                 \n","709                                            1,046.33                 \n","1366                                             687.24                 \n","1221                                             718.59                 \n","\n","     FAFH sales million constant 1988 U.S. dollars with taxes and tips  \\\n","1000                                            2738.99                  \n","463                                            3,097.84                  \n","540                                            4,049.85                  \n","901                                             8541.66                  \n","857                                            2,270.60                  \n","698                                            5,679.01                  \n","140                                            4,767.93                  \n","709                                              791.92                  \n","1366                                             592.38                  \n","1221                                             524.63                  \n","\n","     Total sales million constant 1988 U.S. dollars with taxes and tips  \n","1000                                           6,159.09                  \n","463                                            7,099.65                  \n","540                                            9,741.38                  \n","901                                           18,508.36                  \n","857                                            4,582.46                  \n","698                                           13,313.72                  \n","140                                            9,832.95                  \n","709                                            1,838.25                  \n","1366                                           1,279.62                  \n","1221                                           1,243.22                  "],"text/html":["\n","  <div id=\"df-ef59b4fb-894a-4083-84b0-a14e0c85b10f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>State</th>\n","      <th>FAH sales million nominal U.S. dollars with taxes and tips</th>\n","      <th>FAFH sales million nominal U.S. dollars with taxes and tips</th>\n","      <th>Total sales million nominal U.S. dollars with taxes and tips</th>\n","      <th>FAH sales million constant 1988 U.S. dollars with taxes and tips</th>\n","      <th>FAFH sales million constant 1988 U.S. dollars with taxes and tips</th>\n","      <th>Total sales million constant 1988 U.S. dollars with taxes and tips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1000</th>\n","      <td>1998</td>\n","      <td>Oregon</td>\n","      <td>4,930.35</td>\n","      <td>3,603.21</td>\n","      <td>8,533.56</td>\n","      <td>3420.1</td>\n","      <td>2738.99</td>\n","      <td>6,159.09</td>\n","    </tr>\n","    <tr>\n","      <th>463</th>\n","      <td>2001</td>\n","      <td>Kentucky</td>\n","      <td>5,858.93</td>\n","      <td>4,454.42</td>\n","      <td>10,313.34</td>\n","      <td>4,001.81</td>\n","      <td>3,097.84</td>\n","      <td>7,099.65</td>\n","    </tr>\n","    <tr>\n","      <th>540</th>\n","      <td>1997</td>\n","      <td>Maryland</td>\n","      <td>7,652.77</td>\n","      <td>5,274.06</td>\n","      <td>12,926.83</td>\n","      <td>5,691.53</td>\n","      <td>4,049.85</td>\n","      <td>9,741.38</td>\n","    </tr>\n","    <tr>\n","      <th>901</th>\n","      <td>2007</td>\n","      <td>North Carolina</td>\n","      <td>17,011.12</td>\n","      <td>14,541.97</td>\n","      <td>31,553.09</td>\n","      <td>9966.7</td>\n","      <td>8541.66</td>\n","      <td>18,508.36</td>\n","    </tr>\n","    <tr>\n","      <th>857</th>\n","      <td>2017</td>\n","      <td>New Mexico</td>\n","      <td>4,876.20</td>\n","      <td>5,054.35</td>\n","      <td>9,930.55</td>\n","      <td>2,311.86</td>\n","      <td>2,270.60</td>\n","      <td>4,582.46</td>\n","    </tr>\n","    <tr>\n","      <th>698</th>\n","      <td>2020</td>\n","      <td>Missouri</td>\n","      <td>15,516.24</td>\n","      <td>13,798.16</td>\n","      <td>29,314.40</td>\n","      <td>7,634.71</td>\n","      <td>5,679.01</td>\n","      <td>13,313.72</td>\n","    </tr>\n","    <tr>\n","      <th>140</th>\n","      <td>2002</td>\n","      <td>Colorado</td>\n","      <td>8,067.49</td>\n","      <td>6,980.75</td>\n","      <td>15,048.24</td>\n","      <td>5,065.02</td>\n","      <td>4,767.93</td>\n","      <td>9,832.95</td>\n","    </tr>\n","    <tr>\n","      <th>709</th>\n","      <td>2004</td>\n","      <td>Montana</td>\n","      <td>1,775.34</td>\n","      <td>1,218.29</td>\n","      <td>2,993.63</td>\n","      <td>1,046.33</td>\n","      <td>791.92</td>\n","      <td>1,838.25</td>\n","    </tr>\n","    <tr>\n","      <th>1366</th>\n","      <td>2013</td>\n","      <td>Wyoming</td>\n","      <td>1,407.38</td>\n","      <td>1172.69</td>\n","      <td>2,580.07</td>\n","      <td>687.24</td>\n","      <td>592.38</td>\n","      <td>1,279.62</td>\n","    </tr>\n","    <tr>\n","      <th>1221</th>\n","      <td>2003</td>\n","      <td>Vermont</td>\n","      <td>1,093.59</td>\n","      <td>768.68</td>\n","      <td>1,862.26</td>\n","      <td>718.59</td>\n","      <td>524.63</td>\n","      <td>1,243.22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef59b4fb-894a-4083-84b0-a14e0c85b10f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ef59b4fb-894a-4083-84b0-a14e0c85b10f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ef59b4fb-894a-4083-84b0-a14e0c85b10f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c42796aa-12bd-4d93-a767-b66f7d99e4dc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c42796aa-12bd-4d93-a767-b66f7d99e4dc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c42796aa-12bd-4d93-a767-b66f7d99e4dc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"sales\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 1997,\n        \"max\": 2020,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2013,\n          2001,\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Wyoming\",\n          \"Kentucky\",\n          \"Missouri\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales million nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"1,407.38\",\n          \"5,858.93\",\n          \"15,516.24\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales million nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"1172.69\",\n          \"4,454.42\",\n          \"13,798.16\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales million nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"2,580.07\",\n          \"10,313.34\",\n          \"29,314.40\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales million constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"687.24\",\n          \"4,001.81\",\n          \"7,634.71\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales million constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"592.38\",\n          \"3,097.84\",\n          \"5,679.01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales million constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"1,279.62\",\n          \"7,099.65\",\n          \"13,313.72\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}],"source":["# sampling each data set\n","sales.sample(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"o8RlXR-ogmrm","outputId":"47b5a71c-032f-4c08-bb31-0d9b4e7e3f40","executionInfo":{"status":"ok","timestamp":1748319543562,"user_tz":300,"elapsed":4,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Year                                                                           int64\n","State                                                                         object\n","FAH sales million nominal U.S. dollars without taxes and tips                 object\n","FAFH sales million nominal U.S. dollars without taxes and tips                object\n","Total sales million nominal U.S. dollars without taxes and tips               object\n","FAH sales million constant 1988 U.S. dollars without taxes and tips           object\n","FAFH sales million constant 1988 U.S. dollars without taxes and tips          object\n","Total food sales million constant 1988 U.S. dollars without taxes and tips    object\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Year</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>State</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>FAH sales million nominal U.S. dollars without taxes and tips</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>FAFH sales million nominal U.S. dollars without taxes and tips</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Total sales million nominal U.S. dollars without taxes and tips</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>FAH sales million constant 1988 U.S. dollars without taxes and tips</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>FAFH sales million constant 1988 U.S. dollars without taxes and tips</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Total food sales million constant 1988 U.S. dollars without taxes and tips</th>\n","      <td>object</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":7}],"source":["# looking at data types\n","sales_NTT.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"IWzLOPxNgxNF","outputId":"ef788e1f-9d69-40d9-8da4-6394caaa081b","executionInfo":{"status":"ok","timestamp":1748319543608,"user_tz":300,"elapsed":45,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Year                                                                          27\n","State                                                                         51\n","FAH sales per capita nominal U.S. dollars without taxes and tips            1374\n","FAFH sales per capita nominal U.S. dollars without taxes and tips           1371\n","Total sales per capita nominal U.S. dollars without taxes and tips          1374\n","FAH sales per capita constant 1988 U.S. dollars without taxes and tips      1353\n","FAFH sales per capita constant 1988 U.S. dollars without taxes and tips     1360\n","Total sales per capita constant 1988 U.S. dollars without taxes and tips    1367\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Year</th>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>State</th>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>FAH sales per capita nominal U.S. dollars without taxes and tips</th>\n","      <td>1374</td>\n","    </tr>\n","    <tr>\n","      <th>FAFH sales per capita nominal U.S. dollars without taxes and tips</th>\n","      <td>1371</td>\n","    </tr>\n","    <tr>\n","      <th>Total sales per capita nominal U.S. dollars without taxes and tips</th>\n","      <td>1374</td>\n","    </tr>\n","    <tr>\n","      <th>FAH sales per capita constant 1988 U.S. dollars without taxes and tips</th>\n","      <td>1353</td>\n","    </tr>\n","    <tr>\n","      <th>FAFH sales per capita constant 1988 U.S. dollars without taxes and tips</th>\n","      <td>1360</td>\n","    </tr>\n","    <tr>\n","      <th>Total sales per capita constant 1988 U.S. dollars without taxes and tips</th>\n","      <td>1367</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":8}],"source":["# looking at unique values in each column\n","sales_percapNTT.nunique()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uqaNilwuhBlz","outputId":"d772420a-08b7-4e1c-9ec4-43d9e3c2a72f","executionInfo":{"status":"ok","timestamp":1748319543611,"user_tz":300,"elapsed":10,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Demographics', 'Survey years', 'Sample size', 'Table']"]},"metadata":{},"execution_count":9}],"source":["# list of column names\n","list(size.columns)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"nlbKUEO8hLH0","outputId":"9ae20b51-6383-4cc8-b869-5def4bec342b","executionInfo":{"status":"ok","timestamp":1748319543666,"user_tz":300,"elapsed":56,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Nutrient                    0\n","Food source                 0\n","Measurement                 0\n","Nutrient:Food source        0\n","Survey years:Variable       0\n","Value                    1776\n","Table                       0\n","Demographics                0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Nutrient</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Food source</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Measurement</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Nutrient:Food source</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Survey years:Variable</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Value</th>\n","      <td>1776</td>\n","    </tr>\n","    <tr>\n","      <th>Table</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Demographics</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":10}],"source":["# check for null values in data\n","nut_intake.isna().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YuCLDFRvql5t","outputId":"ac27a244-0eb3-454f-e26b-1cd49440c4eb","executionInfo":{"status":"ok","timestamp":1748319543690,"user_tz":300,"elapsed":25,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Rows where Value is null:\n","                            Nutrient   Food source Measurement  \\\n","7397                        Energy   FAFH: School    Calories   \n","7404                       Calcium   FAFH: School  Milligrams   \n","7411                Fiber, dietary   FAFH: School       Grams   \n","7418                          Iron   FAFH: School  Milligrams   \n","7425                        Protein  FAFH: School       Grams   \n","...                             ...           ...         ...   \n","36426                    Total Fat   FAFH: School       Grams   \n","36433        Saturated fatty acids   FAFH: School       Grams   \n","36440  Fatty acids, monounsaturated  FAFH: School       Grams   \n","36447  Fatty acids, polyunsaturated  FAFH: School       Grams   \n","36454                        Sodium  FAFH: School  Milligrams   \n","\n","                            Nutrient:Food source Survey years:Variable  Value  \\\n","7397                        Energy :FAFH: School        1977-1978-Mean    NaN   \n","7404                       Calcium :FAFH: School        1977-1978-Mean    NaN   \n","7411                Fiber, dietary :FAFH: School        1977-1978-Mean    NaN   \n","7418                          Iron :FAFH: School        1977-1978-Mean    NaN   \n","7425                        Protein:FAFH: School        1977-1978-Mean    NaN   \n","...                                          ...                   ...    ...   \n","36426                    Total Fat :FAFH: School  2017-2018-SE of mean    NaN   \n","36433        Saturated fatty acids :FAFH: School  2017-2018-SE of mean    NaN   \n","36440  Fatty acids, monounsaturated:FAFH: School  2017-2018-SE of mean    NaN   \n","36447  Fatty acids, polyunsaturated:FAFH: School  2017-2018-SE of mean    NaN   \n","36454                        Sodium:FAFH: School  2017-2018-SE of mean    NaN   \n","\n","                                                   Table  \\\n","7397   Table 2B2-Daily nutrient intake by food source...   \n","7404   Table 2B2-Daily nutrient intake by food source...   \n","7411   Table 2B2-Daily nutrient intake by food source...   \n","7418   Table 2B2-Daily nutrient intake by food source...   \n","7425   Table 2B2-Daily nutrient intake by food source...   \n","...                                                  ...   \n","36426  Table 2F3-Daily nutrient intake by food source...   \n","36433  Table 2F3-Daily nutrient intake by food source...   \n","36440  Table 2F3-Daily nutrient intake by food source...   \n","36447  Table 2F3-Daily nutrient intake by food source...   \n","36454  Table 2F3-Daily nutrient intake by food source...   \n","\n","                  Demographics  \n","7397                Ages 20-64  \n","7404                Ages 20-64  \n","7411                Ages 20-64  \n","7418                Ages 20-64  \n","7425                Ages 20-64  \n","...                        ...  \n","36426  Edu. - College attended  \n","36433  Edu. - College attended  \n","36440  Edu. - College attended  \n","36447  Edu. - College attended  \n","36454  Edu. - College attended  \n","\n","[1776 rows x 8 columns]\n"]}],"source":["# created new dataframe to investigate observations with nulls in \"Value\" column\n","null_intake = nut_intake[nut_intake['Value'].isna()]\n","print(\"Rows where Value is null:\\n\", null_intake)"]},{"cell_type":"markdown","metadata":{"jp-MarkdownHeadingCollapsed":true,"tags":[],"id":"05OA0JMRaCta"},"source":["### Key Observations\n","\n","We applied a consistent set of quality checks across all datasets (e.g., checking nulls, inspecting column names, evaluating structure). Below is a summary of key issues and opportunities found during that review:\n","\n","#### CPI Data\n","- Hierarchical structure with 8 columns, many containing NULLs.\n","- Column labels lacked clarity; several fields were removed or renamed.\n","\n","#### Food Sales Data (4 tables total)\n","- All dollar amounts were stored as strings and required conversion to numeric types.\n","- No missing values detected.\n","- Time range spans 1997 to 2023.\n","\n","#### Sales Sample Size Description Data\n","- Survey years were stored as ranges, not tidy — required expansion into individual rows.\n","- Three NULL values in the “Sample size” field were dropped.\n","- Covers 1977 to 2018.\n","\n","#### Nutrient Intake Data\n","- “Survey years:Variable” combined year ranges and variable labels in one field — needed splitting.\n","- ~4.9% missing values in the “Value” field (1,776 out of 36,456).\n","- Several column names required renaming for clarity.\n","\n","#### Food Group Intake Data\n","- Same structure issues as Nutrient Intake: untidy year/variable field, unclear column labels.\n","- ~4.9% missing values (5,328 out of 109,368).\n","\n","#### Food Density of Food Groups Data\n","- Same structure and quality issues as Food Group Intake.\n","- Also ~4.9% missing values (5,328 out of 109,368).\n","\n","#### Recommended Food Density Data\n","- Some uninformative column names.\n","- “Value” column stored as a string, despite being numeric — required conversion."]},{"cell_type":"markdown","metadata":{"tags":[],"id":"SASZgnCMaCta"},"source":["## 2. Data Cleaning\n","\n","After identifying quality issues in each dataset, we cleaned and transformed the data to make it tidy, analysis-ready, and consistent across sources. Below are the major cleaning steps organized by dataset."]},{"cell_type":"markdown","metadata":{"id":"IPTxyeGHmRvD"},"source":["CPI Data Cleaning\n","\n","In order to clean the CPI data set, we had to decide which aggregated levels of the hierarchy would be most useful for our analysis and which attributes were most relevant. When looking at the data, we decided to remove the first column called Top-level which only had one unique value (\"All Food\") and the Low-level and Disaggregate columns which were too granular for our analysis. We also renamed the columns to more relevant values."]},{"cell_type":"markdown","metadata":{"id":"CUs6CxcsaCta"},"source":["### Cleaning the CPI Data\n","\n","- Removed redundant hierarchical levels\n","- Renamed unclear columns\n","- Filtered to 3 relevant attributes\n","- Converted percent change values to numeric"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_dR0bEKmh8pu"},"outputs":[],"source":["# CPI Data Cleaning\n","CPI = CPI.drop(columns=['Top-level', 'Low-level', 'Disaggregate'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9lik3oJKjUV2"},"outputs":[],"source":["# rename columns\n","# note to check with team if homecooked or takeout is a good field name\n","CPI = CPI.rename(columns = {'Aggregate': 'Homecooked or Takeout', 'Mid-level':'Food Category'})"]},{"cell_type":"markdown","metadata":{"id":"yvFyTYaaqEP0"},"source":["Next, we reviewed the Attribute column to see what information we want to keep. From the unique values, we determined that we wanted to keep the following data points: Annual 2024, 20-year historical average, Year-over-year March 2024 to March 2025."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hLErWfmepzlp","outputId":"7983d4ce-52a8-4e0c-8a42-39edf229a36d","executionInfo":{"status":"ok","timestamp":1748319543716,"user_tz":300,"elapsed":27,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Relative importance',\n","       'Month-to-month February 2025 to March 2025',\n","       'Year-over-year March 2024 to March 2025',\n","       'Year-to-date avg. 2025 to avg. 2024', 'Annual 2022',\n","       'Annual 2023', 'Annual 2024', '20-year historical average',\n","       'Lower bound of prediction interval 2025',\n","       'Mid point of prediction interval 2025',\n","       'Upper bound of prediction interval 2025'], dtype=object)"]},"metadata":{},"execution_count":14}],"source":["# Unique values under the Attribute column\n","\n","CPI['Attribute'].unique()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LTBrOiENeTnn"},"outputs":[],"source":["#filtered for rows with the attributes chosen\n","CPI_final = CPI[CPI['Attribute'].isin(['Year-over-year March 2024 to March 2025', 'Annual 2024', '20-year historical average'])]"]},{"cell_type":"markdown","metadata":{"id":"sKaxLw0RjlT_"},"source":["The attributes chosen all had the same unit (percent change) so we dropped the Unit column and renamed the Value column."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ivd9WT5djk_g"},"outputs":[],"source":["# drop column 'Unit'\n","CPI_final = CPI.drop(columns=['Unit'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fmNd7Y-Jj2Ue"},"outputs":[],"source":["# renamed column 'Value'\n","CPI_final = CPI_final.rename(columns = {'Value':'Percent Change'})"]},{"cell_type":"markdown","metadata":{"id":"D6ZuqADzj77y"},"source":["Then the rows that aggregated data at the top level of the hierarchy were dropped by removing observations that had NULL values in the \"Homecooked or Takeout' and \"Food Category' columns."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XY_iaXJ0kTQy"},"outputs":[],"source":["CPI_final.dropna(subset= ['Homecooked or Takeout'], inplace = True) #drop rows with NULL\n","CPI_final.dropna(subset= ['Food Category'], inplace = True) #drop rows with NULL"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"Z-pZSolikVNv","outputId":"a51f0d77-a50a-4e3f-ffc0-dbb4016a076d","executionInfo":{"status":"ok","timestamp":1748319543772,"user_tz":300,"elapsed":16,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Homecooked or Takeout    0\n","Food Category            0\n","Attribute                0\n","Percent Change           0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Homecooked or Takeout</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Food Category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Attribute</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Percent Change</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":19}],"source":["CPI_final.isna().sum() # check for null values in data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5N0PGgkekaAV"},"outputs":[],"source":["# reset index\n","CPI_final.reset_index(drop=True, inplace=True)\n","\n","#create copy\n","CPI_final = CPI_final.copy(deep=True) # actual copy"]},{"cell_type":"markdown","metadata":{"id":"g152shSvlSAS"},"source":["### Cleaning the Sales Data (Nominal & Per Capita)\n","\n","- Converted dollar strings to numeric\n","- Standardized column names\n","- Kept both total and per capita values (with and without taxes/tips)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"dlLNid__qD_A","outputId":"4db4fab4-77ad-4faa-b5a1-87f2cfcb005e","executionInfo":{"status":"ok","timestamp":1748319543860,"user_tz":300,"elapsed":55,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Year    State  \\\n","0     1997  Alabama   \n","1     1998  Alabama   \n","2     1999  Alabama   \n","3     2000  Alabama   \n","4     2001  Alabama   \n","...    ...      ...   \n","1372  2019  Wyoming   \n","1373  2020  Wyoming   \n","1374  2021  Wyoming   \n","1375  2022  Wyoming   \n","1376  2023  Wyoming   \n","\n","      FAH sales million nominal U.S. dollars with taxes and tips  \\\n","0                                               5789.24            \n","1                                               6064.19            \n","2                                               6408.42            \n","3                                               6751.17            \n","4                                               6892.75            \n","...                                                 ...            \n","1372                                            1667.24            \n","1373                                            1803.43            \n","1374                                            1964.56            \n","1375                                            2088.80            \n","1376                                            2125.13            \n","\n","      FAFH sales million nominal U.S. dollars with taxes and tips  \\\n","0                                               3465.67             \n","1                                               3841.10             \n","2                                               4101.04             \n","3                                               4352.40             \n","4                                               4604.09             \n","...                                                 ...             \n","1372                                            1654.03             \n","1373                                            1593.64             \n","1374                                            2036.57             \n","1375                                            2197.71             \n","1376                                            2336.42             \n","\n","      Total sales million nominal U.S. dollars with taxes and tips  \\\n","0                                               9254.92              \n","1                                               9905.29              \n","2                                              10509.46              \n","3                                              11103.57              \n","4                                              11496.84              \n","...                                                 ...              \n","1372                                            3321.27              \n","1373                                            3397.07              \n","1374                                            4001.13              \n","1375                                            4286.50              \n","1376                                            4461.55              \n","\n","      FAH sales million constant 1988 U.S. dollars with taxes and tips  \\\n","0                                               4305.59                  \n","1                                               4444.25                  \n","2                                               4623.19                  \n","3                                               4743.07                  \n","4                                               4707.94                  \n","...                                                 ...                  \n","1372                                             775.20                  \n","1373                                             806.37                  \n","1374                                             841.70                  \n","1375                                             803.32                  \n","1376                                             781.15                  \n","\n","      FAFH sales million constant 1988 U.S. dollars with taxes and tips  \\\n","0                                               2661.22                   \n","1                                               2873.78                   \n","2                                               2995.03                   \n","3                                               3108.13                   \n","4                                               3201.94                   \n","...                                                 ...                   \n","1372                                             693.90                   \n","1373                                             639.28                   \n","1374                                             778.98                   \n","1375                                             783.53                   \n","1376                                             775.22                   \n","\n","      Total sales million constant 1988 U.S. dollars with taxes and tips  \n","0                                               6966.81                   \n","1                                               7318.04                   \n","2                                               7618.22                   \n","3                                               7851.20                   \n","4                                               7909.88                   \n","...                                                 ...                   \n","1372                                            1469.10                   \n","1373                                            1445.65                   \n","1374                                            1620.68                   \n","1375                                            1586.85                   \n","1376                                            1556.37                   \n","\n","[1377 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-c39a78c1-2b5a-4b6d-8944-08ad09ccbc51\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>State</th>\n","      <th>FAH sales million nominal U.S. dollars with taxes and tips</th>\n","      <th>FAFH sales million nominal U.S. dollars with taxes and tips</th>\n","      <th>Total sales million nominal U.S. dollars with taxes and tips</th>\n","      <th>FAH sales million constant 1988 U.S. dollars with taxes and tips</th>\n","      <th>FAFH sales million constant 1988 U.S. dollars with taxes and tips</th>\n","      <th>Total sales million constant 1988 U.S. dollars with taxes and tips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1997</td>\n","      <td>Alabama</td>\n","      <td>5789.24</td>\n","      <td>3465.67</td>\n","      <td>9254.92</td>\n","      <td>4305.59</td>\n","      <td>2661.22</td>\n","      <td>6966.81</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1998</td>\n","      <td>Alabama</td>\n","      <td>6064.19</td>\n","      <td>3841.10</td>\n","      <td>9905.29</td>\n","      <td>4444.25</td>\n","      <td>2873.78</td>\n","      <td>7318.04</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1999</td>\n","      <td>Alabama</td>\n","      <td>6408.42</td>\n","      <td>4101.04</td>\n","      <td>10509.46</td>\n","      <td>4623.19</td>\n","      <td>2995.03</td>\n","      <td>7618.22</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2000</td>\n","      <td>Alabama</td>\n","      <td>6751.17</td>\n","      <td>4352.40</td>\n","      <td>11103.57</td>\n","      <td>4743.07</td>\n","      <td>3108.13</td>\n","      <td>7851.20</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2001</td>\n","      <td>Alabama</td>\n","      <td>6892.75</td>\n","      <td>4604.09</td>\n","      <td>11496.84</td>\n","      <td>4707.94</td>\n","      <td>3201.94</td>\n","      <td>7909.88</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1372</th>\n","      <td>2019</td>\n","      <td>Wyoming</td>\n","      <td>1667.24</td>\n","      <td>1654.03</td>\n","      <td>3321.27</td>\n","      <td>775.20</td>\n","      <td>693.90</td>\n","      <td>1469.10</td>\n","    </tr>\n","    <tr>\n","      <th>1373</th>\n","      <td>2020</td>\n","      <td>Wyoming</td>\n","      <td>1803.43</td>\n","      <td>1593.64</td>\n","      <td>3397.07</td>\n","      <td>806.37</td>\n","      <td>639.28</td>\n","      <td>1445.65</td>\n","    </tr>\n","    <tr>\n","      <th>1374</th>\n","      <td>2021</td>\n","      <td>Wyoming</td>\n","      <td>1964.56</td>\n","      <td>2036.57</td>\n","      <td>4001.13</td>\n","      <td>841.70</td>\n","      <td>778.98</td>\n","      <td>1620.68</td>\n","    </tr>\n","    <tr>\n","      <th>1375</th>\n","      <td>2022</td>\n","      <td>Wyoming</td>\n","      <td>2088.80</td>\n","      <td>2197.71</td>\n","      <td>4286.50</td>\n","      <td>803.32</td>\n","      <td>783.53</td>\n","      <td>1586.85</td>\n","    </tr>\n","    <tr>\n","      <th>1376</th>\n","      <td>2023</td>\n","      <td>Wyoming</td>\n","      <td>2125.13</td>\n","      <td>2336.42</td>\n","      <td>4461.55</td>\n","      <td>781.15</td>\n","      <td>775.22</td>\n","      <td>1556.37</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1377 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c39a78c1-2b5a-4b6d-8944-08ad09ccbc51')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c39a78c1-2b5a-4b6d-8944-08ad09ccbc51 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c39a78c1-2b5a-4b6d-8944-08ad09ccbc51');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d824946e-0b13-4e8c-ba93-50a89adaf17a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d824946e-0b13-4e8c-ba93-50a89adaf17a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d824946e-0b13-4e8c-ba93-50a89adaf17a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_6144628c-8e01-4741-b7c0-6215a085edca\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sales_final')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6144628c-8e01-4741-b7c0-6215a085edca button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sales_final');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sales_final","summary":"{\n  \"name\": \"sales_final\",\n  \"rows\": 1377,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 1997,\n        \"max\": 2023,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          2005,\n          2010,\n          2006\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Texas\",\n          \"South Carolina\",\n          \"Virginia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales million nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15321.635254102628,\n        \"min\": 597.82,\n        \"max\": 138141.39,\n        \"num_unique_values\": 1377,\n        \"samples\": [\n          10238.34,\n          4545.81,\n          8149.84\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales million nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17345.032743111948,\n        \"min\": 538.61,\n        \"max\": 199997.55,\n        \"num_unique_values\": 1376,\n        \"samples\": [\n          9632.11,\n          9663.35,\n          2309.91\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales million nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32480.543509618474,\n        \"min\": 1395.85,\n        \"max\": 338138.94,\n        \"num_unique_values\": 1377,\n        \"samples\": [\n          18990.92,\n          8686.99,\n          15143.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales million constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7459.889963839278,\n        \"min\": 415.14,\n        \"max\": 51442.06,\n        \"num_unique_values\": 1377,\n        \"samples\": [\n          6371.38,\n          2156.45,\n          5557.15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales million constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7716.2600334280605,\n        \"min\": 414.83,\n        \"max\": 66359.16,\n        \"num_unique_values\": 1377,\n        \"samples\": [\n          5479.88,\n          1817.06,\n          4793.58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales million constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15105.038363033891,\n        \"min\": 1037.46,\n        \"max\": 117136.5,\n        \"num_unique_values\": 1377,\n        \"samples\": [\n          11851.26,\n          3973.51,\n          10350.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}],"source":["# Clean dollar fields in sales data\n","def clean_dollar_columns(df, cols):\n","    df[cols] = df[cols].replace(',', '', regex=True).apply(pd.to_numeric, errors='coerce')\n","    return df\n","\n","sales_final = clean_dollar_columns(sales.copy(), [\n","    'FAH sales million nominal U.S. dollars with taxes and tips',\n","    'FAFH sales million nominal U.S. dollars with taxes and tips',\n","    'Total sales million nominal U.S. dollars with taxes and tips',\n","    'FAH sales million constant 1988 U.S. dollars with taxes and tips',\n","    'FAFH sales million constant 1988 U.S. dollars with taxes and tips',\n","    'Total sales million constant 1988 U.S. dollars with taxes and tips'\n","])\n","sales_final"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"_tdIeRozpWVL","outputId":"2853f9af-53c3-4aa0-bf17-44f7a886a3b9","executionInfo":{"status":"ok","timestamp":1748319543942,"user_tz":300,"elapsed":84,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Year    State  \\\n","0     1997  Alabama   \n","1     1998  Alabama   \n","2     1999  Alabama   \n","3     2000  Alabama   \n","4     2001  Alabama   \n","...    ...      ...   \n","1372  2019  Wyoming   \n","1373  2020  Wyoming   \n","1374  2021  Wyoming   \n","1375  2022  Wyoming   \n","1376  2023  Wyoming   \n","\n","      FAH sales per capita nominal U.S. dollars with taxes and tips  \\\n","0                                               1340.02               \n","1                                               1393.73               \n","2                                               1466.50               \n","3                                               1516.38               \n","4                                               1542.82               \n","...                                                 ...               \n","1372                                            2873.98               \n","1373                                            3121.94               \n","1374                                            3389.81               \n","1375                                            3591.28               \n","1376                                            3638.57               \n","\n","      FAFH sales per capita nominal U.S. dollars with taxes and tips  \\\n","0                                                802.19                \n","1                                                882.80                \n","2                                                938.48                \n","3                                                977.59                \n","4                                               1030.54                \n","...                                                 ...                \n","1372                                            2851.21                \n","1373                                            2758.76                \n","1374                                            3514.07                \n","1375                                            3778.54                \n","1376                                            4000.32                \n","\n","      Total sales per capita nominal U.S. dollars with taxes and tips  \\\n","0                                               2142.20                 \n","1                                               2276.54                 \n","2                                               2404.99                 \n","3                                               2493.97                 \n","4                                               2573.36                 \n","...                                                 ...                 \n","1372                                            5725.19                 \n","1373                                            5880.70                 \n","1374                                            6903.87                 \n","1375                                            7369.83                 \n","1376                                            7638.89                 \n","\n","      FAH sales per capita constant 1988 U.S. dollars with taxes and tips  \\\n","0                                                996.60                     \n","1                                               1021.42                     \n","2                                               1057.97                     \n","3                                               1065.34                     \n","4                                               1053.79                     \n","...                                                 ...                     \n","1372                                            1336.29                     \n","1373                                            1395.92                     \n","1374                                            1452.35                     \n","1375                                            1381.16                     \n","1376                                            1337.45                     \n","\n","      FAFH sales per capita constant 1988 U.S. dollars with taxes and tips  \\\n","0                                                615.98                      \n","1                                                660.48                      \n","2                                                685.38                      \n","3                                                698.12                      \n","4                                                716.70                      \n","...                                                 ...                      \n","1372                                            1196.14                      \n","1373                                            1106.66                      \n","1374                                            1344.11                      \n","1375                                            1347.13                      \n","1376                                            1327.31                      \n","\n","      Total sales per capita constant 1988 U.S. dollars with taxes and tips  \n","0                                               1612.58                      \n","1                                               1681.91                      \n","2                                               1743.35                      \n","3                                               1763.45                      \n","4                                               1770.48                      \n","...                                                 ...                      \n","1372                                            2532.43                      \n","1373                                            2502.58                      \n","1374                                            2796.46                      \n","1375                                            2728.29                      \n","1376                                            2664.75                      \n","\n","[1377 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-605cec5c-1511-4609-a73d-778eafe0cd28\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>State</th>\n","      <th>FAH sales per capita nominal U.S. dollars with taxes and tips</th>\n","      <th>FAFH sales per capita nominal U.S. dollars with taxes and tips</th>\n","      <th>Total sales per capita nominal U.S. dollars with taxes and tips</th>\n","      <th>FAH sales per capita constant 1988 U.S. dollars with taxes and tips</th>\n","      <th>FAFH sales per capita constant 1988 U.S. dollars with taxes and tips</th>\n","      <th>Total sales per capita constant 1988 U.S. dollars with taxes and tips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1997</td>\n","      <td>Alabama</td>\n","      <td>1340.02</td>\n","      <td>802.19</td>\n","      <td>2142.20</td>\n","      <td>996.60</td>\n","      <td>615.98</td>\n","      <td>1612.58</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1998</td>\n","      <td>Alabama</td>\n","      <td>1393.73</td>\n","      <td>882.80</td>\n","      <td>2276.54</td>\n","      <td>1021.42</td>\n","      <td>660.48</td>\n","      <td>1681.91</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1999</td>\n","      <td>Alabama</td>\n","      <td>1466.50</td>\n","      <td>938.48</td>\n","      <td>2404.99</td>\n","      <td>1057.97</td>\n","      <td>685.38</td>\n","      <td>1743.35</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2000</td>\n","      <td>Alabama</td>\n","      <td>1516.38</td>\n","      <td>977.59</td>\n","      <td>2493.97</td>\n","      <td>1065.34</td>\n","      <td>698.12</td>\n","      <td>1763.45</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2001</td>\n","      <td>Alabama</td>\n","      <td>1542.82</td>\n","      <td>1030.54</td>\n","      <td>2573.36</td>\n","      <td>1053.79</td>\n","      <td>716.70</td>\n","      <td>1770.48</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1372</th>\n","      <td>2019</td>\n","      <td>Wyoming</td>\n","      <td>2873.98</td>\n","      <td>2851.21</td>\n","      <td>5725.19</td>\n","      <td>1336.29</td>\n","      <td>1196.14</td>\n","      <td>2532.43</td>\n","    </tr>\n","    <tr>\n","      <th>1373</th>\n","      <td>2020</td>\n","      <td>Wyoming</td>\n","      <td>3121.94</td>\n","      <td>2758.76</td>\n","      <td>5880.70</td>\n","      <td>1395.92</td>\n","      <td>1106.66</td>\n","      <td>2502.58</td>\n","    </tr>\n","    <tr>\n","      <th>1374</th>\n","      <td>2021</td>\n","      <td>Wyoming</td>\n","      <td>3389.81</td>\n","      <td>3514.07</td>\n","      <td>6903.87</td>\n","      <td>1452.35</td>\n","      <td>1344.11</td>\n","      <td>2796.46</td>\n","    </tr>\n","    <tr>\n","      <th>1375</th>\n","      <td>2022</td>\n","      <td>Wyoming</td>\n","      <td>3591.28</td>\n","      <td>3778.54</td>\n","      <td>7369.83</td>\n","      <td>1381.16</td>\n","      <td>1347.13</td>\n","      <td>2728.29</td>\n","    </tr>\n","    <tr>\n","      <th>1376</th>\n","      <td>2023</td>\n","      <td>Wyoming</td>\n","      <td>3638.57</td>\n","      <td>4000.32</td>\n","      <td>7638.89</td>\n","      <td>1337.45</td>\n","      <td>1327.31</td>\n","      <td>2664.75</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1377 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-605cec5c-1511-4609-a73d-778eafe0cd28')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-605cec5c-1511-4609-a73d-778eafe0cd28 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-605cec5c-1511-4609-a73d-778eafe0cd28');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d9d15dcb-b449-4dbe-9426-f56dff80bdf6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d9d15dcb-b449-4dbe-9426-f56dff80bdf6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d9d15dcb-b449-4dbe-9426-f56dff80bdf6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_a447b78a-1a71-4979-9039-a2c5f9ff6e29\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sales_percapita_final')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a447b78a-1a71-4979-9039-a2c5f9ff6e29 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sales_percapita_final');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sales_percapita_final","summary":"{\n  \"name\": \"sales_percapita_final\",\n  \"rows\": 1377,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 1997,\n        \"max\": 2023,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          2005,\n          2010,\n          2006\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Texas\",\n          \"South Carolina\",\n          \"Virginia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales per capita nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 580.4415640672067,\n        \"min\": 892.49,\n        \"max\": 4156.88,\n        \"num_unique_values\": 1373,\n        \"samples\": [\n          3128.15,\n          2510.31,\n          3183.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales per capita nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 966.8325275126276,\n        \"min\": 751.8,\n        \"max\": 10643.99,\n        \"num_unique_values\": 1373,\n        \"samples\": [\n          2632.86,\n          3351.42,\n          3592.95\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales per capita nominal U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1412.6396937710078,\n        \"min\": 1843.02,\n        \"max\": 13961.68,\n        \"num_unique_values\": 1372,\n        \"samples\": [\n          5934.27,\n          6062.3,\n          6776.26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales per capita constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 159.56815923067248,\n        \"min\": 658.85,\n        \"max\": 1776.57,\n        \"num_unique_values\": 1357,\n        \"samples\": [\n          1618.57,\n          1048.02,\n          1081.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales per capita constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 347.3656941755111,\n        \"min\": 577.29,\n        \"max\": 3725.06,\n        \"num_unique_values\": 1366,\n        \"samples\": [\n          994.17,\n          979.51,\n          955.58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales per capita constant 1988 U.S. dollars with taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 396.7263375344274,\n        \"min\": 1388.86,\n        \"max\": 4998.71,\n        \"num_unique_values\": 1361,\n        \"samples\": [\n          2832.87,\n          1847.79,\n          1777.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}],"source":["sales_percapita_final = clean_dollar_columns(sales_percapita.copy(), [\n","    'FAH sales per capita nominal U.S. dollars with taxes and tips',\n","    'FAFH sales per capita nominal U.S. dollars with taxes and tips',\n","    'Total sales per capita nominal U.S. dollars with taxes and tips',\n","    'FAH sales per capita constant 1988 U.S. dollars with taxes and tips',\n","    'FAFH sales per capita constant 1988 U.S. dollars with taxes and tips',\n","    'Total sales per capita constant 1988 U.S. dollars with taxes and tips'\n","])\n","sales_percapita_final"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"m-P4or4hp217","outputId":"02fd689d-501d-44d9-b00c-93967a6f745b","executionInfo":{"status":"ok","timestamp":1748319543991,"user_tz":300,"elapsed":49,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Year    State  \\\n","0     1997  Alabama   \n","1     1998  Alabama   \n","2     1999  Alabama   \n","3     2000  Alabama   \n","4     2001  Alabama   \n","...    ...      ...   \n","1372  2019  Wyoming   \n","1373  2020  Wyoming   \n","1374  2021  Wyoming   \n","1375  2022  Wyoming   \n","1376  2023  Wyoming   \n","\n","      FAH sales million nominal U.S. dollars without taxes and tips  \\\n","0                                               5447.90               \n","1                                               5690.14               \n","2                                               5995.80               \n","3                                               6298.34               \n","4                                               6411.99               \n","...                                                 ...               \n","1372                                            1644.87               \n","1373                                            1779.59               \n","1374                                            1938.77               \n","1375                                            2063.55               \n","1376                                            2096.65               \n","\n","      FAFH sales million nominal U.S. dollars without taxes and tips  \\\n","0                                               3098.49                \n","1                                               3428.02                \n","2                                               3653.72                \n","3                                               3871.33                \n","4                                               4089.29                \n","...                                                 ...                \n","1372                                            1484.54                \n","1373                                            1433.19                \n","1374                                            1822.79                \n","1375                                            1970.82                \n","1376                                            2097.28                \n","\n","      Total sales million nominal U.S. dollars without taxes and tips  \\\n","0                                               8546.39                 \n","1                                               9118.16                 \n","2                                               9649.52                 \n","3                                              10169.67                 \n","4                                              10501.28                 \n","...                                                 ...                 \n","1372                                            3129.41                 \n","1373                                            3212.77                 \n","1374                                            3761.56                 \n","1375                                            4034.37                 \n","1376                                            4193.93                 \n","\n","      FAH sales million constant 1988 U.S. dollars without taxes and tips  \\\n","0                                               4051.72                     \n","1                                               4170.12                     \n","2                                               4325.52                     \n","3                                               4424.93                     \n","4                                               4379.57                     \n","...                                                 ...                     \n","1372                                             764.80                     \n","1373                                             795.71                     \n","1374                                             830.66                     \n","1375                                             793.61                     \n","1376                                             770.68                     \n","\n","      FAFH sales million constant 1988 U.S. dollars without taxes and tips  \\\n","0                                               2379.27                      \n","1                                               2564.73                      \n","2                                               2668.35                      \n","3                                               2764.59                      \n","4                                               2843.92                      \n","...                                                 ...                      \n","1372                                             622.79                      \n","1373                                             574.91                      \n","1374                                             697.21                      \n","1375                                             702.64                      \n","1376                                             695.88                      \n","\n","      Total food sales million constant 1988 U.S. dollars without taxes and tips  \n","0                                               6430.99                           \n","1                                               6734.85                           \n","2                                               6993.86                           \n","3                                               7189.52                           \n","4                                               7223.48                           \n","...                                                 ...                           \n","1372                                            1387.59                           \n","1373                                            1370.62                           \n","1374                                            1527.86                           \n","1375                                            1496.25                           \n","1376                                            1466.55                           \n","\n","[1377 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-bc86e246-5d1e-4854-9f24-ecdd6e91edec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>State</th>\n","      <th>FAH sales million nominal U.S. dollars without taxes and tips</th>\n","      <th>FAFH sales million nominal U.S. dollars without taxes and tips</th>\n","      <th>Total sales million nominal U.S. dollars without taxes and tips</th>\n","      <th>FAH sales million constant 1988 U.S. dollars without taxes and tips</th>\n","      <th>FAFH sales million constant 1988 U.S. dollars without taxes and tips</th>\n","      <th>Total food sales million constant 1988 U.S. dollars without taxes and tips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1997</td>\n","      <td>Alabama</td>\n","      <td>5447.90</td>\n","      <td>3098.49</td>\n","      <td>8546.39</td>\n","      <td>4051.72</td>\n","      <td>2379.27</td>\n","      <td>6430.99</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1998</td>\n","      <td>Alabama</td>\n","      <td>5690.14</td>\n","      <td>3428.02</td>\n","      <td>9118.16</td>\n","      <td>4170.12</td>\n","      <td>2564.73</td>\n","      <td>6734.85</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1999</td>\n","      <td>Alabama</td>\n","      <td>5995.80</td>\n","      <td>3653.72</td>\n","      <td>9649.52</td>\n","      <td>4325.52</td>\n","      <td>2668.35</td>\n","      <td>6993.86</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2000</td>\n","      <td>Alabama</td>\n","      <td>6298.34</td>\n","      <td>3871.33</td>\n","      <td>10169.67</td>\n","      <td>4424.93</td>\n","      <td>2764.59</td>\n","      <td>7189.52</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2001</td>\n","      <td>Alabama</td>\n","      <td>6411.99</td>\n","      <td>4089.29</td>\n","      <td>10501.28</td>\n","      <td>4379.57</td>\n","      <td>2843.92</td>\n","      <td>7223.48</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1372</th>\n","      <td>2019</td>\n","      <td>Wyoming</td>\n","      <td>1644.87</td>\n","      <td>1484.54</td>\n","      <td>3129.41</td>\n","      <td>764.80</td>\n","      <td>622.79</td>\n","      <td>1387.59</td>\n","    </tr>\n","    <tr>\n","      <th>1373</th>\n","      <td>2020</td>\n","      <td>Wyoming</td>\n","      <td>1779.59</td>\n","      <td>1433.19</td>\n","      <td>3212.77</td>\n","      <td>795.71</td>\n","      <td>574.91</td>\n","      <td>1370.62</td>\n","    </tr>\n","    <tr>\n","      <th>1374</th>\n","      <td>2021</td>\n","      <td>Wyoming</td>\n","      <td>1938.77</td>\n","      <td>1822.79</td>\n","      <td>3761.56</td>\n","      <td>830.66</td>\n","      <td>697.21</td>\n","      <td>1527.86</td>\n","    </tr>\n","    <tr>\n","      <th>1375</th>\n","      <td>2022</td>\n","      <td>Wyoming</td>\n","      <td>2063.55</td>\n","      <td>1970.82</td>\n","      <td>4034.37</td>\n","      <td>793.61</td>\n","      <td>702.64</td>\n","      <td>1496.25</td>\n","    </tr>\n","    <tr>\n","      <th>1376</th>\n","      <td>2023</td>\n","      <td>Wyoming</td>\n","      <td>2096.65</td>\n","      <td>2097.28</td>\n","      <td>4193.93</td>\n","      <td>770.68</td>\n","      <td>695.88</td>\n","      <td>1466.55</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1377 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc86e246-5d1e-4854-9f24-ecdd6e91edec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bc86e246-5d1e-4854-9f24-ecdd6e91edec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bc86e246-5d1e-4854-9f24-ecdd6e91edec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7391ff99-1e4b-431a-82bc-d2ff294a8986\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7391ff99-1e4b-431a-82bc-d2ff294a8986')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7391ff99-1e4b-431a-82bc-d2ff294a8986 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_cbaefd72-2dff-4301-b9a6-3dff354c74b5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sales_NTT_final')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cbaefd72-2dff-4301-b9a6-3dff354c74b5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sales_NTT_final');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sales_NTT_final","summary":"{\n  \"name\": \"sales_NTT_final\",\n  \"rows\": 1377,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 1997,\n        \"max\": 2023,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          2005,\n          2010,\n          2006\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Texas\",\n          \"South Carolina\",\n          \"Virginia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales million nominal U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15070.456915167953,\n        \"min\": 597.82,\n        \"max\": 136001.94,\n        \"num_unique_values\": 1377,\n        \"samples\": [\n          10238.34,\n          4545.81,\n          7872.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales million nominal U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15135.48115078028,\n        \"min\": 487.46,\n        \"max\": 173914.58,\n        \"num_unique_values\": 1377,\n        \"samples\": [\n          7882.2,\n          3606.97,\n          6248.23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales million nominal U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30036.821514171887,\n        \"min\": 1326.67,\n        \"max\": 309916.5,\n        \"num_unique_values\": 1377,\n        \"samples\": [\n          18120.54,\n          8152.78,\n          14121.06\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales million constant 1988 U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7340.814987316367,\n        \"min\": 415.14,\n        \"max\": 50647.38,\n        \"num_unique_values\": 1375,\n        \"samples\": [\n          4924.85,\n          6953.55,\n          12864.26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales million constant 1988 U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6738.931921818543,\n        \"min\": 373.15,\n        \"max\": 57704.84,\n        \"num_unique_values\": 1374,\n        \"samples\": [\n          1740.63,\n          7094.23,\n          1754.91\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total food sales million constant 1988 U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14016.490920975579,\n        \"min\": 967.64,\n        \"max\": 107695.77,\n        \"num_unique_values\": 1377,\n        \"samples\": [\n          11306.32,\n          3739.11,\n          9651.21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}],"source":["# Clean NTT (No Taxes and Tips) sales data\n","sales_NTT_final = sales_NTT.copy()\n","sales_NTT_final = clean_dollar_columns(sales_NTT_final, [\n","    'FAH sales million nominal U.S. dollars without taxes and tips',\n","    'FAFH sales million nominal U.S. dollars without taxes and tips',\n","    'Total sales million nominal U.S. dollars without taxes and tips',\n","    'FAH sales million constant 1988 U.S. dollars without taxes and tips',\n","    'FAFH sales million constant 1988 U.S. dollars without taxes and tips',\n","    'Total food sales million constant 1988 U.S. dollars without taxes and tips'\n","])\n","sales_NTT_final"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"WXfzpMeDp4gE","outputId":"39808a5f-1547-4d75-a702-d0bae0006614","executionInfo":{"status":"ok","timestamp":1748319544054,"user_tz":300,"elapsed":62,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Year    State  \\\n","0     1997  Alabama   \n","1     1998  Alabama   \n","2     1999  Alabama   \n","3     2000  Alabama   \n","4     2001  Alabama   \n","...    ...      ...   \n","1372  2019  Wyoming   \n","1373  2020  Wyoming   \n","1374  2021  Wyoming   \n","1375  2022  Wyoming   \n","1376  2023  Wyoming   \n","\n","      FAH sales per capita nominal U.S. dollars without taxes and tips  \\\n","0                                               1261.01                  \n","1                                               1307.77                  \n","2                                               1372.08                  \n","3                                               1414.67                  \n","4                                               1435.21                  \n","...                                                 ...                  \n","1372                                            2835.42                  \n","1373                                            3080.66                  \n","1374                                            3345.31                  \n","1375                                            3547.88                  \n","1376                                            3589.80                  \n","\n","      FAFH sales per capita nominal U.S. dollars without taxes and tips  \\\n","0                                                717.20                   \n","1                                                787.86                   \n","2                                                836.12                   \n","3                                                869.54                   \n","4                                                915.31                   \n","...                                                 ...                   \n","1372                                            2559.04                   \n","1373                                            2481.00                   \n","1374                                            3145.19                   \n","1375                                            3388.44                   \n","1376                                            3590.88                   \n","\n","      Total sales per capita nominal U.S. dollars without taxes and tips  \\\n","0                                               1978.20                    \n","1                                               2095.63                    \n","2                                               2208.20                    \n","3                                               2284.20                    \n","4                                               2350.52                    \n","...                                                 ...                    \n","1372                                            5394.45                    \n","1373                                            5561.66                    \n","1374                                            6490.50                    \n","1375                                            6936.32                    \n","1376                                            7180.68                    \n","\n","      FAH sales per capita constant 1988 U.S. dollars without taxes and tips  \\\n","0                                                937.84                        \n","1                                                958.42                        \n","2                                                989.85                        \n","3                                                993.88                        \n","4                                                980.29                        \n","...                                                 ...                        \n","1372                                            1318.36                        \n","1373                                            1377.46                        \n","1374                                            1433.28                        \n","1375                                            1364.46                        \n","1376                                            1319.52                        \n","\n","      FAFH sales per capita constant 1988 U.S. dollars without taxes and tips  \\\n","0                                                550.72                         \n","1                                                589.45                         \n","2                                                610.63                         \n","3                                                620.95                         \n","4                                                636.56                         \n","...                                                 ...                         \n","1372                                            1073.56                         \n","1373                                             995.24                         \n","1374                                            1203.02                         \n","1375                                            1208.06                         \n","1376                                            1191.45                         \n","\n","      Total sales per capita constant 1988 U.S. dollars without taxes and tips  \n","0                                               1488.56                         \n","1                                               1547.87                         \n","2                                               1600.48                         \n","3                                               1614.83                         \n","4                                               1616.85                         \n","...                                                 ...                         \n","1372                                            2391.93                         \n","1373                                            2372.70                         \n","1374                                            2636.30                         \n","1375                                            2572.52                         \n","1376                                            2510.98                         \n","\n","[1377 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-17c96238-d999-4d9a-b5c4-d2af9abdbec5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>State</th>\n","      <th>FAH sales per capita nominal U.S. dollars without taxes and tips</th>\n","      <th>FAFH sales per capita nominal U.S. dollars without taxes and tips</th>\n","      <th>Total sales per capita nominal U.S. dollars without taxes and tips</th>\n","      <th>FAH sales per capita constant 1988 U.S. dollars without taxes and tips</th>\n","      <th>FAFH sales per capita constant 1988 U.S. dollars without taxes and tips</th>\n","      <th>Total sales per capita constant 1988 U.S. dollars without taxes and tips</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1997</td>\n","      <td>Alabama</td>\n","      <td>1261.01</td>\n","      <td>717.20</td>\n","      <td>1978.20</td>\n","      <td>937.84</td>\n","      <td>550.72</td>\n","      <td>1488.56</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1998</td>\n","      <td>Alabama</td>\n","      <td>1307.77</td>\n","      <td>787.86</td>\n","      <td>2095.63</td>\n","      <td>958.42</td>\n","      <td>589.45</td>\n","      <td>1547.87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1999</td>\n","      <td>Alabama</td>\n","      <td>1372.08</td>\n","      <td>836.12</td>\n","      <td>2208.20</td>\n","      <td>989.85</td>\n","      <td>610.63</td>\n","      <td>1600.48</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2000</td>\n","      <td>Alabama</td>\n","      <td>1414.67</td>\n","      <td>869.54</td>\n","      <td>2284.20</td>\n","      <td>993.88</td>\n","      <td>620.95</td>\n","      <td>1614.83</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2001</td>\n","      <td>Alabama</td>\n","      <td>1435.21</td>\n","      <td>915.31</td>\n","      <td>2350.52</td>\n","      <td>980.29</td>\n","      <td>636.56</td>\n","      <td>1616.85</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1372</th>\n","      <td>2019</td>\n","      <td>Wyoming</td>\n","      <td>2835.42</td>\n","      <td>2559.04</td>\n","      <td>5394.45</td>\n","      <td>1318.36</td>\n","      <td>1073.56</td>\n","      <td>2391.93</td>\n","    </tr>\n","    <tr>\n","      <th>1373</th>\n","      <td>2020</td>\n","      <td>Wyoming</td>\n","      <td>3080.66</td>\n","      <td>2481.00</td>\n","      <td>5561.66</td>\n","      <td>1377.46</td>\n","      <td>995.24</td>\n","      <td>2372.70</td>\n","    </tr>\n","    <tr>\n","      <th>1374</th>\n","      <td>2021</td>\n","      <td>Wyoming</td>\n","      <td>3345.31</td>\n","      <td>3145.19</td>\n","      <td>6490.50</td>\n","      <td>1433.28</td>\n","      <td>1203.02</td>\n","      <td>2636.30</td>\n","    </tr>\n","    <tr>\n","      <th>1375</th>\n","      <td>2022</td>\n","      <td>Wyoming</td>\n","      <td>3547.88</td>\n","      <td>3388.44</td>\n","      <td>6936.32</td>\n","      <td>1364.46</td>\n","      <td>1208.06</td>\n","      <td>2572.52</td>\n","    </tr>\n","    <tr>\n","      <th>1376</th>\n","      <td>2023</td>\n","      <td>Wyoming</td>\n","      <td>3589.80</td>\n","      <td>3590.88</td>\n","      <td>7180.68</td>\n","      <td>1319.52</td>\n","      <td>1191.45</td>\n","      <td>2510.98</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1377 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-17c96238-d999-4d9a-b5c4-d2af9abdbec5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-17c96238-d999-4d9a-b5c4-d2af9abdbec5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-17c96238-d999-4d9a-b5c4-d2af9abdbec5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-92e1ed6c-2e9f-445a-97ad-cc7f59744bfb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-92e1ed6c-2e9f-445a-97ad-cc7f59744bfb')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-92e1ed6c-2e9f-445a-97ad-cc7f59744bfb button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_8d0086fe-62eb-468b-9f7b-c05da2657736\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sales_percapNTT_final')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8d0086fe-62eb-468b-9f7b-c05da2657736 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sales_percapNTT_final');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sales_percapNTT_final","summary":"{\n  \"name\": \"sales_percapNTT_final\",\n  \"rows\": 1377,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 1997,\n        \"max\": 2023,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          2005,\n          2010,\n          2006\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Texas\",\n          \"South Carolina\",\n          \"Virginia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales per capita nominal U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 573.2432557333416,\n        \"min\": 892.49,\n        \"max\": 4084.97,\n        \"num_unique_values\": 1374,\n        \"samples\": [\n          3098.88,\n          2510.31,\n          3078.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales per capita nominal U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 837.6030600751768,\n        \"min\": 674.89,\n        \"max\": 8970.97,\n        \"num_unique_values\": 1371,\n        \"samples\": [\n          2478.36,\n          3069.73,\n          1888.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales per capita nominal U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1290.410161603228,\n        \"min\": 1694.69,\n        \"max\": 12288.66,\n        \"num_unique_values\": 1374,\n        \"samples\": [\n          5437.85,\n          5469.33,\n          6249.63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH sales per capita constant 1988 U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 161.79361326058574,\n        \"min\": 658.85,\n        \"max\": 1776.57,\n        \"num_unique_values\": 1353,\n        \"samples\": [\n          1583.38,\n          1107.31,\n          1037.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH sales per capita constant 1988 U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 298.60222049530995,\n        \"min\": 518.23,\n        \"max\": 3139.55,\n        \"num_unique_values\": 1360,\n        \"samples\": [\n          1124.82,\n          757.76,\n          683.23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total sales per capita constant 1988 U.S. dollars without taxes and tips\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 358.75386534301424,\n        \"min\": 1276.68,\n        \"max\": 4413.21,\n        \"num_unique_values\": 1367,\n        \"samples\": [\n          2292.17,\n          1831.47,\n          1913.96\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}],"source":["# Clean per capita NTT version\n","sales_percapNTT_final = sales_percapNTT.copy()\n","sales_percapNTT_final = clean_dollar_columns(sales_percapNTT_final, [\n","    'FAH sales per capita nominal U.S. dollars without taxes and tips',\n","    'FAFH sales per capita nominal U.S. dollars without taxes and tips',\n","    'Total sales per capita nominal U.S. dollars without taxes and tips',\n","    'FAH sales per capita constant 1988 U.S. dollars without taxes and tips',\n","    'FAFH sales per capita constant 1988 U.S. dollars without taxes and tips',\n","    'Total sales per capita constant 1988 U.S. dollars without taxes and tips'\n","])\n","sales_percapNTT_final"]},{"cell_type":"markdown","metadata":{"id":"miFKu8t9qCGz"},"source":["### Cleaning the Sample Size Data\n","\n","- Dropped nulls and unnecessary columns\n","- Converted ranges like `1977-78` into one row per year"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6b6cYPtfeQp_"},"outputs":[],"source":["# Drop redundant column\n","if \"Table\" in size.columns:\n","    size.drop(columns=[\"Table\"], inplace=True)\n","\n","# Clean text/remove space\n","size.columns = size.columns.str.strip()\n","size[\"Demographics\"] = size[\"Demographics\"].str.strip()\n","size[\"Survey years\"] = size[\"Survey years\"].str.strip()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"voKiGl55_Q5Z"},"outputs":[],"source":["size.dropna(subset= ['Sample size'], inplace = True) #drop rows with NULL\n","# Convert 'Sample size' to integer\n","size[\"Sample size\"] = size[\"Sample size\"].astype(int)\n","\n","# Remove duplicate rows\n","size = size.drop_duplicates()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Mc0bUqF33_2o"},"outputs":[],"source":["# Expand survey year ranges (e.g., '1977-1978') into separate rows per year\n","expanded_rows = []\n","for _, row in size.iterrows():\n","    if '-' in row[\"Survey years\"]:\n","        start_year, end_year = map(int, row[\"Survey years\"].split('-'))\n","        for year in range(start_year, end_year + 1):\n","            new_row = row.copy()\n","            new_row[\"Survey year\"] = year\n","            expanded_rows.append(new_row)\n","    else:\n","        new_row = row.copy()\n","        new_row[\"Survey year\"] = int(row[\"Survey years\"])\n","        expanded_rows.append(new_row)"]},{"cell_type":"markdown","metadata":{"id":"9ui4yxMRr6Oh"},"source":["To split up the Survey Years column"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"w5mTezSR4E2v","outputId":"348d7b88-d3ca-4340-877b-2dbf65552f13","executionInfo":{"status":"ok","timestamp":1748319544645,"user_tz":300,"elapsed":3,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Demographics  Sample size  Survey year\n","0  U.S. aged 2 and above        41471         1977\n","0  U.S. aged 2 and above        41471         1978\n","1                   Male        18303         1977\n","1                   Male        18303         1978\n","2                 Female        23168         1977"],"text/html":["\n","  <div id=\"df-615620ea-9293-4ac3-945c-93ad1d481b5e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Demographics</th>\n","      <th>Sample size</th>\n","      <th>Survey year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>U.S. aged 2 and above</td>\n","      <td>41471</td>\n","      <td>1977</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>U.S. aged 2 and above</td>\n","      <td>41471</td>\n","      <td>1978</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>18303</td>\n","      <td>1977</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>18303</td>\n","      <td>1978</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Female</td>\n","      <td>23168</td>\n","      <td>1977</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-615620ea-9293-4ac3-945c-93ad1d481b5e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-615620ea-9293-4ac3-945c-93ad1d481b5e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-615620ea-9293-4ac3-945c-93ad1d481b5e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4487c841-94f0-4cca-bac0-9073b983dae0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4487c841-94f0-4cca-bac0-9073b983dae0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4487c841-94f0-4cca-bac0-9073b983dae0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"size_final","summary":"{\n  \"name\": \"size_final\",\n  \"rows\": 514,\n  \"fields\": [\n    {\n      \"column\": \"Demographics\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"U.S. aged 2 and above\",\n          \"Adult education: less than high school\",\n          \"Hispanics\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sample size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4822,\n        \"min\": 345,\n        \"max\": 41471,\n        \"num_unique_values\": 214,\n        \"samples\": [\n          14123,\n          2380,\n          2313\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survey year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 1977,\n        \"max\": 2018,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          1997,\n          2009,\n          1977\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":28}],"source":["# Convert list of expanded rows to a DataFrame\n","size_final = pd.DataFrame(expanded_rows)\n","\n","size_final = size_final.drop(columns=[\"Survey years\"])\n","size_final = size_final[\n","    (size_final[\"Survey year\"] >= 1977) & (size_final[\"Survey year\"] <= 2018)\n","]\n","size_final.head()"]},{"cell_type":"markdown","metadata":{"id":"zim-a5QWsHy2"},"source":["### Cleaning the Nutrient Intake Data\n","\n","- Dropped null values and filtered for \"mean\" entries\n","- Split combined fields into tidy format\n","- Expanded year ranges into individual rows\n","- Created long and wide versions for analysis"]},{"cell_type":"code","source":["nut_intake"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"XlVHvWq0fW3n","executionInfo":{"status":"ok","timestamp":1748319544684,"user_tz":300,"elapsed":39,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"778b595e-4db6-4799-c9f2-a5a9ed703877"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Nutrient       Food source Measurement      Nutrient:Food source  \\\n","0      Energy              Total    Calories             Energy :Total   \n","1      Energy                FAH    Calories               Energy :FAH   \n","2      Energy               FAFH    Calories              Energy :FAFH   \n","3      Energy   FAFH: Restaurant    Calories  Energy :FAFH: Restaurant   \n","4      Energy    FAFH: Fast food    Calories   Energy :FAFH: Fast food   \n","...        ...               ...         ...                       ...   \n","36451   Sodium              FAFH  Milligrams               Sodium:FAFH   \n","36452   Sodium  FAFH: Restaurant  Milligrams   Sodium:FAFH: Restaurant   \n","36453   Sodium   FAFH: Fast food  Milligrams    Sodium:FAFH: Fast food   \n","36454   Sodium      FAFH: School  Milligrams       Sodium:FAFH: School   \n","36455   Sodium      FAFH: Others  Milligrams       Sodium:FAFH: Others   \n","\n","      Survey years:Variable    Value  \\\n","0            1977-1978-Mean  1806.88   \n","1            1977-1978-Mean  1462.27   \n","2            1977-1978-Mean   344.61   \n","3            1977-1978-Mean    61.17   \n","4            1977-1978-Mean   110.45   \n","...                     ...      ...   \n","36451  2017-2018-SE of mean    69.25   \n","36452  2017-2018-SE of mean    40.86   \n","36453  2017-2018-SE of mean    46.49   \n","36454  2017-2018-SE of mean      NaN   \n","36455  2017-2018-SE of mean    16.65   \n","\n","                                                   Table  \\\n","0      Table 2-Daily nutrient intake by food source f...   \n","1      Table 2-Daily nutrient intake by food source f...   \n","2      Table 2-Daily nutrient intake by food source f...   \n","3      Table 2-Daily nutrient intake by food source f...   \n","4      Table 2-Daily nutrient intake by food source f...   \n","...                                                  ...   \n","36451  Table 2F3-Daily nutrient intake by food source...   \n","36452  Table 2F3-Daily nutrient intake by food source...   \n","36453  Table 2F3-Daily nutrient intake by food source...   \n","36454  Table 2F3-Daily nutrient intake by food source...   \n","36455  Table 2F3-Daily nutrient intake by food source...   \n","\n","                        Demographics  \n","0      US consumers aged 2 and above  \n","1      US consumers aged 2 and above  \n","2      US consumers aged 2 and above  \n","3      US consumers aged 2 and above  \n","4      US consumers aged 2 and above  \n","...                              ...  \n","36451        Edu. - College attended  \n","36452        Edu. - College attended  \n","36453        Edu. - College attended  \n","36454        Edu. - College attended  \n","36455        Edu. - College attended  \n","\n","[36456 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-98165b53-6dab-41a3-a998-9baabadabb79\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nutrient</th>\n","      <th>Food source</th>\n","      <th>Measurement</th>\n","      <th>Nutrient:Food source</th>\n","      <th>Survey years:Variable</th>\n","      <th>Value</th>\n","      <th>Table</th>\n","      <th>Demographics</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Energy</td>\n","      <td>Total</td>\n","      <td>Calories</td>\n","      <td>Energy :Total</td>\n","      <td>1977-1978-Mean</td>\n","      <td>1806.88</td>\n","      <td>Table 2-Daily nutrient intake by food source f...</td>\n","      <td>US consumers aged 2 and above</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Energy</td>\n","      <td>FAH</td>\n","      <td>Calories</td>\n","      <td>Energy :FAH</td>\n","      <td>1977-1978-Mean</td>\n","      <td>1462.27</td>\n","      <td>Table 2-Daily nutrient intake by food source f...</td>\n","      <td>US consumers aged 2 and above</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Energy</td>\n","      <td>FAFH</td>\n","      <td>Calories</td>\n","      <td>Energy :FAFH</td>\n","      <td>1977-1978-Mean</td>\n","      <td>344.61</td>\n","      <td>Table 2-Daily nutrient intake by food source f...</td>\n","      <td>US consumers aged 2 and above</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Energy</td>\n","      <td>FAFH: Restaurant</td>\n","      <td>Calories</td>\n","      <td>Energy :FAFH: Restaurant</td>\n","      <td>1977-1978-Mean</td>\n","      <td>61.17</td>\n","      <td>Table 2-Daily nutrient intake by food source f...</td>\n","      <td>US consumers aged 2 and above</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Energy</td>\n","      <td>FAFH: Fast food</td>\n","      <td>Calories</td>\n","      <td>Energy :FAFH: Fast food</td>\n","      <td>1977-1978-Mean</td>\n","      <td>110.45</td>\n","      <td>Table 2-Daily nutrient intake by food source f...</td>\n","      <td>US consumers aged 2 and above</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>36451</th>\n","      <td>Sodium</td>\n","      <td>FAFH</td>\n","      <td>Milligrams</td>\n","      <td>Sodium:FAFH</td>\n","      <td>2017-2018-SE of mean</td>\n","      <td>69.25</td>\n","      <td>Table 2F3-Daily nutrient intake by food source...</td>\n","      <td>Edu. - College attended</td>\n","    </tr>\n","    <tr>\n","      <th>36452</th>\n","      <td>Sodium</td>\n","      <td>FAFH: Restaurant</td>\n","      <td>Milligrams</td>\n","      <td>Sodium:FAFH: Restaurant</td>\n","      <td>2017-2018-SE of mean</td>\n","      <td>40.86</td>\n","      <td>Table 2F3-Daily nutrient intake by food source...</td>\n","      <td>Edu. - College attended</td>\n","    </tr>\n","    <tr>\n","      <th>36453</th>\n","      <td>Sodium</td>\n","      <td>FAFH: Fast food</td>\n","      <td>Milligrams</td>\n","      <td>Sodium:FAFH: Fast food</td>\n","      <td>2017-2018-SE of mean</td>\n","      <td>46.49</td>\n","      <td>Table 2F3-Daily nutrient intake by food source...</td>\n","      <td>Edu. - College attended</td>\n","    </tr>\n","    <tr>\n","      <th>36454</th>\n","      <td>Sodium</td>\n","      <td>FAFH: School</td>\n","      <td>Milligrams</td>\n","      <td>Sodium:FAFH: School</td>\n","      <td>2017-2018-SE of mean</td>\n","      <td>NaN</td>\n","      <td>Table 2F3-Daily nutrient intake by food source...</td>\n","      <td>Edu. - College attended</td>\n","    </tr>\n","    <tr>\n","      <th>36455</th>\n","      <td>Sodium</td>\n","      <td>FAFH: Others</td>\n","      <td>Milligrams</td>\n","      <td>Sodium:FAFH: Others</td>\n","      <td>2017-2018-SE of mean</td>\n","      <td>16.65</td>\n","      <td>Table 2F3-Daily nutrient intake by food source...</td>\n","      <td>Edu. - College attended</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>36456 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98165b53-6dab-41a3-a998-9baabadabb79')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-98165b53-6dab-41a3-a998-9baabadabb79 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-98165b53-6dab-41a3-a998-9baabadabb79');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c15e3635-5eeb-4d6a-959c-13cc2392fe33\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c15e3635-5eeb-4d6a-959c-13cc2392fe33')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c15e3635-5eeb-4d6a-959c-13cc2392fe33 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_93bc370e-e304-47eb-83d9-1303bb444c74\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('nut_intake')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_93bc370e-e304-47eb-83d9-1303bb444c74 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('nut_intake');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"nut_intake","summary":"{\n  \"name\": \"nut_intake\",\n  \"rows\": 36456,\n  \"fields\": [\n    {\n      \"column\": \"Nutrient\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Fatty acids, polyunsaturated\",\n          \"Fatty acids, monounsaturated\",\n          \"Energy \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Food source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Total\",\n          \"FAH\",\n          \"FAFH: School\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Measurement\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Calories\",\n          \"Milligrams\",\n          \"Grams \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nutrient:Food source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 84,\n        \"samples\": [\n          \"Fatty acids, polyunsaturated:FAFH: Restaurant\",\n          \"Energy :Total\",\n          \"Saturated fatty acids :FAFH\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survey years:Variable\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 22,\n        \"samples\": [\n          \"1977-1978-Mean\",\n          \"2009-2010-SE of mean\",\n          \"2005-2006-Mean\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 397.58185310044007,\n        \"min\": 0.01,\n        \"max\": 4378.99,\n        \"num_unique_values\": 9845,\n        \"samples\": [\n          38.35,\n          88.58,\n          0.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Table\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Table 2-Daily nutrient intake by food source for U.S. consumers aged 2 and above, 1977-2018\",\n          \"Table 2F1-Daily nutrient intake by food source and education for adults aged 20 and above with less than a high school degree, 1989-2018\",\n          \"Table 2E3-Daily nutrient intake by food source for Hispanic population, 1977-2018\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Demographics\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"US consumers aged 2 and above\",\n          \"Edu. - Less than high school\",\n          \"Race - Hispanic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"K-ApGZNZaCte","executionInfo":{"status":"ok","timestamp":1748319554040,"user_tz":300,"elapsed":9354,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"653036e5-7b84-4f55-c9e2-c8a596bb31e4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Year                         Group               Source   Subsource  \\\n","37557  2018                     Total Fat  Food Away From Home   Fast food   \n","32226  1998         Saturated fatty acids  Food Away From Home        None   \n","33375  2016                       Calcium                Total        None   \n","17913  2008                       Protein  Food Away From Home   Fast food   \n","9717   2006  Fatty acids, monounsaturated  Food Away From Home   Fast food   \n","7650   2005                   Cholesterol  Food Away From Home  Restaurant   \n","39879  1996  Fatty acids, polyunsaturated  Food Away From Home      Others   \n","8609   2018                Fiber, dietary  Food Away From Home      Others   \n","18209  2012                  Carbohydrate  Food Away From Home        None   \n","14388  2015                       Protein  Food Away From Home        None   \n","\n","        Value  \n","37557   14.83  \n","32226    8.19  \n","33375  972.54  \n","17913   16.59  \n","9717     7.01  \n","7650    18.71  \n","39879    1.48  \n","8609     0.84  \n","18209   96.17  \n","14388   28.19  "],"text/html":["\n","  <div id=\"df-47caeb60-42e6-4155-954e-bfb6a051292f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Group</th>\n","      <th>Source</th>\n","      <th>Subsource</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>37557</th>\n","      <td>2018</td>\n","      <td>Total Fat</td>\n","      <td>Food Away From Home</td>\n","      <td>Fast food</td>\n","      <td>14.83</td>\n","    </tr>\n","    <tr>\n","      <th>32226</th>\n","      <td>1998</td>\n","      <td>Saturated fatty acids</td>\n","      <td>Food Away From Home</td>\n","      <td>None</td>\n","      <td>8.19</td>\n","    </tr>\n","    <tr>\n","      <th>33375</th>\n","      <td>2016</td>\n","      <td>Calcium</td>\n","      <td>Total</td>\n","      <td>None</td>\n","      <td>972.54</td>\n","    </tr>\n","    <tr>\n","      <th>17913</th>\n","      <td>2008</td>\n","      <td>Protein</td>\n","      <td>Food Away From Home</td>\n","      <td>Fast food</td>\n","      <td>16.59</td>\n","    </tr>\n","    <tr>\n","      <th>9717</th>\n","      <td>2006</td>\n","      <td>Fatty acids, monounsaturated</td>\n","      <td>Food Away From Home</td>\n","      <td>Fast food</td>\n","      <td>7.01</td>\n","    </tr>\n","    <tr>\n","      <th>7650</th>\n","      <td>2005</td>\n","      <td>Cholesterol</td>\n","      <td>Food Away From Home</td>\n","      <td>Restaurant</td>\n","      <td>18.71</td>\n","    </tr>\n","    <tr>\n","      <th>39879</th>\n","      <td>1996</td>\n","      <td>Fatty acids, polyunsaturated</td>\n","      <td>Food Away From Home</td>\n","      <td>Others</td>\n","      <td>1.48</td>\n","    </tr>\n","    <tr>\n","      <th>8609</th>\n","      <td>2018</td>\n","      <td>Fiber, dietary</td>\n","      <td>Food Away From Home</td>\n","      <td>Others</td>\n","      <td>0.84</td>\n","    </tr>\n","    <tr>\n","      <th>18209</th>\n","      <td>2012</td>\n","      <td>Carbohydrate</td>\n","      <td>Food Away From Home</td>\n","      <td>None</td>\n","      <td>96.17</td>\n","    </tr>\n","    <tr>\n","      <th>14388</th>\n","      <td>2015</td>\n","      <td>Protein</td>\n","      <td>Food Away From Home</td>\n","      <td>None</td>\n","      <td>28.19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47caeb60-42e6-4155-954e-bfb6a051292f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47caeb60-42e6-4155-954e-bfb6a051292f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47caeb60-42e6-4155-954e-bfb6a051292f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6155868b-bae4-4378-82bf-0fa33ac53dfc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6155868b-bae4-4378-82bf-0fa33ac53dfc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6155868b-bae4-4378-82bf-0fa33ac53dfc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"nut_intake_long_final\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 1996,\n        \"max\": 2018,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          2012,\n          1998,\n          2005\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Group\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Fiber, dietary\",\n          \"Saturated fatty acids\",\n          \"Cholesterol\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Total\",\n          \"Food Away From Home\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Subsource\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Fast food\",\n          \"Restaurant\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 302.07137854965487,\n        \"min\": 0.84,\n        \"max\": 972.54,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          96.17,\n          8.19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":30}],"source":["# Step 1: Drop rows with missing 'Value'\n","nut_intake_cleaned = nut_intake.dropna(subset=['Value']).copy()\n","\n","# Step 2: Extract survey years and statistic type\n","nut_intake_cleaned[['Survey_Years', 'Statistic']] = nut_intake_cleaned['Survey years:Variable'].str.extract(r'(\\d{4}-\\d{4})-(\\w+)', expand=True)\n","\n","# Step 3: Filter to only \"Mean\" values\n","nut_intake_mean = nut_intake_cleaned[nut_intake_cleaned['Statistic'].str.lower().str.strip() == 'mean'].copy()\n","\n","# Step 4: Convert 'Value' to numeric\n","nut_intake_mean['Value'] = pd.to_numeric(nut_intake_mean['Value'], errors='coerce')\n","nut_intake_mean.dropna(subset=['Value'], inplace=True)\n","\n","# Step 5: Split 'Nutrient:Food source' into 3 components\n","split_cols = nut_intake_mean['Nutrient:Food source'].str.split(':', n=2, expand=True)\n","nut_intake_mean['Group'] = split_cols[0].str.strip()       # Nutrient\n","nut_intake_mean['Source'] = split_cols[1].str.strip()\n","nut_intake_mean['Subsource'] = split_cols[2].str.strip() if split_cols.shape[1] > 2 else None\n","\n","# Step 6: Map 'Source' values to full names\n","source_map = {\n","    'FAH': 'Food at Home',\n","    'FAFH': 'Food Away From Home',\n","    'Total': 'Total'\n","}\n","nut_intake_mean['Source'] = nut_intake_mean['Source'].map(source_map)\n","\n","# Step 7: Expand multi-year ranges into individual years\n","def expand_years(row):\n","    try:\n","        start, end = map(int, row['Survey_Years'].split('-'))\n","        return pd.DataFrame({\n","            'Year': list(range(start, end + 1)),\n","            'Group': row['Group'],\n","            'Source': row['Source'],\n","            'Subsource': row['Subsource'],\n","            'Value': row['Value']\n","        })\n","    except:\n","        return pd.DataFrame()\n","\n","# Step 8: Apply the transformation\n","nut_intake_long_final = pd.concat(\n","    [expand_years(row) for _, row in nut_intake_mean.iterrows()],\n","    ignore_index=True\n",")\n","\n","# Optional: clean trailing whitespace\n","nut_intake_long_final['Subsource'] = nut_intake_long_final['Subsource'].str.strip()\n","nut_intake_long_final.sample(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"X5GkeoD7aCtf","executionInfo":{"status":"ok","timestamp":1748319554070,"user_tz":300,"elapsed":32,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"c62caee6-cbf1-4879-e2d3-2d85b62b4af8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  Food Away From Home | Calcium  Food Away From Home | Carbohydrate  \\\n","0  1977                      55.403086                           15.149753   \n","1  1978                      55.403086                           15.149753   \n","2  1989                      72.255376                           23.139032   \n","3  1990                      72.255376                           23.139032   \n","4  1991                      72.255376                           23.139032   \n","\n","   Food Away From Home | Cholesterol  Food Away From Home | Energy  \\\n","0                          22.018395                    139.883827   \n","1                          22.018395                    139.883827   \n","2                          28.831398                    204.888817   \n","3                          28.831398                    204.888817   \n","4                          28.831398                    204.888817   \n","\n","   Food Away From Home | Fatty acids, monounsaturated  \\\n","0                                           2.262469    \n","1                                           2.262469    \n","2                                           3.372043    \n","3                                           3.372043    \n","4                                           3.372043    \n","\n","   Food Away From Home | Fatty acids, polyunsaturated  \\\n","0                                           1.013086    \n","1                                           1.013086    \n","2                                           1.687849    \n","3                                           1.687849    \n","4                                           1.687849    \n","\n","   Food Away From Home | Fiber, dietary  Food Away From Home | Iron  \\\n","0                              0.841358                    0.843827   \n","1                              0.841358                    0.843827   \n","2                              1.276129                    1.272581   \n","3                              1.276129                    1.272581   \n","4                              1.276129                    1.272581   \n","\n","   Food Away From Home | Protein  ...  Total | Cholesterol  Total | Energy  \\\n","0                       5.850864  ...           329.779412       1814.7200   \n","1                       5.850864  ...           329.779412       1814.7200   \n","2                       8.119247  ...           258.614000       1824.9825   \n","3                       8.119247  ...           258.614000       1824.9825   \n","4                       8.119247  ...           258.614000       1824.9825   \n","\n","   Total | Fatty acids, monounsaturated  Total | Fatty acids, polyunsaturated  \\\n","0                             28.217647                             13.264706   \n","1                             28.217647                             13.264706   \n","2                             26.725000                             13.670500   \n","3                             26.725000                             13.670500   \n","4                             26.725000                             13.670500   \n","\n","   Total | Fiber, dietary  Total | Iron  Total | Protein  \\\n","0               12.926471     13.177647        78.914118   \n","1               12.926471     13.177647        78.914118   \n","2               13.883000     13.935000        73.462500   \n","3               13.883000     13.935000        73.462500   \n","4               13.883000     13.935000        73.462500   \n","\n","   Total | Saturated fatty acids  Total | Sodium  Total | Total Fat  \n","0                      26.130588       3217.0000          75.785882  \n","1                      26.130588       3217.0000          75.785882  \n","2                      23.567500       3283.8115          71.329000  \n","3                      23.567500       3283.8115          71.329000  \n","4                      23.567500       3283.8115          71.329000  \n","\n","[5 rows x 37 columns]"],"text/html":["\n","  <div id=\"df-7f82b487-a153-48dd-be05-ddc52ff2cd65\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Food Away From Home | Calcium</th>\n","      <th>Food Away From Home | Carbohydrate</th>\n","      <th>Food Away From Home | Cholesterol</th>\n","      <th>Food Away From Home | Energy</th>\n","      <th>Food Away From Home | Fatty acids, monounsaturated</th>\n","      <th>Food Away From Home | Fatty acids, polyunsaturated</th>\n","      <th>Food Away From Home | Fiber, dietary</th>\n","      <th>Food Away From Home | Iron</th>\n","      <th>Food Away From Home | Protein</th>\n","      <th>...</th>\n","      <th>Total | Cholesterol</th>\n","      <th>Total | Energy</th>\n","      <th>Total | Fatty acids, monounsaturated</th>\n","      <th>Total | Fatty acids, polyunsaturated</th>\n","      <th>Total | Fiber, dietary</th>\n","      <th>Total | Iron</th>\n","      <th>Total | Protein</th>\n","      <th>Total | Saturated fatty acids</th>\n","      <th>Total | Sodium</th>\n","      <th>Total | Total Fat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1977</td>\n","      <td>55.403086</td>\n","      <td>15.149753</td>\n","      <td>22.018395</td>\n","      <td>139.883827</td>\n","      <td>2.262469</td>\n","      <td>1.013086</td>\n","      <td>0.841358</td>\n","      <td>0.843827</td>\n","      <td>5.850864</td>\n","      <td>...</td>\n","      <td>329.779412</td>\n","      <td>1814.7200</td>\n","      <td>28.217647</td>\n","      <td>13.264706</td>\n","      <td>12.926471</td>\n","      <td>13.177647</td>\n","      <td>78.914118</td>\n","      <td>26.130588</td>\n","      <td>3217.0000</td>\n","      <td>75.785882</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1978</td>\n","      <td>55.403086</td>\n","      <td>15.149753</td>\n","      <td>22.018395</td>\n","      <td>139.883827</td>\n","      <td>2.262469</td>\n","      <td>1.013086</td>\n","      <td>0.841358</td>\n","      <td>0.843827</td>\n","      <td>5.850864</td>\n","      <td>...</td>\n","      <td>329.779412</td>\n","      <td>1814.7200</td>\n","      <td>28.217647</td>\n","      <td>13.264706</td>\n","      <td>12.926471</td>\n","      <td>13.177647</td>\n","      <td>78.914118</td>\n","      <td>26.130588</td>\n","      <td>3217.0000</td>\n","      <td>75.785882</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1989</td>\n","      <td>72.255376</td>\n","      <td>23.139032</td>\n","      <td>28.831398</td>\n","      <td>204.888817</td>\n","      <td>3.372043</td>\n","      <td>1.687849</td>\n","      <td>1.276129</td>\n","      <td>1.272581</td>\n","      <td>8.119247</td>\n","      <td>...</td>\n","      <td>258.614000</td>\n","      <td>1824.9825</td>\n","      <td>26.725000</td>\n","      <td>13.670500</td>\n","      <td>13.883000</td>\n","      <td>13.935000</td>\n","      <td>73.462500</td>\n","      <td>23.567500</td>\n","      <td>3283.8115</td>\n","      <td>71.329000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1990</td>\n","      <td>72.255376</td>\n","      <td>23.139032</td>\n","      <td>28.831398</td>\n","      <td>204.888817</td>\n","      <td>3.372043</td>\n","      <td>1.687849</td>\n","      <td>1.276129</td>\n","      <td>1.272581</td>\n","      <td>8.119247</td>\n","      <td>...</td>\n","      <td>258.614000</td>\n","      <td>1824.9825</td>\n","      <td>26.725000</td>\n","      <td>13.670500</td>\n","      <td>13.883000</td>\n","      <td>13.935000</td>\n","      <td>73.462500</td>\n","      <td>23.567500</td>\n","      <td>3283.8115</td>\n","      <td>71.329000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1991</td>\n","      <td>72.255376</td>\n","      <td>23.139032</td>\n","      <td>28.831398</td>\n","      <td>204.888817</td>\n","      <td>3.372043</td>\n","      <td>1.687849</td>\n","      <td>1.276129</td>\n","      <td>1.272581</td>\n","      <td>8.119247</td>\n","      <td>...</td>\n","      <td>258.614000</td>\n","      <td>1824.9825</td>\n","      <td>26.725000</td>\n","      <td>13.670500</td>\n","      <td>13.883000</td>\n","      <td>13.935000</td>\n","      <td>73.462500</td>\n","      <td>23.567500</td>\n","      <td>3283.8115</td>\n","      <td>71.329000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 37 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f82b487-a153-48dd-be05-ddc52ff2cd65')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7f82b487-a153-48dd-be05-ddc52ff2cd65 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7f82b487-a153-48dd-be05-ddc52ff2cd65');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9a518646-ac2e-44f8-92c3-067f486abc8b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9a518646-ac2e-44f8-92c3-067f486abc8b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9a518646-ac2e-44f8-92c3-067f486abc8b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"nut_intake_wide_final"}},"metadata":{},"execution_count":31}],"source":["# Pivot to wide format\n","nut_intake_wide_final = nut_intake_long_final.pivot_table(\n","    index=\"Year\",\n","    columns=[\"Source\", \"Group\"],  # Group = Nutrient\n","    values=\"Value\"\n",")\n","\n","# Flatten multi-index column names for ease of use\n","nut_intake_wide_final.columns = [\n","    f\"{src} | {nutrient}\" for src, nutrient in nut_intake_wide_final.columns\n","]\n","nut_intake_wide_final.reset_index(inplace=True)\n","\n","# Preview result\n","nut_intake_wide_final.head()"]},{"cell_type":"markdown","metadata":{"id":"OQXs0wPAyuIv"},"source":["### Cleaning the Food Group Intake Dataset\n","\n","This dataset originally came in a wide format, with year blocks spread across multiple columns. To make the data tidy and analysis-ready, we:\n","\n","- Dropped rows with missing values\n","- Split combined columns into `Survey_Years` and `Statistic` (e.g., `2005–2006-Mean`)\n","- Filtered only for \"Mean\" intake values\n","- Converted numeric strings to float\n","- Expanded year ranges into individual rows per year\n","- Produced a long-format table: one row per food group, source, and year"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"K8eUagLlaCtf","executionInfo":{"status":"ok","timestamp":1748319568202,"user_tz":300,"elapsed":14131,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"20b6b7e9-f021-4868-dc05-82af925d894c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Year                                  Group               Source  \\\n","20794   1990  Protein foods, low Omega-3 fatty fish         Food at Home   \n","16315   2006                     Fruit, whole fruit  Food Away From Home   \n","94529   2018          Protein foods, nuts and seeds  Food Away From Home   \n","108888  1994                      Vegetable, others                Total   \n","65331   2008                           Added sugars  Food Away From Home   \n","50721   1978                       Vegetable, total  Food Away From Home   \n","6313    2018              Vegetable, red and orange  Food Away From Home   \n","74544   2017                           Fruit, juice                Total   \n","82008   1989                     Discretionary fats  Food Away From Home   \n","63131   1994            Discretionary fats and oils  Food Away From Home   \n","\n","          Subsource  Value  \n","20794          None   0.19  \n","16315          None   0.06  \n","94529    Restaurant   0.01  \n","108888         None   0.53  \n","65331        Others   1.11  \n","50721     Fast food   0.12  \n","6313         Others   0.01  \n","74544          None   0.22  \n","82008    Restaurant   3.67  \n","63131        School   2.56  "],"text/html":["\n","  <div id=\"df-b1a03b0f-0d56-48d4-9b88-8c487a2c5d0d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Group</th>\n","      <th>Source</th>\n","      <th>Subsource</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20794</th>\n","      <td>1990</td>\n","      <td>Protein foods, low Omega-3 fatty fish</td>\n","      <td>Food at Home</td>\n","      <td>None</td>\n","      <td>0.19</td>\n","    </tr>\n","    <tr>\n","      <th>16315</th>\n","      <td>2006</td>\n","      <td>Fruit, whole fruit</td>\n","      <td>Food Away From Home</td>\n","      <td>None</td>\n","      <td>0.06</td>\n","    </tr>\n","    <tr>\n","      <th>94529</th>\n","      <td>2018</td>\n","      <td>Protein foods, nuts and seeds</td>\n","      <td>Food Away From Home</td>\n","      <td>Restaurant</td>\n","      <td>0.01</td>\n","    </tr>\n","    <tr>\n","      <th>108888</th>\n","      <td>1994</td>\n","      <td>Vegetable, others</td>\n","      <td>Total</td>\n","      <td>None</td>\n","      <td>0.53</td>\n","    </tr>\n","    <tr>\n","      <th>65331</th>\n","      <td>2008</td>\n","      <td>Added sugars</td>\n","      <td>Food Away From Home</td>\n","      <td>Others</td>\n","      <td>1.11</td>\n","    </tr>\n","    <tr>\n","      <th>50721</th>\n","      <td>1978</td>\n","      <td>Vegetable, total</td>\n","      <td>Food Away From Home</td>\n","      <td>Fast food</td>\n","      <td>0.12</td>\n","    </tr>\n","    <tr>\n","      <th>6313</th>\n","      <td>2018</td>\n","      <td>Vegetable, red and orange</td>\n","      <td>Food Away From Home</td>\n","      <td>Others</td>\n","      <td>0.01</td>\n","    </tr>\n","    <tr>\n","      <th>74544</th>\n","      <td>2017</td>\n","      <td>Fruit, juice</td>\n","      <td>Total</td>\n","      <td>None</td>\n","      <td>0.22</td>\n","    </tr>\n","    <tr>\n","      <th>82008</th>\n","      <td>1989</td>\n","      <td>Discretionary fats</td>\n","      <td>Food Away From Home</td>\n","      <td>Restaurant</td>\n","      <td>3.67</td>\n","    </tr>\n","    <tr>\n","      <th>63131</th>\n","      <td>1994</td>\n","      <td>Discretionary fats and oils</td>\n","      <td>Food Away From Home</td>\n","      <td>School</td>\n","      <td>2.56</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1a03b0f-0d56-48d4-9b88-8c487a2c5d0d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1a03b0f-0d56-48d4-9b88-8c487a2c5d0d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1a03b0f-0d56-48d4-9b88-8c487a2c5d0d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6f31c8be-fc24-483f-bffd-fda5290f9119\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6f31c8be-fc24-483f-bffd-fda5290f9119')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6f31c8be-fc24-483f-bffd-fda5290f9119 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"food_group_long_final\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 1978,\n        \"max\": 2018,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2006,\n          1978,\n          1990\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Group\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Discretionary fats\",\n          \"Fruit, whole fruit\",\n          \"Vegetable, total\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Food at Home\",\n          \"Food Away From Home\",\n          \"Total\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Subsource\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \" Others\",\n          \" School\",\n          \" Restaurant\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.266980662835862,\n        \"min\": 0.01,\n        \"max\": 3.67,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3.67,\n          0.06,\n          0.12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}],"source":["# Step 1: Drop rows with missing 'Value'\n","food_group_cleaned = food_group.dropna(subset=['Value']).copy()\n","\n","# Step 2: Extract survey years and statistic type\n","food_group_cleaned[['Survey_Years', 'Statistic']] = food_group_cleaned['Survey years:Variable'].str.extract(r'(\\d{4}-\\d{4})-(\\w+)', expand=True)\n","\n","# Step 3: Filter to only \"Mean\" values\n","food_group_mean = food_group_cleaned[food_group_cleaned['Statistic'].str.lower().str.strip() == 'mean'].copy()\n","\n","# Step 4: Convert 'Value' to numeric\n","food_group_mean['Value'] = pd.to_numeric(food_group_mean['Value'], errors='coerce')\n","food_group_mean.dropna(subset=['Value'], inplace=True)\n","\n","# Step 5: Split 'Food group:Food source' into 3 components\n","split_cols = food_group_mean['Food group:Food source'].str.split(':', n=2, expand=True)\n","food_group_mean['Group'] = split_cols[0]\n","food_group_mean['Source'] = split_cols[1]\n","food_group_mean['Subsource'] = split_cols[2] if split_cols.shape[1] > 2 else None\n","# Map 'Source' values to full names\n","source_map = {\n","    'FAH': 'Food at Home',\n","    'FAFH': 'Food Away From Home',\n","    'Total': 'Total'\n","}\n","food_group_mean['Source'] = food_group_mean['Source'].map(source_map)\n","\n","# Step 6: Expand multi-year ranges into individual years\n","def expand_years(row):\n","    try:\n","        start, end = map(int, row['Survey_Years'].split('-'))\n","        return pd.DataFrame({\n","            'Year': list(range(start, end + 1)),\n","            'Group': row['Group'],\n","            'Source': row['Source'],\n","            'Subsource': row['Subsource'],\n","            'Value': row['Value']\n","        })\n","    except:\n","        return pd.DataFrame()\n","\n","# Step 7: Apply the transformation\n","food_group_long_final = pd.concat(\n","    [expand_years(row) for _, row in food_group_mean.iterrows()],\n","    ignore_index=True\n",")\n","food_group_mean['Subsource'] = (\n","    split_cols[2].str.strip() if split_cols.shape[1] > 2 else None\n",")\n","food_group_long_final.sample(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":479},"id":"CA7SCsqMaCtf","executionInfo":{"status":"ok","timestamp":1748319568206,"user_tz":300,"elapsed":5,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"e69c5ee0-24f2-475d-ac30-bebbaac099fc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Year  Food Away From Home |  Fast food | Added sugars  \\\n","12  2005                                         2.690500   \n","1   1978                                         1.206471   \n","24  2017                                         2.465500   \n","25  2018                                         2.465500   \n","4   1991                                         2.334500   \n","14  2007                                         2.492500   \n","6   1995                                         2.877000   \n","5   1994                                         2.877000   \n","13  2006                                         2.690500   \n","10  2003                                         3.189500   \n","\n","    Food Away From Home |  Fast food | Dairy, cheese  \\\n","12                                          0.187000   \n","1                                           0.023529   \n","24                                          0.189000   \n","25                                          0.189000   \n","4                                           0.084000   \n","14                                          0.175000   \n","6                                           0.114500   \n","5                                           0.114500   \n","13                                          0.187000   \n","10                                          0.218500   \n","\n","    Food Away From Home |  Fast food | Dairy, fluid milk  \\\n","12                                           0.046500      \n","1                                            0.038824      \n","24                                           0.060000      \n","25                                           0.060000      \n","4                                            0.060500      \n","14                                           0.034000      \n","6                                            0.035000      \n","5                                            0.035000      \n","13                                           0.046500      \n","10                                           0.036500      \n","\n","    Food Away From Home |  Fast food | Dairy, total  \\\n","12                                         0.235000   \n","1                                          0.064118   \n","24                                         0.252000   \n","25                                         0.252000   \n","4                                          0.144500   \n","14                                         0.212000   \n","6                                          0.151000   \n","5                                          0.151000   \n","13                                         0.235000   \n","10                                         0.256000   \n","\n","    Food Away From Home |  Fast food | Dairy, yogurt  \\\n","12                                            0.0000   \n","1                                             0.0000   \n","24                                            0.0015   \n","25                                            0.0015   \n","4                                             0.0000   \n","14                                            0.0000   \n","6                                             0.0000   \n","5                                             0.0000   \n","13                                            0.0000   \n","10                                            0.0005   \n","\n","    Food Away From Home |  Fast food | Discretionary fats  \\\n","12                                           7.786000       \n","1                                            2.915294       \n","24                                           6.560500       \n","25                                           6.560500       \n","4                                            6.839500       \n","14                                           6.973000       \n","6                                            7.641500       \n","5                                            7.641500       \n","13                                           7.786000       \n","10                                          10.220000       \n","\n","    Food Away From Home |  Fast food | Discretionary fats and oils  \\\n","12                                          11.968500                \n","1                                            3.449412                \n","24                                          12.476000                \n","25                                          12.476000                \n","4                                            8.607500                \n","14                                          10.772500                \n","6                                            9.419000                \n","5                                            9.419000                \n","13                                          11.968500                \n","10                                          13.390000                \n","\n","    Food Away From Home |  Fast food | Discretionary oils  \\\n","12                                           4.184000       \n","1                                            0.532941       \n","24                                           5.913000       \n","25                                           5.913000       \n","4                                            1.768500       \n","14                                           3.801000       \n","6                                            1.778000       \n","5                                            1.778000       \n","13                                           4.184000       \n","10                                           3.169500       \n","\n","    Food Away From Home |  Fast food | Energy  ...  \\\n","12                                 347.324000  ...   \n","1                                  102.594118  ...   \n","24                                 354.105000  ...   \n","25                                 354.105000  ...   \n","4                                  252.475000  ...   \n","14                                 306.063000  ...   \n","6                                  272.560000  ...   \n","5                                  272.560000  ...   \n","13                                 347.324000  ...   \n","10                                 376.790500  ...   \n","\n","    Food Away From Home |  School | Protein foods, poultry  \\\n","12                                           0.049231        \n","1                                            0.035385        \n","24                                           0.027692        \n","25                                           0.027692        \n","4                                            0.019231        \n","14                                           0.058462        \n","6                                            0.028462        \n","5                                            0.028462        \n","13                                           0.049231        \n","10                                           0.035385        \n","\n","    Food Away From Home |  School | Protein foods, soy products  \\\n","12                                           0.000000             \n","1                                            0.000000             \n","24                                           0.003077             \n","25                                           0.003077             \n","4                                            0.000000             \n","14                                           0.000000             \n","6                                            0.000000             \n","5                                            0.000000             \n","13                                           0.000000             \n","10                                           0.000769             \n","\n","    Food Away From Home |  School | Protein foods, total  \\\n","12                                           0.119231      \n","1                                            0.240000      \n","24                                           0.080000      \n","25                                           0.080000      \n","4                                            0.137692      \n","14                                           0.140769      \n","6                                            0.134615      \n","5                                            0.134615      \n","13                                           0.119231      \n","10                                           0.119231      \n","\n","    Food Away From Home |  School | Vegetable, dark green  \\\n","12                                                0.0       \n","1                                                 0.0       \n","24                                                0.0       \n","25                                                0.0       \n","4                                                 0.0       \n","14                                                0.0       \n","6                                                 0.0       \n","5                                                 0.0       \n","13                                                0.0       \n","10                                                0.0       \n","\n","    Food Away From Home |  School | Vegetable, others  \\\n","12                                           0.009231   \n","1                                            0.020769   \n","24                                           0.002308   \n","25                                           0.002308   \n","4                                            0.013077   \n","14                                           0.007692   \n","6                                            0.014615   \n","5                                            0.014615   \n","13                                           0.009231   \n","10                                           0.010769   \n","\n","    Food Away From Home |  School | Vegetable, red and orange  \\\n","12                                           0.002308           \n","1                                            0.001538           \n","24                                           0.003077           \n","25                                           0.003077           \n","4                                            0.001538           \n","14                                           0.001538           \n","6                                            0.000000           \n","5                                            0.000000           \n","13                                           0.002308           \n","10                                           0.003077           \n","\n","    Food Away From Home |  School | Vegetable, tomatoes  \\\n","12                                           0.010000     \n","1                                            0.014615     \n","24                                           0.005385     \n","25                                           0.005385     \n","4                                            0.010769     \n","14                                           0.006923     \n","6                                            0.012308     \n","5                                            0.012308     \n","13                                           0.010000     \n","10                                           0.013077     \n","\n","    Food Away From Home |  School | Vegetable, total  \\\n","12                                          0.032308   \n","1                                           0.073077   \n","24                                          0.021538   \n","25                                          0.021538   \n","4                                           0.053846   \n","14                                          0.033077   \n","6                                           0.050769   \n","5                                           0.050769   \n","13                                          0.032308   \n","10                                          0.036154   \n","\n","    Food Away From Home |  School | Vegetables, other starchy  \\\n","12                                           0.002308           \n","1                                            0.012308           \n","24                                           0.000000           \n","25                                           0.000000           \n","4                                            0.004615           \n","14                                           0.001538           \n","6                                            0.002308           \n","5                                            0.002308           \n","13                                           0.002308           \n","10                                           0.000000           \n","\n","    Food Away From Home |  School | Vegetables, potatoes  \n","12                                           0.004615     \n","1                                            0.020769     \n","24                                           0.003846     \n","25                                           0.003846     \n","4                                            0.020000     \n","14                                           0.011538     \n","6                                            0.019231     \n","5                                            0.019231     \n","13                                           0.004615     \n","10                                           0.009231     \n","\n","[10 rows x 145 columns]"],"text/html":["\n","  <div id=\"df-90be91b1-98e2-4cdc-afdd-533cd7fbdb3e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Food Away From Home |  Fast food | Added sugars</th>\n","      <th>Food Away From Home |  Fast food | Dairy, cheese</th>\n","      <th>Food Away From Home |  Fast food | Dairy, fluid milk</th>\n","      <th>Food Away From Home |  Fast food | Dairy, total</th>\n","      <th>Food Away From Home |  Fast food | Dairy, yogurt</th>\n","      <th>Food Away From Home |  Fast food | Discretionary fats</th>\n","      <th>Food Away From Home |  Fast food | Discretionary fats and oils</th>\n","      <th>Food Away From Home |  Fast food | Discretionary oils</th>\n","      <th>Food Away From Home |  Fast food | Energy</th>\n","      <th>...</th>\n","      <th>Food Away From Home |  School | Protein foods, poultry</th>\n","      <th>Food Away From Home |  School | Protein foods, soy products</th>\n","      <th>Food Away From Home |  School | Protein foods, total</th>\n","      <th>Food Away From Home |  School | Vegetable, dark green</th>\n","      <th>Food Away From Home |  School | Vegetable, others</th>\n","      <th>Food Away From Home |  School | Vegetable, red and orange</th>\n","      <th>Food Away From Home |  School | Vegetable, tomatoes</th>\n","      <th>Food Away From Home |  School | Vegetable, total</th>\n","      <th>Food Away From Home |  School | Vegetables, other starchy</th>\n","      <th>Food Away From Home |  School | Vegetables, potatoes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>12</th>\n","      <td>2005</td>\n","      <td>2.690500</td>\n","      <td>0.187000</td>\n","      <td>0.046500</td>\n","      <td>0.235000</td>\n","      <td>0.0000</td>\n","      <td>7.786000</td>\n","      <td>11.968500</td>\n","      <td>4.184000</td>\n","      <td>347.324000</td>\n","      <td>...</td>\n","      <td>0.049231</td>\n","      <td>0.000000</td>\n","      <td>0.119231</td>\n","      <td>0.0</td>\n","      <td>0.009231</td>\n","      <td>0.002308</td>\n","      <td>0.010000</td>\n","      <td>0.032308</td>\n","      <td>0.002308</td>\n","      <td>0.004615</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1978</td>\n","      <td>1.206471</td>\n","      <td>0.023529</td>\n","      <td>0.038824</td>\n","      <td>0.064118</td>\n","      <td>0.0000</td>\n","      <td>2.915294</td>\n","      <td>3.449412</td>\n","      <td>0.532941</td>\n","      <td>102.594118</td>\n","      <td>...</td>\n","      <td>0.035385</td>\n","      <td>0.000000</td>\n","      <td>0.240000</td>\n","      <td>0.0</td>\n","      <td>0.020769</td>\n","      <td>0.001538</td>\n","      <td>0.014615</td>\n","      <td>0.073077</td>\n","      <td>0.012308</td>\n","      <td>0.020769</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2017</td>\n","      <td>2.465500</td>\n","      <td>0.189000</td>\n","      <td>0.060000</td>\n","      <td>0.252000</td>\n","      <td>0.0015</td>\n","      <td>6.560500</td>\n","      <td>12.476000</td>\n","      <td>5.913000</td>\n","      <td>354.105000</td>\n","      <td>...</td>\n","      <td>0.027692</td>\n","      <td>0.003077</td>\n","      <td>0.080000</td>\n","      <td>0.0</td>\n","      <td>0.002308</td>\n","      <td>0.003077</td>\n","      <td>0.005385</td>\n","      <td>0.021538</td>\n","      <td>0.000000</td>\n","      <td>0.003846</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2018</td>\n","      <td>2.465500</td>\n","      <td>0.189000</td>\n","      <td>0.060000</td>\n","      <td>0.252000</td>\n","      <td>0.0015</td>\n","      <td>6.560500</td>\n","      <td>12.476000</td>\n","      <td>5.913000</td>\n","      <td>354.105000</td>\n","      <td>...</td>\n","      <td>0.027692</td>\n","      <td>0.003077</td>\n","      <td>0.080000</td>\n","      <td>0.0</td>\n","      <td>0.002308</td>\n","      <td>0.003077</td>\n","      <td>0.005385</td>\n","      <td>0.021538</td>\n","      <td>0.000000</td>\n","      <td>0.003846</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1991</td>\n","      <td>2.334500</td>\n","      <td>0.084000</td>\n","      <td>0.060500</td>\n","      <td>0.144500</td>\n","      <td>0.0000</td>\n","      <td>6.839500</td>\n","      <td>8.607500</td>\n","      <td>1.768500</td>\n","      <td>252.475000</td>\n","      <td>...</td>\n","      <td>0.019231</td>\n","      <td>0.000000</td>\n","      <td>0.137692</td>\n","      <td>0.0</td>\n","      <td>0.013077</td>\n","      <td>0.001538</td>\n","      <td>0.010769</td>\n","      <td>0.053846</td>\n","      <td>0.004615</td>\n","      <td>0.020000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2007</td>\n","      <td>2.492500</td>\n","      <td>0.175000</td>\n","      <td>0.034000</td>\n","      <td>0.212000</td>\n","      <td>0.0000</td>\n","      <td>6.973000</td>\n","      <td>10.772500</td>\n","      <td>3.801000</td>\n","      <td>306.063000</td>\n","      <td>...</td>\n","      <td>0.058462</td>\n","      <td>0.000000</td>\n","      <td>0.140769</td>\n","      <td>0.0</td>\n","      <td>0.007692</td>\n","      <td>0.001538</td>\n","      <td>0.006923</td>\n","      <td>0.033077</td>\n","      <td>0.001538</td>\n","      <td>0.011538</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1995</td>\n","      <td>2.877000</td>\n","      <td>0.114500</td>\n","      <td>0.035000</td>\n","      <td>0.151000</td>\n","      <td>0.0000</td>\n","      <td>7.641500</td>\n","      <td>9.419000</td>\n","      <td>1.778000</td>\n","      <td>272.560000</td>\n","      <td>...</td>\n","      <td>0.028462</td>\n","      <td>0.000000</td>\n","      <td>0.134615</td>\n","      <td>0.0</td>\n","      <td>0.014615</td>\n","      <td>0.000000</td>\n","      <td>0.012308</td>\n","      <td>0.050769</td>\n","      <td>0.002308</td>\n","      <td>0.019231</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1994</td>\n","      <td>2.877000</td>\n","      <td>0.114500</td>\n","      <td>0.035000</td>\n","      <td>0.151000</td>\n","      <td>0.0000</td>\n","      <td>7.641500</td>\n","      <td>9.419000</td>\n","      <td>1.778000</td>\n","      <td>272.560000</td>\n","      <td>...</td>\n","      <td>0.028462</td>\n","      <td>0.000000</td>\n","      <td>0.134615</td>\n","      <td>0.0</td>\n","      <td>0.014615</td>\n","      <td>0.000000</td>\n","      <td>0.012308</td>\n","      <td>0.050769</td>\n","      <td>0.002308</td>\n","      <td>0.019231</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2006</td>\n","      <td>2.690500</td>\n","      <td>0.187000</td>\n","      <td>0.046500</td>\n","      <td>0.235000</td>\n","      <td>0.0000</td>\n","      <td>7.786000</td>\n","      <td>11.968500</td>\n","      <td>4.184000</td>\n","      <td>347.324000</td>\n","      <td>...</td>\n","      <td>0.049231</td>\n","      <td>0.000000</td>\n","      <td>0.119231</td>\n","      <td>0.0</td>\n","      <td>0.009231</td>\n","      <td>0.002308</td>\n","      <td>0.010000</td>\n","      <td>0.032308</td>\n","      <td>0.002308</td>\n","      <td>0.004615</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2003</td>\n","      <td>3.189500</td>\n","      <td>0.218500</td>\n","      <td>0.036500</td>\n","      <td>0.256000</td>\n","      <td>0.0005</td>\n","      <td>10.220000</td>\n","      <td>13.390000</td>\n","      <td>3.169500</td>\n","      <td>376.790500</td>\n","      <td>...</td>\n","      <td>0.035385</td>\n","      <td>0.000769</td>\n","      <td>0.119231</td>\n","      <td>0.0</td>\n","      <td>0.010769</td>\n","      <td>0.003077</td>\n","      <td>0.013077</td>\n","      <td>0.036154</td>\n","      <td>0.000000</td>\n","      <td>0.009231</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 145 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90be91b1-98e2-4cdc-afdd-533cd7fbdb3e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-90be91b1-98e2-4cdc-afdd-533cd7fbdb3e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-90be91b1-98e2-4cdc-afdd-533cd7fbdb3e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-88b51fdd-c6a5-45e1-9fea-588d8329bf5d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88b51fdd-c6a5-45e1-9fea-588d8329bf5d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-88b51fdd-c6a5-45e1-9fea-588d8329bf5d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":33}],"source":["# Pivot to wide format with Subsource included\n","food_group_wide_final = food_group_long_final.pivot_table(\n","    index=\"Year\",\n","    columns=[\"Source\", \"Subsource\", \"Group\"],\n","    values=\"Value\"\n",")\n","\n","# Flatten multi-index column names\n","food_group_wide_final.columns = [\n","    \" | \".join(filter(None, [src, subsrc, grp])) for src, subsrc, grp in food_group_wide_final.columns\n","]\n","food_group_wide_final.reset_index(inplace=True)\n","\n","food_group_wide_final.sample(10)"]},{"cell_type":"markdown","metadata":{"id":"oJtSEYLMz74L"},"source":["### Cleaning the Food Density Dataset\n","\n","This dataset measures how much of each food group was consumed per 1,000 calories. Like other intake tables, it needed to be reshaped into tidy format.\n","\n","Steps:\n","- Dropped rows with missing values\n","- Extracted `Survey_Years` and `Statistic` fields\n","- Filtered to include only “Mean” values\n","- Converted values to numeric\n","- Expanded year ranges (e.g., `1999–2000`) into individual years\n","- Produced both long and wide versions for analysis"]},{"cell_type":"code","source":["# Step 1: Drop rows with missing 'Value'\n","density_cleaned = density.dropna(subset=['Value']).copy()\n","\n","# Step 2: Extract survey years and statistic type\n","density_cleaned[['Survey_Years', 'Statistic']] = density_cleaned['Survey years:Variable'].str.extract(r'(\\d{4}-\\d{4})-(\\w+)', expand=True)\n","\n","# Step 3: Filter to only \"Mean\" values\n","density_mean = density_cleaned[density_cleaned['Statistic'].str.lower().str.strip() == 'mean'].copy()\n","\n","# Step 4: Convert 'Value' to numeric\n","density_mean['Value'] = pd.to_numeric(density_mean['Value'], errors='coerce')\n","density_mean.dropna(subset=['Value'], inplace=True)\n","\n","# Step 5: Split 'Food group:Food source' into components\n","split_cols = density_mean['Food group:Food source'].str.split(':', n=2, expand=True)\n","density_mean['Group'] = split_cols[0].str.strip()\n","density_mean['Source'] = split_cols[1].str.strip()\n","density_mean['Subsource'] = split_cols[2].str.strip() if split_cols.shape[1] > 2 else None\n","\n","# Step 6: Map source codes to full names\n","source_map = {\n","    'FAH': 'Food at Home',\n","    'FAFH': 'Food Away From Home',\n","    'Total': 'Total'\n","}\n","density_mean['Source'] = density_mean['Source'].map(source_map)\n","\n","# Step 7: Expand multi-year ranges into individual years\n","def expand_years(row):\n","    try:\n","        start, end = map(int, row['Survey_Years'].split('-'))\n","        return pd.DataFrame({\n","            'Year': list(range(start, end + 1)),\n","            'Group': row['Group'],\n","            'Source': row['Source'],\n","            'Subsource': row['Subsource'],\n","            'Value': row['Value']\n","        })\n","    except:\n","        return pd.DataFrame()\n","\n","# Step 8: Apply transformation\n","density_long_final = pd.concat(\n","    [expand_years(row) for _, row in density_mean.iterrows()],\n","    ignore_index=True\n",")\n","\n","# Clean trailing whitespace\n","density_long_final['Subsource'] = density_long_final['Subsource'].str.strip()\n"],"metadata":{"id":"n8u7TC8yklXY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["density_long_final.sample(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"d_M-0x14k1qr","executionInfo":{"status":"ok","timestamp":1748319582235,"user_tz":300,"elapsed":10,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"2382f6cf-f23b-40d6-be43-7227e36f0498"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Year                                              Group  \\\n","69223   1990                          Vegetable, red and orange   \n","53797   2008                              Vegetable, dark green   \n","68782   1977                         Protein foods, organ meats   \n","61744   2017                                Protein foods, eggs   \n","30863   2014  Protein foods, meats (beef, veal, pork, lamb, ...   \n","77934   2005                        Discretionary fats and oils   \n","102069  1989                                      Grains, total   \n","7498    1990                                            Legumes   \n","21497   1995                          Vegetables, other starchy   \n","71387   2006                        Discretionary fats and oils   \n","\n","                     Source   Subsource  Value  \n","69223   Food Away From Home   Fast food   0.02  \n","53797                 Total        None   0.06  \n","68782   Food Away From Home  Restaurant   0.07  \n","61744   Food Away From Home        None   0.26  \n","30863   Food Away From Home      Others   0.46  \n","77934          Food at Home        None  25.53  \n","102069  Food Away From Home      School   2.50  \n","7498                  Total        None   0.05  \n","21497   Food Away From Home   Fast food   0.01  \n","71387   Food Away From Home  Restaurant  34.74  "],"text/html":["\n","  <div id=\"df-8b8aba68-7b4f-49ae-9ef0-a0d2a47961dd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Group</th>\n","      <th>Source</th>\n","      <th>Subsource</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>69223</th>\n","      <td>1990</td>\n","      <td>Vegetable, red and orange</td>\n","      <td>Food Away From Home</td>\n","      <td>Fast food</td>\n","      <td>0.02</td>\n","    </tr>\n","    <tr>\n","      <th>53797</th>\n","      <td>2008</td>\n","      <td>Vegetable, dark green</td>\n","      <td>Total</td>\n","      <td>None</td>\n","      <td>0.06</td>\n","    </tr>\n","    <tr>\n","      <th>68782</th>\n","      <td>1977</td>\n","      <td>Protein foods, organ meats</td>\n","      <td>Food Away From Home</td>\n","      <td>Restaurant</td>\n","      <td>0.07</td>\n","    </tr>\n","    <tr>\n","      <th>61744</th>\n","      <td>2017</td>\n","      <td>Protein foods, eggs</td>\n","      <td>Food Away From Home</td>\n","      <td>None</td>\n","      <td>0.26</td>\n","    </tr>\n","    <tr>\n","      <th>30863</th>\n","      <td>2014</td>\n","      <td>Protein foods, meats (beef, veal, pork, lamb, ...</td>\n","      <td>Food Away From Home</td>\n","      <td>Others</td>\n","      <td>0.46</td>\n","    </tr>\n","    <tr>\n","      <th>77934</th>\n","      <td>2005</td>\n","      <td>Discretionary fats and oils</td>\n","      <td>Food at Home</td>\n","      <td>None</td>\n","      <td>25.53</td>\n","    </tr>\n","    <tr>\n","      <th>102069</th>\n","      <td>1989</td>\n","      <td>Grains, total</td>\n","      <td>Food Away From Home</td>\n","      <td>School</td>\n","      <td>2.50</td>\n","    </tr>\n","    <tr>\n","      <th>7498</th>\n","      <td>1990</td>\n","      <td>Legumes</td>\n","      <td>Total</td>\n","      <td>None</td>\n","      <td>0.05</td>\n","    </tr>\n","    <tr>\n","      <th>21497</th>\n","      <td>1995</td>\n","      <td>Vegetables, other starchy</td>\n","      <td>Food Away From Home</td>\n","      <td>Fast food</td>\n","      <td>0.01</td>\n","    </tr>\n","    <tr>\n","      <th>71387</th>\n","      <td>2006</td>\n","      <td>Discretionary fats and oils</td>\n","      <td>Food Away From Home</td>\n","      <td>Restaurant</td>\n","      <td>34.74</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b8aba68-7b4f-49ae-9ef0-a0d2a47961dd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b8aba68-7b4f-49ae-9ef0-a0d2a47961dd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b8aba68-7b4f-49ae-9ef0-a0d2a47961dd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-326c1054-8acf-4c8b-bdd9-f32ca7246908\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-326c1054-8acf-4c8b-bdd9-f32ca7246908')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-326c1054-8acf-4c8b-bdd9-f32ca7246908 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"density_long_final\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1977,\n        \"max\": 2017,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1995,\n          2008,\n          2005\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Group\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Legumes\",\n          \"Vegetable, dark green\",\n          \"Discretionary fats and oils\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Food Away From Home\",\n          \"Total\",\n          \"Food at Home\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Subsource\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Restaurant\",\n          \"School\",\n          \"Fast food\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.734119521977167,\n        \"min\": 0.01,\n        \"max\": 34.74,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.01,\n          0.06,\n          25.53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"VtNJleEA0J6N","outputId":"77fdc19e-82ac-4b96-b2d4-26d9f98e2887","executionInfo":{"status":"ok","timestamp":1748319582239,"user_tz":300,"elapsed":2,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  Food Away From Home | Added sugars  \\\n","0  1977                           10.863580   \n","1  1978                           10.863580   \n","2  1989                            9.974946   \n","3  1990                            9.974946   \n","4  1991                            9.974946   \n","\n","   Food Away From Home | Dairy, cheese  \\\n","0                             0.180741   \n","1                             0.180741   \n","2                             0.251935   \n","3                             0.251935   \n","4                             0.251935   \n","\n","   Food Away From Home | Dairy, fluid milk  \\\n","0                                 0.730370   \n","1                                 0.730370   \n","2                                 0.525806   \n","3                                 0.525806   \n","4                                 0.525806   \n","\n","   Food Away From Home | Dairy, total  Food Away From Home | Dairy, yogurt  \\\n","0                            0.915926                             0.004074   \n","1                            0.915926                             0.004074   \n","2                            0.787957                             0.009247   \n","3                            0.787957                             0.009247   \n","4                            0.787957                             0.009247   \n","\n","   Food Away From Home | Discretionary fats  \\\n","0                                 26.880000   \n","1                                 26.880000   \n","2                                 25.427742   \n","3                                 25.427742   \n","4                                 25.427742   \n","\n","   Food Away From Home | Discretionary fats and oils  \\\n","0                                          31.645185   \n","1                                          31.645185   \n","2                                          31.506882   \n","3                                          31.506882   \n","4                                          31.506882   \n","\n","   Food Away From Home | Discretionary oils  Food Away From Home | Energy  \\\n","0                                  4.765432                    139.883827   \n","1                                  4.765432                    139.883827   \n","2                                  6.078710                    204.888817   \n","3                                  6.078710                    204.888817   \n","4                                  6.078710                    204.888817   \n","\n","   ...  Total | Protein foods, poultry  Total | Protein foods, soy products  \\\n","0  ...                        0.595882                             0.006471   \n","1  ...                        0.595882                             0.006471   \n","2  ...                        0.694000                             0.009000   \n","3  ...                        0.694000                             0.009000   \n","4  ...                        0.694000                             0.009000   \n","\n","   Total | Protein foods, total  Total | Vegetable, dark green  \\\n","0                      3.382941                       0.034706   \n","1                      3.382941                       0.034706   \n","2                      2.905000                       0.047000   \n","3                      2.905000                       0.047000   \n","4                      2.905000                       0.047000   \n","\n","   Total | Vegetable, others  Total | Vegetable, red and orange  \\\n","0                   0.281176                           0.051176   \n","1                   0.281176                           0.051176   \n","2                   0.279500                           0.047000   \n","3                   0.279500                           0.047000   \n","4                   0.279500                           0.047000   \n","\n","   Total | Vegetable, tomatoes  Total | Vegetable, total  \\\n","0                     0.130588                  0.815294   \n","1                     0.130588                  0.815294   \n","2                     0.135000                  0.808000   \n","3                     0.135000                  0.808000   \n","4                     0.135000                  0.808000   \n","\n","   Total | Vegetables, other starchy  Total | Vegetables, potatoes  \n","0                           0.085294                      0.232941  \n","1                           0.085294                      0.232941  \n","2                           0.067500                      0.231000  \n","3                           0.067500                      0.231000  \n","4                           0.067500                      0.231000  \n","\n","[5 rows x 109 columns]"],"text/html":["\n","  <div id=\"df-bae75d54-fbe6-4889-89b0-9d9f3c82b92c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Food Away From Home | Added sugars</th>\n","      <th>Food Away From Home | Dairy, cheese</th>\n","      <th>Food Away From Home | Dairy, fluid milk</th>\n","      <th>Food Away From Home | Dairy, total</th>\n","      <th>Food Away From Home | Dairy, yogurt</th>\n","      <th>Food Away From Home | Discretionary fats</th>\n","      <th>Food Away From Home | Discretionary fats and oils</th>\n","      <th>Food Away From Home | Discretionary oils</th>\n","      <th>Food Away From Home | Energy</th>\n","      <th>...</th>\n","      <th>Total | Protein foods, poultry</th>\n","      <th>Total | Protein foods, soy products</th>\n","      <th>Total | Protein foods, total</th>\n","      <th>Total | Vegetable, dark green</th>\n","      <th>Total | Vegetable, others</th>\n","      <th>Total | Vegetable, red and orange</th>\n","      <th>Total | Vegetable, tomatoes</th>\n","      <th>Total | Vegetable, total</th>\n","      <th>Total | Vegetables, other starchy</th>\n","      <th>Total | Vegetables, potatoes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1977</td>\n","      <td>10.863580</td>\n","      <td>0.180741</td>\n","      <td>0.730370</td>\n","      <td>0.915926</td>\n","      <td>0.004074</td>\n","      <td>26.880000</td>\n","      <td>31.645185</td>\n","      <td>4.765432</td>\n","      <td>139.883827</td>\n","      <td>...</td>\n","      <td>0.595882</td>\n","      <td>0.006471</td>\n","      <td>3.382941</td>\n","      <td>0.034706</td>\n","      <td>0.281176</td>\n","      <td>0.051176</td>\n","      <td>0.130588</td>\n","      <td>0.815294</td>\n","      <td>0.085294</td>\n","      <td>0.232941</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1978</td>\n","      <td>10.863580</td>\n","      <td>0.180741</td>\n","      <td>0.730370</td>\n","      <td>0.915926</td>\n","      <td>0.004074</td>\n","      <td>26.880000</td>\n","      <td>31.645185</td>\n","      <td>4.765432</td>\n","      <td>139.883827</td>\n","      <td>...</td>\n","      <td>0.595882</td>\n","      <td>0.006471</td>\n","      <td>3.382941</td>\n","      <td>0.034706</td>\n","      <td>0.281176</td>\n","      <td>0.051176</td>\n","      <td>0.130588</td>\n","      <td>0.815294</td>\n","      <td>0.085294</td>\n","      <td>0.232941</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1989</td>\n","      <td>9.974946</td>\n","      <td>0.251935</td>\n","      <td>0.525806</td>\n","      <td>0.787957</td>\n","      <td>0.009247</td>\n","      <td>25.427742</td>\n","      <td>31.506882</td>\n","      <td>6.078710</td>\n","      <td>204.888817</td>\n","      <td>...</td>\n","      <td>0.694000</td>\n","      <td>0.009000</td>\n","      <td>2.905000</td>\n","      <td>0.047000</td>\n","      <td>0.279500</td>\n","      <td>0.047000</td>\n","      <td>0.135000</td>\n","      <td>0.808000</td>\n","      <td>0.067500</td>\n","      <td>0.231000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1990</td>\n","      <td>9.974946</td>\n","      <td>0.251935</td>\n","      <td>0.525806</td>\n","      <td>0.787957</td>\n","      <td>0.009247</td>\n","      <td>25.427742</td>\n","      <td>31.506882</td>\n","      <td>6.078710</td>\n","      <td>204.888817</td>\n","      <td>...</td>\n","      <td>0.694000</td>\n","      <td>0.009000</td>\n","      <td>2.905000</td>\n","      <td>0.047000</td>\n","      <td>0.279500</td>\n","      <td>0.047000</td>\n","      <td>0.135000</td>\n","      <td>0.808000</td>\n","      <td>0.067500</td>\n","      <td>0.231000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1991</td>\n","      <td>9.974946</td>\n","      <td>0.251935</td>\n","      <td>0.525806</td>\n","      <td>0.787957</td>\n","      <td>0.009247</td>\n","      <td>25.427742</td>\n","      <td>31.506882</td>\n","      <td>6.078710</td>\n","      <td>204.888817</td>\n","      <td>...</td>\n","      <td>0.694000</td>\n","      <td>0.009000</td>\n","      <td>2.905000</td>\n","      <td>0.047000</td>\n","      <td>0.279500</td>\n","      <td>0.047000</td>\n","      <td>0.135000</td>\n","      <td>0.808000</td>\n","      <td>0.067500</td>\n","      <td>0.231000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 109 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bae75d54-fbe6-4889-89b0-9d9f3c82b92c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bae75d54-fbe6-4889-89b0-9d9f3c82b92c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bae75d54-fbe6-4889-89b0-9d9f3c82b92c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-11a797ae-b6ad-4e5b-a70f-52bac9b5f281\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-11a797ae-b6ad-4e5b-a70f-52bac9b5f281')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-11a797ae-b6ad-4e5b-a70f-52bac9b5f281 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"density_wide_final"}},"metadata":{},"execution_count":36}],"source":["# Pivot to wide format\n","density_wide_final = density_long_final.pivot_table(\n","    index=\"Year\",\n","    columns=[\"Source\", \"Group\"],  # Group = Food Group\n","    values=\"Value\"\n",")\n","\n","# Flatten multi-index column names for ease of use\n","density_wide_final.columns = [\n","    f\"{src} | {group}\" for src, group in density_wide_final.columns\n","]\n","density_wide_final.reset_index(inplace=True)\n","\n","# Preview result\n","density_wide_final.head()"]},{"cell_type":"markdown","metadata":{"id":"qiOCwaMrDDCg"},"source":["### Cleaning the Recommended Food Density Dataset\n","\n","This dataset provides USDA-recommended nutrient and food group intake per 1,000 calories. Cleaning steps included:\n","\n","- Dropped irrelevant columns\n","- Converted numeric strings to actual numbers\n","- Filtered only rows containing USDA recommendations (not actual intake)\n","- Renamed key columns for clarity and SQL compatibility"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0h6E_VwtF0WG"},"outputs":[],"source":["#drop \"table\" column\n","rec_density = rec_density.drop(columns=['Table'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t5PAcr5RF3PN"},"outputs":[],"source":["#string to numeric values\n","cols = ['Value']\n","rec_density[cols] = pd.to_numeric(rec_density[cols].stack(), errors='coerce').unstack()"]},{"cell_type":"markdown","metadata":{"id":"dSwjtrf8GbJp"},"source":["Next, we looked at the variables and determined that we only needed the recommended food density from this table since the other information (actual food densities) was available in our Food Group Density data set so we filtered for only observations with the recommended food density amounts."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XyH6KIv7H5hf","outputId":"9187e0a2-05f4-47e0-9c3f-eb5255c9fdc7","executionInfo":{"status":"ok","timestamp":1748319582276,"user_tz":300,"elapsed":32,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Recommended density*:Nutrient or food group amount per 1,000 calories',\n","       '2017-2018 Actual density-Total-Nutrient or food group amount per 1,000 calories ',\n","       '2017-2018 Actual density-FAH-Nutrient or food group amount per 1,000 calories ',\n","       '2017-2018 Actual density-FAFH-Nutrient or food group amount per 1,000 calories ',\n","       '2017-2018 Actual density-Restaurant-Nutrient or food group amount per 1,000 calories ',\n","       '2017-2018 Actual density-Fast food-Nutrient or food group amount per 1,000 calories ',\n","       '2017-2018 Actual density-School-Nutrient or food group amount per 1,000 calories ',\n","       '2017-2018 density as a ratio of the recommended density-Total-Ratio of actual density to the recommended density',\n","       '2017-2018 density as a ratio of the recommended density-FAH-Ratio of actual density to the recommended density',\n","       '2017-2018 density as a ratio of the recommended density-FAFH-Ratio of actual density to the recommended density',\n","       '2017-2018 density as a ratio of the recommended density-Restaurant-Ratio of actual density to the recommended density',\n","       '2017-2018 density as a ratio of the recommended density-Fast food-Ratio of actual density to the recommended density',\n","       '2017-2018 density as a ratio of the recommended density-School-Ratio of actual density to the recommended density'],\n","      dtype=object)"]},"metadata":{},"execution_count":39}],"source":["# look at unique values of \"variable\"\n","unique_values = rec_density['Variable'].unique()\n","unique_values"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JreyRVrRGGn4"},"outputs":[],"source":["#filtered for observations that only include recommended density of food\n","rec_density_final = rec_density[rec_density['Variable'].isin(['Recommended density*:Nutrient or food group amount per 1,000 calories'])]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0rzjfbpXH-uo"},"outputs":[],"source":["# drop the 'variable' column\n","rec_density_final = rec_density_final.drop(columns=['Variable'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"B4lIr3HmIBYM"},"outputs":[],"source":["#rename value column\n","rec_density_final = rec_density_final.rename(columns = {'Value': 'RecDensity_per1000cal'})"]},{"cell_type":"markdown","metadata":{"id":"kyBsNH1B1c8n","tags":[]},"source":["#### SQL Database"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZC42ImCt1c8q"},"outputs":[],"source":["conn = sqlite3.connect(\"final.db\")\n","c = conn.cursor()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hOEuKYfm1c8q","outputId":"5476afb5-1488-486d-a7cc-bded2fa8e6fe","executionInfo":{"status":"ok","timestamp":1748319582305,"user_tz":300,"elapsed":16,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<sqlite3.Cursor at 0x7895ce2ff040>"]},"metadata":{},"execution_count":44}],"source":["# Run create table sql query\n","c.execute(\"\"\"CREATE TABLE IF NOT EXISTS CPI_final\n","             (Homecooked_or_Takeout, Food Category, Attribute,\n","       Percent Change)\"\"\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e0rBGsdf1c8q","outputId":"58dd5e67-21fb-48bd-a064-b463f91d6e68","executionInfo":{"status":"ok","timestamp":1748319582353,"user_tz":300,"elapsed":47,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["209"]},"metadata":{},"execution_count":45}],"source":["CPI_final.to_sql('final', conn, if_exists='replace', index=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DydbJtbB1c8r"},"outputs":[],"source":["tables = {\n","    'nut_intake_long_final': nut_intake_long_final,\n","    'nut_intake_wide_final': nut_intake_wide_final,\n","    'food_group_long_final': food_group_long_final,\n","    'food_group_wide_final': food_group_wide_final,\n","    'density_long_final': density_long_final,\n","    'density_wide_final': density_wide_final,\n","    'rec_density_final': rec_density_final,\n","    'sales_final': sales_final,\n","    'sales_percapita_final': sales_percapita_final,\n","    'sales_NTT_final': sales_NTT_final,\n","    'sales_percapNTT_final': sales_percapNTT_final,\n","    'size_final': size_final\n","}\n","\n","for name, df in tables.items():\n","    df.to_sql(name, conn, if_exists='replace', index=False)"]},{"cell_type":"markdown","metadata":{"tags":[],"id":"pziJ8hAyaCtg"},"source":["## 3. Exploratory Data Analysis (EDA)\n","\n","This section explores high-level trends and patterns in food consumption, nutrient intake, and sales. We use descriptive statistics, group summaries, and plots to highlight insights that inform our modeling and interpretation in later sections."]},{"cell_type":"markdown","metadata":{"id":"EE9U1SW8aCth"},"source":["### Table 1: Intake by Food Group  \n","\n","This table aggregates total intake by food group and calculates each group’s share of total intake across all sources and years. It identifies which food groups dominate the American diet and supports comparison of dietary patterns at a high level.\n","\n"]},{"cell_type":"code","source":["pd.read_sql_query(\"SELECT * FROM food_group_long_final LIMIT 5;\", conn)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"RJ92T8QqYHMK","executionInfo":{"status":"ok","timestamp":1748319583169,"user_tz":300,"elapsed":14,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"eca77a0a-8535-472b-b7eb-30cc5e381374"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year   Group               Source Subsource    Value\n","0  1977  Energy                Total      None  1806.88\n","1  1978  Energy                Total      None  1806.88\n","2  1977  Energy         Food at Home      None  1462.27\n","3  1978  Energy         Food at Home      None  1462.27\n","4  1977  Energy  Food Away From Home      None   344.61"],"text/html":["\n","  <div id=\"df-5ce0524d-f20d-4cb9-b7aa-dfff1d95241b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Group</th>\n","      <th>Source</th>\n","      <th>Subsource</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1977</td>\n","      <td>Energy</td>\n","      <td>Total</td>\n","      <td>None</td>\n","      <td>1806.88</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1978</td>\n","      <td>Energy</td>\n","      <td>Total</td>\n","      <td>None</td>\n","      <td>1806.88</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1977</td>\n","      <td>Energy</td>\n","      <td>Food at Home</td>\n","      <td>None</td>\n","      <td>1462.27</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1978</td>\n","      <td>Energy</td>\n","      <td>Food at Home</td>\n","      <td>None</td>\n","      <td>1462.27</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1977</td>\n","      <td>Energy</td>\n","      <td>Food Away From Home</td>\n","      <td>None</td>\n","      <td>344.61</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ce0524d-f20d-4cb9-b7aa-dfff1d95241b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5ce0524d-f20d-4cb9-b7aa-dfff1d95241b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5ce0524d-f20d-4cb9-b7aa-dfff1d95241b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-090c9d3a-4344-499e-aa5d-5f51912ae62a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-090c9d3a-4344-499e-aa5d-5f51912ae62a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-090c9d3a-4344-499e-aa5d-5f51912ae62a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["query = \"\"\"\n","SELECT DISTINCT \"Group\"\n","FROM food_group_long_final\n","ORDER BY \"Group\"\n","\"\"\"\n","\n","food_groups = pd.read_sql_query(query, conn)\n","food_groups\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"bW9n_4uiaLao","executionInfo":{"status":"ok","timestamp":1748319583188,"user_tz":300,"elapsed":18,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"6ababa4c-e199-4ea9-f4c2-98f9d9e2486b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                Group\n","0                                        Added sugars\n","1                                       Dairy, cheese\n","2                                   Dairy, fluid milk\n","3                                        Dairy, total\n","4                                       Dairy, yogurt\n","5                                  Discretionary fats\n","6                         Discretionary fats and oils\n","7                                  Discretionary oils\n","8                                              Energy\n","9                   Fruit, citrus, melon, and berries\n","10                                       Fruit, juice\n","11                                       Fruit, other\n","12                                       Fruit, total\n","13                                 Fruit, whole fruit\n","14                           Grains, non-whole grains\n","15                                      Grains, total\n","16                               Grains, whole grains\n","17                                            Legumes\n","18                          Protein foods, cured meat\n","19                                Protein foods, eggs\n","20             Protein foods, high Omega-3 fatty fish\n","21              Protein foods, low Omega-3 fatty fish\n","22  Protein foods, meats (beef, veal, pork, lamb, ...\n","23            Protein foods, meats, poultry, and fish\n","24                      Protein foods, nuts and seeds\n","25                         Protein foods, organ meats\n","26                             Protein foods, poultry\n","27                        Protein foods, soy products\n","28                               Protein foods, total\n","29                              Vegetable, dark green\n","30                                  Vegetable, others\n","31                          Vegetable, red and orange\n","32                                Vegetable, tomatoes\n","33                                   Vegetable, total\n","34                          Vegetables, other starchy\n","35                               Vegetables, potatoes"],"text/html":["\n","  <div id=\"df-86f66167-3a51-4cdc-a085-ca1b302f24f1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Added sugars</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Dairy, cheese</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Dairy, fluid milk</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dairy, total</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Dairy, yogurt</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Discretionary fats</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Discretionary fats and oils</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Discretionary oils</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Energy</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Fruit, citrus, melon, and berries</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Fruit, juice</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Fruit, other</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Fruit, total</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Fruit, whole fruit</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Grains, non-whole grains</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Grains, total</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Grains, whole grains</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Legumes</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Protein foods, cured meat</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Protein foods, eggs</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Protein foods, high Omega-3 fatty fish</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Protein foods, low Omega-3 fatty fish</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Protein foods, meats (beef, veal, pork, lamb, ...</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Protein foods, meats, poultry, and fish</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Protein foods, nuts and seeds</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Protein foods, organ meats</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Protein foods, poultry</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Protein foods, soy products</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Protein foods, total</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Vegetable, dark green</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Vegetable, others</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Vegetable, red and orange</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Vegetable, tomatoes</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Vegetable, total</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Vegetables, other starchy</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>Vegetables, potatoes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86f66167-3a51-4cdc-a085-ca1b302f24f1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-86f66167-3a51-4cdc-a085-ca1b302f24f1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-86f66167-3a51-4cdc-a085-ca1b302f24f1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-240aa55d-b399-4a6a-a4ab-a0447cd333be\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-240aa55d-b399-4a6a-a4ab-a0447cd333be')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-240aa55d-b399-4a6a-a4ab-a0447cd333be button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_3d4a6640-26aa-4704-82c7-55b41bed6d28\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('food_groups')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3d4a6640-26aa-4704-82c7-55b41bed6d28 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('food_groups');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"food_groups","summary":"{\n  \"name\": \"food_groups\",\n  \"rows\": 36,\n  \"fields\": [\n    {\n      \"column\": \"Group\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36,\n        \"samples\": [\n          \"Vegetables, potatoes\",\n          \"Fruit, whole fruit\",\n          \"Protein foods, poultry\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["query = \"\"\"\n","SELECT\n","    Year,\n","    \"Group\" AS Food_Group,\n","    SUM(Value) AS Total_Value\n","FROM food_group_long_final\n","WHERE Source = 'Total'\n","  AND \"Group\" IN (\n","    'Dairy, total',\n","    'Fruit, total',\n","    'Grains, whole grains',\n","    'Grains, non-whole grains',\n","    'Legumes',\n","    'Protein foods, total',\n","    'Vegetable, total'\n",")\n","GROUP BY Year, \"Group\"\n","ORDER BY Year, Total_Value DESC\n","\"\"\"\n","\n","totals_by_group = pd.read_sql_query(query, conn)\n","totals_by_group.sample(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"Bm6z-hDzWHh6","executionInfo":{"status":"ok","timestamp":1748319583209,"user_tz":300,"elapsed":20,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"329bc91f-49de-4683-fe0b-9392aabd608f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Year                Food_Group  Total_Value\n","106  2008      Protein foods, total       109.22\n","139  2012                   Legumes         2.44\n","172  2017              Fruit, total        19.15\n","126  2011  Grains, non-whole grains       117.10\n","75   2003      Grains, whole grains        11.40\n","23   1990              Dairy, total        31.27\n","56   1997  Grains, non-whole grains       117.77\n","68   1998      Grains, whole grains        14.23\n","173  2017      Grains, whole grains        16.64\n","171  2017          Vegetable, total        26.87"],"text/html":["\n","  <div id=\"df-306d5061-4025-4747-bd1e-7c449e104898\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Food_Group</th>\n","      <th>Total_Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>106</th>\n","      <td>2008</td>\n","      <td>Protein foods, total</td>\n","      <td>109.22</td>\n","    </tr>\n","    <tr>\n","      <th>139</th>\n","      <td>2012</td>\n","      <td>Legumes</td>\n","      <td>2.44</td>\n","    </tr>\n","    <tr>\n","      <th>172</th>\n","      <td>2017</td>\n","      <td>Fruit, total</td>\n","      <td>19.15</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>2011</td>\n","      <td>Grains, non-whole grains</td>\n","      <td>117.10</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>2003</td>\n","      <td>Grains, whole grains</td>\n","      <td>11.40</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>1990</td>\n","      <td>Dairy, total</td>\n","      <td>31.27</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>1997</td>\n","      <td>Grains, non-whole grains</td>\n","      <td>117.77</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>1998</td>\n","      <td>Grains, whole grains</td>\n","      <td>14.23</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>2017</td>\n","      <td>Grains, whole grains</td>\n","      <td>16.64</td>\n","    </tr>\n","    <tr>\n","      <th>171</th>\n","      <td>2017</td>\n","      <td>Vegetable, total</td>\n","      <td>26.87</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-306d5061-4025-4747-bd1e-7c449e104898')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-306d5061-4025-4747-bd1e-7c449e104898 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-306d5061-4025-4747-bd1e-7c449e104898');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-47eea4d3-d424-4945-af09-60e4bf210b88\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47eea4d3-d424-4945-af09-60e4bf210b88')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-47eea4d3-d424-4945-af09-60e4bf210b88 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"totals_by_group\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 1990,\n        \"max\": 2017,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2012,\n          1990,\n          2008\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Food_Group\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Protein foods, total\",\n          \"Legumes\",\n          \"Dairy, total\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 47.6900069779357,\n        \"min\": 2.4400000000000004,\n        \"max\": 117.77,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          16.64,\n          2.4400000000000004,\n          31.269999999999996\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["# Filter and prepare data\n","earliest_year = totals_by_group['Year'].min()\n","latest_year = totals_by_group['Year'].max()\n","\n","# Pull data for the two years and normalize to % of total\n","data_compare = totals_by_group[totals_by_group['Year'].isin([earliest_year, latest_year])].copy()\n","data_compare['Share'] = data_compare.groupby('Year')['Total_Value'].transform(lambda x: x / x.sum() * 100)\n","\n","# Pivot for plotting\n","pivot_df = data_compare.pivot(index='Food_Group', columns='Year', values='Share').fillna(0)\n","\n","# Sort by 2018 values for consistent visual\n","pivot_df = pivot_df.sort_values(by=latest_year)\n","\n","# Plot\n","plt.figure(figsize=(10, 7))\n","pivot_df[[latest_year, earliest_year]].plot(\n","    kind='barh',\n","    width=0.7,\n","    figsize=(12, 8),\n","    color=['#4C72B0', '#DD8452']\n",")\n","plt.xlabel(\"Share of Total Intake (%)\")\n","plt.ylabel(\"Food Group\")\n","plt.title(f\"Diet Composition: {earliest_year} vs. {latest_year}\")\n","plt.legend([f\"{earliest_year}\", f\"{latest_year}\"], title=\"Year\")\n","plt.grid(axis='x', linestyle='--', alpha=0.5)\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":825},"id":"PcbXnNnWbpIi","executionInfo":{"status":"ok","timestamp":1748319583564,"user_tz":300,"elapsed":345,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"d3b8c217-6830-4b4b-94ea-f636c531cffe"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"MXxnH-d7aCth"},"source":["### Table 2: Sales by Region  \n","\n","This table summarizes annual food sales across U.S. regions, including food at home (FAH) and food away from home (FAFH). It helps assess regional spending trends and differences in consumer behavior over time."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pTQBbM2KC2Dy"},"outputs":[],"source":["# defining states in each region\n","NE = ['Connecticut', 'Maine', 'Massachusetts','New Hampshire','New Jersey', 'New York',\n","      'Pennsylvania','Rhode Island', 'Vermont']\n","MW = ['Illinois', 'Indiana', 'Iowa', 'Kansas', 'Michigan', 'Minnesota', 'Missouri',\n","      'Nebraska', 'North Dakota', 'Ohio', 'South Dakota', 'Wisconsin']\n","SO = ['Alabama', 'Arkansas', 'Delaware', 'District of Columbia', 'Florida', 'Georgia',\n","      'Kentucky', 'Louisiana', 'Maryland', 'Mississippi', 'North Carolina', 'Oklahoma',\n","      'South Carolina', 'Tennessee', 'Texas', 'Virginia', 'West Virginia']\n","WE = ['Alaska', 'Arizona', 'California', 'Colorado', 'Hawaii', 'Idaho', 'Montana',\n","      'Nevada', 'New Mexico', 'Oregon', 'Utah', 'Washington', 'Wyoming']\n","# making a copy\n","sales_table = sales_final.copy()\n","\n","#assign regions values\n","sales_table['Region'] = 'West'\n","\n","sales_table.loc[sales_table['State'].isin(NE), 'Region'] = 'Northeast'\n","sales_table.loc[sales_table['State'].isin(MW), 'Region'] = 'Midwest'\n","sales_table.loc[sales_table['State'].isin(SO), 'Region'] = 'South'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zm-arVPGkSmS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1748319583571,"user_tz":300,"elapsed":4,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"64187f06-c9b6-48bc-b94d-31744ee43e35"},"outputs":[{"output_type":"stream","name":"stdout","text":["     Year     Region  FAH Sales (Nominal $M)  FAFH Sales (Nominal $M)\n","0    1997    Midwest                84211.93                 62835.62\n","1    1997  Northeast                70359.12                 52124.59\n","2    1997      South               134202.41                 99944.66\n","3    1997       West                86259.38                 69004.36\n","4    1998    Midwest                85663.43                 65617.76\n","..    ...        ...                     ...                      ...\n","103  2022       West               284692.24                332132.93\n","104  2023    Midwest               192202.94                223858.30\n","105  2023  Northeast               169898.57                229296.24\n","106  2023      South               410956.38                487555.32\n","107  2023       West               291693.39                373124.18\n","\n","[108 rows x 4 columns]\n"]}],"source":["# Grouping and summing FAH and FAFH sales in nominal dollars by region\n","grouped_salest2 = sales_table.groupby(['Year', 'Region'])[\n","    ['FAH sales million nominal U.S. dollars with taxes and tips',\n","     'FAFH sales million nominal U.S. dollars with taxes and tips']\n","].sum().reset_index()\n","\n","# Optional: Rename columns for readability\n","grouped_salest2.columns =['Year', 'Region', 'FAH Sales (Nominal $M)', 'FAFH Sales (Nominal $M)']\n","\n","# Display the result\n","print(grouped_salest2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"znkNLuF-kWnQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1748319583575,"user_tz":300,"elapsed":4,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"e611bbda-81ad-4189-8bd0-d39eb76b975f"},"outputs":[{"output_type":"stream","name":"stdout","text":["     Year     Region  FAH Sales (Nominal $M)  FAFH Sales (Nominal $M)  \\\n","0    1997    Midwest                84211.93                 62835.62   \n","1    1997  Northeast                70359.12                 52124.59   \n","2    1997      South               134202.41                 99944.66   \n","3    1997       West                86259.38                 69004.36   \n","4    1998    Midwest                85663.43                 65617.76   \n","..    ...        ...                     ...                      ...   \n","103  2022       West               284692.24                332132.93   \n","104  2023    Midwest               192202.94                223858.30   \n","105  2023  Northeast               169898.57                229296.24   \n","106  2023      South               410956.38                487555.32   \n","107  2023       West               291693.39                373124.18   \n","\n","     Total Sales (Nominal $M)  \n","0                   147047.55  \n","1                   122483.71  \n","2                   234147.07  \n","3                   155263.74  \n","4                   151281.19  \n","..                        ...  \n","103                 616825.17  \n","104                 416061.24  \n","105                 399194.81  \n","106                 898511.70  \n","107                 664817.57  \n","\n","[108 rows x 5 columns]\n"]}],"source":["# adding total sales column\n","grouped_salest2['Total Sales (Nominal $M)'] = (\n","    grouped_salest2['FAH Sales (Nominal $M)'] + grouped_salest2['FAFH Sales (Nominal $M)']\n",")\n","print(grouped_salest2)"]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.lineplot(\n","    data=grouped_salest2,\n","    x='Year',\n","    y='Total Sales (Nominal $M)',\n","    hue='Region',\n","    marker='o'\n",")\n","plt.title(\"Total Food Sales by Region (Nominal USD)\", fontsize=14)\n","plt.xlabel(\"Year\", fontsize=12)\n","plt.ylabel(\"Total Sales (in Millions)\", fontsize=12)\n","plt.legend(title='Region')\n","plt.grid(True)\n","plt.tight_layout()\n","plt.savefig(\"regional_sales_trend.png\", dpi=300)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"x4j3TI8bdhDB","executionInfo":{"status":"ok","timestamp":1748319584184,"user_tz":300,"elapsed":609,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"796f2411-7bc8-43df-e786-ac3e16287114"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"htZrC509aCth"},"source":["### Table 3: Nutrient Intake Trends (2007–2017)  \n","This table compares average daily intake of key nutrients between 2007 and 2017. It highlights shifts in dietary composition over the decade and helps identify increasing or declining nutrient trends.\n"]},{"cell_type":"code","source":["query = \"\"\"WITH filtered AS (\n","    SELECT * FROM nut_intake_wide_final WHERE Year IN (2007, 2017)\n","),\n","long_format AS (\n","    SELECT Year, 'Energy (kcal)' AS Nutrient, \"Total | Energy\" AS Value FROM filtered\n","    UNION ALL SELECT Year, 'Total Fat (%)', \"Total | Total Fat\" FROM filtered\n","    UNION ALL SELECT Year, 'Saturated Fat (%)', \"Total | Saturated fatty acids\" FROM filtered\n","    UNION ALL SELECT Year, 'Fiber (g)', \"Total | Fiber, dietary\" FROM filtered\n","    UNION ALL SELECT Year, 'Protein (g)', \"Total | Protein\" FROM filtered\n","    UNION ALL SELECT Year, 'Calcium (mg)', \"Total | Calcium\" FROM filtered\n","    UNION ALL SELECT Year, 'Iron (mg)', \"Total | Iron\" FROM filtered\n","    UNION ALL SELECT Year, 'Sodium (mg)', \"Total | Sodium\" FROM filtered\n","),\n","pivoted AS (\n","    SELECT\n","        Nutrient,\n","        MAX(CASE WHEN Year = 2007 THEN Value END) AS Intake_2007,\n","        MAX(CASE WHEN Year = 2017 THEN Value END) AS Intake_2017\n","    FROM long_format\n","    GROUP BY Nutrient\n",")\n","SELECT\n","    Nutrient,\n","    ROUND(Intake_2007, 2) AS Intake_2007,\n","    ROUND(Intake_2017, 2) AS Intake_2017,\n","    ROUND((Intake_2017 - Intake_2007) * 100.0 / Intake_2007, 2) AS Percent_Change\n","FROM pivoted\n","ORDER BY Percent_Change DESC;\n","\"\"\"\n","table3_sql_result = pd.read_sql(query, conn)\n","\n","table3_sql_result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"5bhomGLYdwrz","executionInfo":{"status":"ok","timestamp":1748319584187,"user_tz":300,"elapsed":4,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"7b29a313-5aea-425c-b5ae-bfda783e718a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Nutrient  Intake_2007  Intake_2017  Percent_Change\n","0      Total Fat (%)        76.49        83.75            9.50\n","1          Fiber (g)        14.92        16.13            8.17\n","2  Saturated Fat (%)        25.69        27.61            7.48\n","3       Calcium (mg)       923.30       954.39            3.37\n","4      Energy (kcal)      2031.14      2074.63            2.14\n","5        Protein (g)        76.58        77.23            0.85\n","6        Sodium (mg)      3412.38      3348.33           -1.88\n","7          Iron (mg)        14.53        13.93           -4.10"],"text/html":["\n","  <div id=\"df-4d08a916-8c0e-419a-ae8e-4d995829d7c3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nutrient</th>\n","      <th>Intake_2007</th>\n","      <th>Intake_2017</th>\n","      <th>Percent_Change</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Total Fat (%)</td>\n","      <td>76.49</td>\n","      <td>83.75</td>\n","      <td>9.50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Fiber (g)</td>\n","      <td>14.92</td>\n","      <td>16.13</td>\n","      <td>8.17</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Saturated Fat (%)</td>\n","      <td>25.69</td>\n","      <td>27.61</td>\n","      <td>7.48</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Calcium (mg)</td>\n","      <td>923.30</td>\n","      <td>954.39</td>\n","      <td>3.37</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Energy (kcal)</td>\n","      <td>2031.14</td>\n","      <td>2074.63</td>\n","      <td>2.14</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Protein (g)</td>\n","      <td>76.58</td>\n","      <td>77.23</td>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Sodium (mg)</td>\n","      <td>3412.38</td>\n","      <td>3348.33</td>\n","      <td>-1.88</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Iron (mg)</td>\n","      <td>14.53</td>\n","      <td>13.93</td>\n","      <td>-4.10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d08a916-8c0e-419a-ae8e-4d995829d7c3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4d08a916-8c0e-419a-ae8e-4d995829d7c3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4d08a916-8c0e-419a-ae8e-4d995829d7c3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-97deb35e-33ea-49bf-b364-8269af6da268\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97deb35e-33ea-49bf-b364-8269af6da268')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-97deb35e-33ea-49bf-b364-8269af6da268 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_15e0d978-fcb7-4f1e-a14e-83bf24158181\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('table3_sql_result')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_15e0d978-fcb7-4f1e-a14e-83bf24158181 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('table3_sql_result');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"table3_sql_result","summary":"{\n  \"name\": \"table3_sql_result\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Nutrient\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Fiber (g)\",\n          \"Protein (g)\",\n          \"Total Fat (%)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Intake_2007\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1266.6762657943764,\n        \"min\": 14.53,\n        \"max\": 3412.38,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.92,\n          76.58,\n          76.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Intake_2017\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1253.6835307661522,\n        \"min\": 13.93,\n        \"max\": 3348.33,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          16.13,\n          77.23,\n          83.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percent_Change\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.905974309815679,\n        \"min\": -4.1,\n        \"max\": 9.5,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          8.17,\n          0.85,\n          9.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["# Plot\n","sns.barplot(\n","    data=table3_sql_result,\n","    x='Percent_Change',\n","    y='Nutrient',\n","    hue='Nutrient',\n","    palette='coolwarm',\n","    dodge=False,\n","    legend=False\n",")\n","\n","plt.title(\"Percent Change in Nutrient Intake (2007 to 2017)\", fontsize=14)\n","plt.xlabel(\"Percent Change\")\n","plt.ylabel(\"Nutrient\")\n","plt.axvline(0, color='black', linestyle='--')\n","plt.grid(True)\n","plt.tight_layout()\n","plt.savefig(\"chart_nutrient_change_2007_2017.png\", dpi=300)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"hpLynei2d9tV","executionInfo":{"status":"ok","timestamp":1748319584588,"user_tz":300,"elapsed":400,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"05fa0271-9885-4f4e-f668-b36d468731ef"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"0mZ2LFJeaCth"},"source":["### Table 4: Actual vs Recommended Densities  \n","This table compares U.S. nutrient intake per 1,000 calories to USDA-recommended targets. It includes actual values, deltas, and percent deviation over time for core nutrients like fiber, sodium, and saturated fat — helping assess over- or under-consumption."]},{"cell_type":"code","source":["query = \"\"\"\n","WITH nutrient_map AS (\n","    SELECT 'Fiber (g)' AS RecLabel, 'Total | Fiber, dietary' AS ActualColumn\n","    UNION ALL SELECT 'Saturated fats (percent of calories)**', 'Total | Saturated fatty acids'\n","    UNION ALL SELECT 'Calcium (mg)', 'Total | Calcium'\n","    UNION ALL SELECT 'Iron (mg)', 'Total | Iron'\n","    UNION ALL SELECT 'Sodium (mg)', 'Total | Sodium'\n","),\n","base AS (\n","    SELECT\n","        r.\"Nutrient or Food group\" AS Nutrient,\n","        r.RecDensity_per1000cal AS Recommended,\n","        n.Year,\n","        CASE\n","            WHEN r.\"Nutrient or Food group\" = 'Fiber (g)' THEN n.\"Total | Fiber, dietary\"\n","            WHEN r.\"Nutrient or Food group\" = 'Saturated fats (percent of calories)**' THEN n.\"Total | Saturated fatty acids\"\n","            WHEN r.\"Nutrient or Food group\" = 'Calcium (mg)' THEN n.\"Total | Calcium\"\n","            WHEN r.\"Nutrient or Food group\" = 'Iron (mg)' THEN n.\"Total | Iron\"\n","            WHEN r.\"Nutrient or Food group\" = 'Sodium (mg)' THEN n.\"Total | Sodium\"\n","        END AS Actual\n","    FROM rec_density_final r\n","    JOIN nutrient_map m ON r.\"Nutrient or Food group\" = m.RecLabel\n","    JOIN nut_intake_wide_final n\n","),\n","final AS (\n","    SELECT\n","        Nutrient,\n","        Year,\n","        ROUND(Recommended, 2) AS Recommended,\n","        ROUND(Actual, 2) AS Actual,\n","        ROUND(Actual - Recommended, 2) AS Delta,\n","        ROUND((Actual - Recommended) * 100.0 / Recommended, 2) AS Percent_Deviation\n","    FROM base\n","    WHERE Actual IS NOT NULL\n",")\n","SELECT * FROM final\n","ORDER BY Nutrient, Year;\n","\"\"\"\n","\n","# Run SQL and store result\n","table4_sql_result = pd.read_sql(query, conn)\n","table4_sql_result.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"0BGRrnJGe1W9","executionInfo":{"status":"ok","timestamp":1748319584591,"user_tz":300,"elapsed":5,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"2f14e87b-9a69-437c-9b0c-3d15c72983a9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Nutrient  Year  Recommended  Actual   Delta  Percent_Deviation\n","0  Calcium (mg)  1977        500.0  763.77  263.77              52.75\n","1  Calcium (mg)  1978        500.0  763.77  263.77              52.75\n","2  Calcium (mg)  1989        500.0  755.22  255.22              51.04\n","3  Calcium (mg)  1990        500.0  755.22  255.22              51.04\n","4  Calcium (mg)  1991        500.0  755.22  255.22              51.04"],"text/html":["\n","  <div id=\"df-a0f3d275-2b09-4d43-825d-4aa6786553ad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nutrient</th>\n","      <th>Year</th>\n","      <th>Recommended</th>\n","      <th>Actual</th>\n","      <th>Delta</th>\n","      <th>Percent_Deviation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Calcium (mg)</td>\n","      <td>1977</td>\n","      <td>500.0</td>\n","      <td>763.77</td>\n","      <td>263.77</td>\n","      <td>52.75</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Calcium (mg)</td>\n","      <td>1978</td>\n","      <td>500.0</td>\n","      <td>763.77</td>\n","      <td>263.77</td>\n","      <td>52.75</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Calcium (mg)</td>\n","      <td>1989</td>\n","      <td>500.0</td>\n","      <td>755.22</td>\n","      <td>255.22</td>\n","      <td>51.04</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Calcium (mg)</td>\n","      <td>1990</td>\n","      <td>500.0</td>\n","      <td>755.22</td>\n","      <td>255.22</td>\n","      <td>51.04</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Calcium (mg)</td>\n","      <td>1991</td>\n","      <td>500.0</td>\n","      <td>755.22</td>\n","      <td>255.22</td>\n","      <td>51.04</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0f3d275-2b09-4d43-825d-4aa6786553ad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a0f3d275-2b09-4d43-825d-4aa6786553ad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0f3d275-2b09-4d43-825d-4aa6786553ad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-85b94feb-cd43-4686-b7b7-4a2ad8a929d4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85b94feb-cd43-4686-b7b7-4a2ad8a929d4')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-85b94feb-cd43-4686-b7b7-4a2ad8a929d4 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"table4_sql_result","summary":"{\n  \"name\": \"table4_sql_result\",\n  \"rows\": 130,\n  \"fields\": [\n    {\n      \"column\": \"Nutrient\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Fiber (g)\",\n          \"Sodium (mg)\",\n          \"Iron (mg)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 1977,\n        \"max\": 2018,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          1997,\n          2009,\n          1977\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recommended\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 450.3733094106012,\n        \"min\": 9.0,\n        \"max\": 1150.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          14.0,\n          1150.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1316.568647050071,\n        \"min\": 12.93,\n        \"max\": 3505.54,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          13.91,\n          923.3,\n          13.93\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Delta\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 877.5186273823508,\n        \"min\": -1.07,\n        \"max\": 2355.54,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          4.91,\n          423.3,\n          4.93\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percent_Deviation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 68.87360049215181,\n        \"min\": -7.67,\n        \"max\": 204.83,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          54.52,\n          84.66,\n          54.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["#### SQL Code for Tables\n"],"metadata":{"id":"Lq_fV2oqftc0"}},{"cell_type":"code","source":["# Prepare a simplified sales table for SQL export (removes constant dollar columns)\n","q1_sales_table = sales_table.copy(deep=True)\n","q1_sales_table = q1_sales_table.drop(columns=[\n","    'FAH sales million constant 1988 U.S. dollars with taxes and tips',\n","    'FAFH sales million constant 1988 U.S. dollars with taxes and tips',\n","    'Total sales million constant 1988 U.S. dollars with taxes and tips'\n","])\n","q1_sales_table.columns = [\n","    'Year', 'State', 'FAH Sales (Nominal $M)',\n","    'FAFH Sales (Nominal $M)', 'Total Sales (Nominal $M)', 'Region'\n","]\n","\n","# Add summary tables to export list\n","tables.update({\n","    'grouped_salest2': grouped_salest2,\n","    'q1_sales_table': q1_sales_table,\n","    'table3_sql_result': table3_sql_result,\n","    'table4_sql_result': table4_sql_result\n","})\n","\n","# Export all tables to SQLite\n","for name, df in tables.items():\n","    df.to_sql(name, conn, if_exists='replace', index=False)"],"metadata":{"id":"olhQS8ZKfx4S"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"czdf9I5sET6h"},"source":["#### State Share of Total Expenditure per Region\n","\n","This query provides the share of total expenditures from each state of a region. The code takes the sum of \"Total Sales\" of all the states in each region then calculates the share expenditures for each state. This is ordered by region and total sales amount so users can see the states with the largest share of expenditures by region.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ivjg7317cmih","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1748319585600,"user_tz":300,"elapsed":34,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"61c448dc-8530-491c-ba97-8e7a289d8426"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Year                 State  FAH Sales (Nominal $M)  \\\n","0   2023              Illinois                31607.92   \n","1   2023                  Ohio                32550.73   \n","2   2023              Michigan                29275.19   \n","3   2023               Indiana                18526.06   \n","4   2023              Missouri                17417.12   \n","5   2023             Minnesota                15336.33   \n","6   2023             Wisconsin                17198.63   \n","7   2023                  Iowa                10086.13   \n","8   2023                Kansas                 9205.34   \n","9   2023              Nebraska                 6089.59   \n","10  2023          South Dakota                 2631.97   \n","11  2023          North Dakota                 2277.93   \n","12  2023              New York                56701.58   \n","13  2023          Pennsylvania                37821.57   \n","14  2023            New Jersey                26251.61   \n","15  2023         Massachusetts                22230.43   \n","16  2023           Connecticut                10531.23   \n","17  2023         New Hampshire                 5337.49   \n","18  2023                 Maine                 5461.52   \n","19  2023          Rhode Island                 3467.07   \n","20  2023               Vermont                 2096.07   \n","21  2023                 Texas               100304.68   \n","22  2023               Florida                75983.09   \n","23  2023               Georgia                35109.47   \n","24  2023        North Carolina                33857.31   \n","25  2023              Virginia                28570.15   \n","26  2023             Tennessee                22376.02   \n","27  2023              Maryland                19270.43   \n","28  2023        South Carolina                15687.11   \n","29  2023             Louisiana                14123.52   \n","30  2023               Alabama                14488.29   \n","31  2023              Kentucky                12823.98   \n","32  2023              Oklahoma                11129.55   \n","33  2023              Arkansas                 9301.51   \n","34  2023           Mississippi                 8175.85   \n","35  2023  District of Columbia                 2252.62   \n","36  2023         West Virginia                 4431.08   \n","37  2023              Delaware                 3071.72   \n","38  2023            California               138141.39   \n","39  2023            Washington                31543.72   \n","40  2023               Arizona                26179.59   \n","41  2023              Colorado                23711.01   \n","42  2023                Nevada                12464.68   \n","43  2023                Oregon                16895.09   \n","44  2023                  Utah                13544.62   \n","45  2023                Hawaii                 5506.97   \n","46  2023            New Mexico                 6833.89   \n","47  2023                 Idaho                 7537.31   \n","48  2023               Montana                 4162.43   \n","49  2023                Alaska                 3047.56   \n","50  2023               Wyoming                 2125.13   \n","\n","    FAFH Sales (Nominal $M)  Total Sales (Nominal $M)     Region  \\\n","0                  47590.62                  79198.54    Midwest   \n","1                  39170.16                  71720.89    Midwest   \n","2                  29591.38                  58866.57    Midwest   \n","3                  21727.52                  40253.58    Midwest   \n","4                  20312.24                  37729.37    Midwest   \n","5                  18962.58                  34298.91    Midwest   \n","6                  16978.36                  34177.00    Midwest   \n","7                   8945.12                  19031.24    Midwest   \n","8                   9003.01                  18208.35    Midwest   \n","9                   6387.32                  12476.91    Midwest   \n","10                  2865.92                   5497.89    Midwest   \n","11                  2324.07                   4602.00    Midwest   \n","12                 87901.18                 144602.77  Northeast   \n","13                 40430.96                  78252.53  Northeast   \n","14                 35500.04                  61751.65  Northeast   \n","15                 33013.25                  55243.68  Northeast   \n","16                 13878.26                  24409.48  Northeast   \n","17                  5951.72                  11289.21  Northeast   \n","18                  5440.01                  10901.53  Northeast   \n","19                  4907.45                   8374.52  Northeast   \n","20                  2273.37                   4369.43  Northeast   \n","21                121880.75                 222185.44      South   \n","22                 95626.28                 171609.38      South   \n","23                 39627.44                  74736.91      South   \n","24                 39120.07                  72977.38      South   \n","25                 30885.90                  59456.05      South   \n","26                 26798.71                  49174.73      South   \n","27                 21953.07                  41223.50      South   \n","28                 20416.25                  36103.36      South   \n","29                 16186.11                  30309.63      South   \n","30                 14944.97                  29433.26      South   \n","31                 14259.95                  27083.93      South   \n","32                 12697.43                  23826.97      South   \n","33                  8885.27                  18186.78      South   \n","34                  8613.45                  16789.30      South   \n","35                  7226.97                   9479.59      South   \n","36                  4596.70                   9027.79      South   \n","37                  3836.00                   6907.71      South   \n","38                199997.55                 338138.94       West   \n","39                 33281.63                  64825.34       West   \n","40                 28669.25                  54848.84       West   \n","41                 27277.17                  50988.18       West   \n","42                 22063.55                  34528.22       West   \n","43                 16584.71                  33479.80       West   \n","44                 12183.63                  25728.25       West   \n","45                  9584.62                  15091.59       West   \n","46                  7991.29                  14825.18       West   \n","47                  6227.53                  13764.84       West   \n","48                  4110.38                   8272.81       West   \n","49                  2816.45                   5864.01       West   \n","50                  2336.42                   4461.55       West   \n","\n","    Share_Total_Sales  \n","0            0.190353  \n","1            0.172381  \n","2            0.141485  \n","3            0.096749  \n","4            0.090682  \n","5            0.082437  \n","6            0.082144  \n","7            0.045741  \n","8            0.043764  \n","9            0.029988  \n","10           0.013214  \n","11           0.011061  \n","12           0.362236  \n","13           0.196026  \n","14           0.154691  \n","15           0.138388  \n","16           0.061147  \n","17           0.028280  \n","18           0.027309  \n","19           0.020979  \n","20           0.010946  \n","21           0.247282  \n","22           0.190993  \n","23           0.083179  \n","24           0.081220  \n","25           0.066172  \n","26           0.054729  \n","27           0.045880  \n","28           0.040181  \n","29           0.033733  \n","30           0.032758  \n","31           0.030143  \n","32           0.026518  \n","33           0.020241  \n","34           0.018686  \n","35           0.010550  \n","36           0.010047  \n","37           0.007688  \n","38           0.508619  \n","39           0.097508  \n","40           0.082502  \n","41           0.076695  \n","42           0.051936  \n","43           0.050359  \n","44           0.038700  \n","45           0.022700  \n","46           0.022300  \n","47           0.020705  \n","48           0.012444  \n","49           0.008820  \n","50           0.006711  "],"text/html":["\n","  <div id=\"df-0f0dea59-21b4-4ed8-be28-5d33f08ebd72\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>State</th>\n","      <th>FAH Sales (Nominal $M)</th>\n","      <th>FAFH Sales (Nominal $M)</th>\n","      <th>Total Sales (Nominal $M)</th>\n","      <th>Region</th>\n","      <th>Share_Total_Sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023</td>\n","      <td>Illinois</td>\n","      <td>31607.92</td>\n","      <td>47590.62</td>\n","      <td>79198.54</td>\n","      <td>Midwest</td>\n","      <td>0.190353</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023</td>\n","      <td>Ohio</td>\n","      <td>32550.73</td>\n","      <td>39170.16</td>\n","      <td>71720.89</td>\n","      <td>Midwest</td>\n","      <td>0.172381</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023</td>\n","      <td>Michigan</td>\n","      <td>29275.19</td>\n","      <td>29591.38</td>\n","      <td>58866.57</td>\n","      <td>Midwest</td>\n","      <td>0.141485</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023</td>\n","      <td>Indiana</td>\n","      <td>18526.06</td>\n","      <td>21727.52</td>\n","      <td>40253.58</td>\n","      <td>Midwest</td>\n","      <td>0.096749</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023</td>\n","      <td>Missouri</td>\n","      <td>17417.12</td>\n","      <td>20312.24</td>\n","      <td>37729.37</td>\n","      <td>Midwest</td>\n","      <td>0.090682</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2023</td>\n","      <td>Minnesota</td>\n","      <td>15336.33</td>\n","      <td>18962.58</td>\n","      <td>34298.91</td>\n","      <td>Midwest</td>\n","      <td>0.082437</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2023</td>\n","      <td>Wisconsin</td>\n","      <td>17198.63</td>\n","      <td>16978.36</td>\n","      <td>34177.00</td>\n","      <td>Midwest</td>\n","      <td>0.082144</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2023</td>\n","      <td>Iowa</td>\n","      <td>10086.13</td>\n","      <td>8945.12</td>\n","      <td>19031.24</td>\n","      <td>Midwest</td>\n","      <td>0.045741</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2023</td>\n","      <td>Kansas</td>\n","      <td>9205.34</td>\n","      <td>9003.01</td>\n","      <td>18208.35</td>\n","      <td>Midwest</td>\n","      <td>0.043764</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2023</td>\n","      <td>Nebraska</td>\n","      <td>6089.59</td>\n","      <td>6387.32</td>\n","      <td>12476.91</td>\n","      <td>Midwest</td>\n","      <td>0.029988</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2023</td>\n","      <td>South Dakota</td>\n","      <td>2631.97</td>\n","      <td>2865.92</td>\n","      <td>5497.89</td>\n","      <td>Midwest</td>\n","      <td>0.013214</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2023</td>\n","      <td>North Dakota</td>\n","      <td>2277.93</td>\n","      <td>2324.07</td>\n","      <td>4602.00</td>\n","      <td>Midwest</td>\n","      <td>0.011061</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2023</td>\n","      <td>New York</td>\n","      <td>56701.58</td>\n","      <td>87901.18</td>\n","      <td>144602.77</td>\n","      <td>Northeast</td>\n","      <td>0.362236</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2023</td>\n","      <td>Pennsylvania</td>\n","      <td>37821.57</td>\n","      <td>40430.96</td>\n","      <td>78252.53</td>\n","      <td>Northeast</td>\n","      <td>0.196026</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2023</td>\n","      <td>New Jersey</td>\n","      <td>26251.61</td>\n","      <td>35500.04</td>\n","      <td>61751.65</td>\n","      <td>Northeast</td>\n","      <td>0.154691</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>2023</td>\n","      <td>Massachusetts</td>\n","      <td>22230.43</td>\n","      <td>33013.25</td>\n","      <td>55243.68</td>\n","      <td>Northeast</td>\n","      <td>0.138388</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2023</td>\n","      <td>Connecticut</td>\n","      <td>10531.23</td>\n","      <td>13878.26</td>\n","      <td>24409.48</td>\n","      <td>Northeast</td>\n","      <td>0.061147</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2023</td>\n","      <td>New Hampshire</td>\n","      <td>5337.49</td>\n","      <td>5951.72</td>\n","      <td>11289.21</td>\n","      <td>Northeast</td>\n","      <td>0.028280</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>2023</td>\n","      <td>Maine</td>\n","      <td>5461.52</td>\n","      <td>5440.01</td>\n","      <td>10901.53</td>\n","      <td>Northeast</td>\n","      <td>0.027309</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>2023</td>\n","      <td>Rhode Island</td>\n","      <td>3467.07</td>\n","      <td>4907.45</td>\n","      <td>8374.52</td>\n","      <td>Northeast</td>\n","      <td>0.020979</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2023</td>\n","      <td>Vermont</td>\n","      <td>2096.07</td>\n","      <td>2273.37</td>\n","      <td>4369.43</td>\n","      <td>Northeast</td>\n","      <td>0.010946</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2023</td>\n","      <td>Texas</td>\n","      <td>100304.68</td>\n","      <td>121880.75</td>\n","      <td>222185.44</td>\n","      <td>South</td>\n","      <td>0.247282</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2023</td>\n","      <td>Florida</td>\n","      <td>75983.09</td>\n","      <td>95626.28</td>\n","      <td>171609.38</td>\n","      <td>South</td>\n","      <td>0.190993</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2023</td>\n","      <td>Georgia</td>\n","      <td>35109.47</td>\n","      <td>39627.44</td>\n","      <td>74736.91</td>\n","      <td>South</td>\n","      <td>0.083179</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2023</td>\n","      <td>North Carolina</td>\n","      <td>33857.31</td>\n","      <td>39120.07</td>\n","      <td>72977.38</td>\n","      <td>South</td>\n","      <td>0.081220</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2023</td>\n","      <td>Virginia</td>\n","      <td>28570.15</td>\n","      <td>30885.90</td>\n","      <td>59456.05</td>\n","      <td>South</td>\n","      <td>0.066172</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2023</td>\n","      <td>Tennessee</td>\n","      <td>22376.02</td>\n","      <td>26798.71</td>\n","      <td>49174.73</td>\n","      <td>South</td>\n","      <td>0.054729</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2023</td>\n","      <td>Maryland</td>\n","      <td>19270.43</td>\n","      <td>21953.07</td>\n","      <td>41223.50</td>\n","      <td>South</td>\n","      <td>0.045880</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2023</td>\n","      <td>South Carolina</td>\n","      <td>15687.11</td>\n","      <td>20416.25</td>\n","      <td>36103.36</td>\n","      <td>South</td>\n","      <td>0.040181</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2023</td>\n","      <td>Louisiana</td>\n","      <td>14123.52</td>\n","      <td>16186.11</td>\n","      <td>30309.63</td>\n","      <td>South</td>\n","      <td>0.033733</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2023</td>\n","      <td>Alabama</td>\n","      <td>14488.29</td>\n","      <td>14944.97</td>\n","      <td>29433.26</td>\n","      <td>South</td>\n","      <td>0.032758</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>2023</td>\n","      <td>Kentucky</td>\n","      <td>12823.98</td>\n","      <td>14259.95</td>\n","      <td>27083.93</td>\n","      <td>South</td>\n","      <td>0.030143</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2023</td>\n","      <td>Oklahoma</td>\n","      <td>11129.55</td>\n","      <td>12697.43</td>\n","      <td>23826.97</td>\n","      <td>South</td>\n","      <td>0.026518</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2023</td>\n","      <td>Arkansas</td>\n","      <td>9301.51</td>\n","      <td>8885.27</td>\n","      <td>18186.78</td>\n","      <td>South</td>\n","      <td>0.020241</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>2023</td>\n","      <td>Mississippi</td>\n","      <td>8175.85</td>\n","      <td>8613.45</td>\n","      <td>16789.30</td>\n","      <td>South</td>\n","      <td>0.018686</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>2023</td>\n","      <td>District of Columbia</td>\n","      <td>2252.62</td>\n","      <td>7226.97</td>\n","      <td>9479.59</td>\n","      <td>South</td>\n","      <td>0.010550</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>2023</td>\n","      <td>West Virginia</td>\n","      <td>4431.08</td>\n","      <td>4596.70</td>\n","      <td>9027.79</td>\n","      <td>South</td>\n","      <td>0.010047</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>2023</td>\n","      <td>Delaware</td>\n","      <td>3071.72</td>\n","      <td>3836.00</td>\n","      <td>6907.71</td>\n","      <td>South</td>\n","      <td>0.007688</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>2023</td>\n","      <td>California</td>\n","      <td>138141.39</td>\n","      <td>199997.55</td>\n","      <td>338138.94</td>\n","      <td>West</td>\n","      <td>0.508619</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>2023</td>\n","      <td>Washington</td>\n","      <td>31543.72</td>\n","      <td>33281.63</td>\n","      <td>64825.34</td>\n","      <td>West</td>\n","      <td>0.097508</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>2023</td>\n","      <td>Arizona</td>\n","      <td>26179.59</td>\n","      <td>28669.25</td>\n","      <td>54848.84</td>\n","      <td>West</td>\n","      <td>0.082502</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>2023</td>\n","      <td>Colorado</td>\n","      <td>23711.01</td>\n","      <td>27277.17</td>\n","      <td>50988.18</td>\n","      <td>West</td>\n","      <td>0.076695</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>2023</td>\n","      <td>Nevada</td>\n","      <td>12464.68</td>\n","      <td>22063.55</td>\n","      <td>34528.22</td>\n","      <td>West</td>\n","      <td>0.051936</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>2023</td>\n","      <td>Oregon</td>\n","      <td>16895.09</td>\n","      <td>16584.71</td>\n","      <td>33479.80</td>\n","      <td>West</td>\n","      <td>0.050359</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>2023</td>\n","      <td>Utah</td>\n","      <td>13544.62</td>\n","      <td>12183.63</td>\n","      <td>25728.25</td>\n","      <td>West</td>\n","      <td>0.038700</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>2023</td>\n","      <td>Hawaii</td>\n","      <td>5506.97</td>\n","      <td>9584.62</td>\n","      <td>15091.59</td>\n","      <td>West</td>\n","      <td>0.022700</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>2023</td>\n","      <td>New Mexico</td>\n","      <td>6833.89</td>\n","      <td>7991.29</td>\n","      <td>14825.18</td>\n","      <td>West</td>\n","      <td>0.022300</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>2023</td>\n","      <td>Idaho</td>\n","      <td>7537.31</td>\n","      <td>6227.53</td>\n","      <td>13764.84</td>\n","      <td>West</td>\n","      <td>0.020705</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>2023</td>\n","      <td>Montana</td>\n","      <td>4162.43</td>\n","      <td>4110.38</td>\n","      <td>8272.81</td>\n","      <td>West</td>\n","      <td>0.012444</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>2023</td>\n","      <td>Alaska</td>\n","      <td>3047.56</td>\n","      <td>2816.45</td>\n","      <td>5864.01</td>\n","      <td>West</td>\n","      <td>0.008820</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>2023</td>\n","      <td>Wyoming</td>\n","      <td>2125.13</td>\n","      <td>2336.42</td>\n","      <td>4461.55</td>\n","      <td>West</td>\n","      <td>0.006711</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f0dea59-21b4-4ed8-be28-5d33f08ebd72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0f0dea59-21b4-4ed8-be28-5d33f08ebd72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0f0dea59-21b4-4ed8-be28-5d33f08ebd72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-21ec56dd-aa12-4bd6-9c34-65f8a00df833\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-21ec56dd-aa12-4bd6-9c34-65f8a00df833')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-21ec56dd-aa12-4bd6-9c34-65f8a00df833 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_f1cd5a84-4540-49d7-91d4-ceef00dea985\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('max_statesales')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f1cd5a84-4540-49d7-91d4-ceef00dea985 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('max_statesales');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"max_statesales","summary":"{\n  \"name\": \"max_statesales\",\n  \"rows\": 51,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2023,\n        \"max\": 2023,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Oregon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAH Sales (Nominal $M)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25004.795295083946,\n        \"min\": 2096.07,\n        \"max\": 138141.39,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          16895.09\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FAFH Sales (Nominal $M)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34393.19230973075,\n        \"min\": 2273.37,\n        \"max\": 199997.55,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          16584.71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Sales (Nominal $M)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59253.794342036206,\n        \"min\": 4369.43,\n        \"max\": 338138.94,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          33479.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Northeast\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Share_Total_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09418783107153929,\n        \"min\": 0.0067109389636299446,\n        \"max\": 0.508619154232616,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          0.05035938055486049\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":59}],"source":["query=\"\"\" SELECT *,\n","            \"Total Sales (Nominal $M)\"/sum(\"Total Sales (Nominal $M)\") OVER (PARTITION BY Region) AS Share_Total_Sales\n","            FROM q1_sales_table\n","            WHERE Year == 2023\n","            ORDER BY Region, \"Total Sales (Nominal $M)\" DESC;\n","\"\"\"\n","\n","max_statesales = pd.read_sql(query, conn)\n","max_statesales"]},{"cell_type":"markdown","metadata":{"id":"tU-CfRBCaCth"},"source":["### Chart 1: Fatty Acid Trends  \n","This chart shows trends in fatty acid intake over time. Saturated fat intake has remained relatively steady, while polyunsaturated fat has gradually increased (might reflect a shift towards healthier fat sources in the American diet). Monounsaturated fat intake peaked around 2006 and then slightly declined. Monounsaturated and saturated fat intake follow a similar trend likely because they frequently co-occur in the same foods, such as meat, dairy, and cooking oils. As a result, shifts in consumption of those foods tend to affect both fat types in parallel."]},{"cell_type":"code","source":["# Nutrients with meaningful values\n","fatty_acid_cols = [\n","    \"Total | Fatty acids, monounsaturated\",\n","    \"Total | Fatty acids, polyunsaturated\",\n","    \"Total | Saturated fatty acids\"\n","]\n","\n","\n","# Extract Year + selected nutrients\n","chart1 = nut_intake_wide_final[[\"Year\"] + fatty_acid_cols].copy()\n","\n","# Plot\n","plt.figure(figsize=(10, 6))\n","for nutrient in fatty_acid_cols:\n","    label = nutrient.replace(\"Total \", \"\").strip()\n","    plt.plot(chart1[\"Year\"], chart1[nutrient], marker='o', label=label)\n","\n","# Embellishments\n","plt.title(\"Fatty Acid Intake Over Time\", fontsize=14)\n","plt.xlabel(\"Year\", fontsize=12)\n","plt.ylabel(\"Total Intake (grams or equivalent units)\", fontsize=12)\n","plt.legend(title=\"Fatty Acid Type\")\n","plt.grid(True)\n","plt.tight_layout()\n","\n","# Save to file\n","plt.savefig(\"fatty_acids.png\", dpi=300)\n","\n","# Show on screen\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"4fAqhAFxe-SQ","executionInfo":{"status":"ok","timestamp":1748319586173,"user_tz":300,"elapsed":572,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"db659f99-adf3-4f63-c9da-25d6a54c68f3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"0u5UVgh8hjm5"},"source":["### Chart 2: FAH vs FAFH by Region  \n","\n","This chart shows the share of food at home and food away from home sales by region. From this we can see that in most regions, people are spending around the same amount of money on food at home and eating out. We can also see that most of the food expenditure occurs in the South region of the United States."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"sgRJ8TaRhjm_","executionInfo":{"status":"ok","timestamp":1748319586558,"user_tz":300,"elapsed":386,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"9618cfea-9abb-4279-9bd9-e22930ec4a63"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["region_sales = sales_table.groupby('Region')[[\n","    'FAH sales million nominal U.S. dollars with taxes and tips',\n","    'FAFH sales million nominal U.S. dollars with taxes and tips'\n","]].sum().reset_index()\n","\n","region_sales.columns =['Region', 'FAH Sales (Nominal $M)', 'FAFH Sales (Nominal $M)']\n","\n","region_sales['Total Sales (Nominal $M)'] = (\n","    region_sales['FAH Sales (Nominal $M)'] + region_sales['FAFH Sales (Nominal $M)']\n",")\n","\n","region_melted = pd.melt(region_sales, id_vars='Region', var_name='Type', value_name='Sales ($M)')\n","\n","plt.figure(figsize=(8, 6))\n","sns.barplot(data=region_melted, x='Region', y='Sales ($M)', hue='Type')\n","plt.title('FAH vs FAFH Sales by Region')\n","plt.tight_layout()\n","\n","# Save to file\n","plt.savefig(\"region_sales.png\", dpi=300)\n","\n","# Show chart\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"nNizeg4qKJ0r"},"source":["### Chart 3: Sodium by Source  \n","\n","This chart compares sodium intake over time from food-at-home (FAH) and four food-away-from-home (FAFH) categories: fast food, restaurants, schools, and others. FAH consistently contributes the highest overall sodium intake, likely due to the volume and frequency of home-prepared food. However, when viewed collectively, FAFH categories—particularly fast food and restaurant meals—make up a substantial share of sodium intake.\n","\n"]},{"cell_type":"code","source":["query = \"\"\"\n","SELECT\n","    Year,\n","    \"Food Away From Home | Sodium\" AS FAFH_Sodium,\n","    \"Food at Home | Sodium\" AS FAH_Sodium,\n","    \"Total | Sodium\" AS Total_Sodium\n","FROM nut_intake_wide_final\n","ORDER BY Year;\n","\"\"\"\n","\n","sodium_data = pd.read_sql(query, conn)\n","\n","# Melt to long format for plotting\n","sodium_long = sodium_data.melt(id_vars='Year', var_name='Source', value_name='Sodium Intake')\n","\n","# Clean up labels for legend\n","sodium_long['Source'] = sodium_long['Source'].replace({\n","    'FAFH_Sodium': 'Food Away From Home',\n","    'FAH_Sodium': 'Food at Home',\n","    'Total_Sodium': 'Total'\n","})\n","\n","# Plot\n","plt.figure(figsize=(12, 6))\n","sns.lineplot(data=sodium_long, x='Year', y='Sodium Intake', hue='Source', marker='o')\n","plt.title(\"Sodium Intake by Source Over Time\", fontsize=14)\n","plt.xlabel(\"Year\", fontsize=12)\n","plt.ylabel(\"Sodium Intake (mg)\", fontsize=12)\n","plt.grid(True)\n","plt.tight_layout()\n","plt.savefig(\"chart3_sodium_by_source.png\", dpi=300)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"_mqmOcLan0Tr","executionInfo":{"status":"ok","timestamp":1748319587116,"user_tz":300,"elapsed":557,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"6c736960-65b7-487c-8748-1d40d57434f6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"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o0aNEvbu3Vu4kyIiokpHIggFWC2SiIiIiIrNb7/9hr59++Kjjz7C7NmzS7s7RERERKWCoRQRERGRBQmCgJdffhmnTp3CzZs3Ua1atdLuEhEREVGp4JpSRERERBZw/vx5bN26FUeOHMGxY8cwZswYBlJERERUqTGUIiIiIrKAv/76Cx9++CEcHR0xePBgfPXVV6XdJSIiIqJSxel7RERERERERERkcdLS7gAREREREREREVU+DKWIiIiIiIiIiMjiuKaUGXQ6HR48eAAHBwdIJJLS7g4RERERERERUbERBAHJycmoUqUKpNKSG8/EUMoMDx484N1yiIiIiIiIiKhCu3v3Lnx8fEqsPkMpMzg4OAAQPxyVSlXKvaGSolarsWvXLoSGhkIul5d2d4iokHgNE5VfvH6Jyjdew0Tll/76DQoKgp+fnyH/KCkMpcygn7KnUqkYSlVgarUatra2UKlU/MeUqBziNUxUfvH6JSrfeA0TlV/661cfRpX0kkVc6JyIiIiIiIiIiCyOoRQREREREREREVkcQykiIiIiIiIiIrI4hlJERERERERERGRxDKWIiIiIiIiIiMjiGEoREREREREREZHFMZQiIiIiIiIiIiKLYyhFREREREREREQWx1CKiIiIiIiIiIgsjqEUERERERERERFZHEMpIiIiIiIiIiKyOIZSRERERERERERkcQyliIiIiIiIiIjI4hhKERERERERERGRxTGUIiIiIiIiIiIii2MoRUREREREREREFlemQqklS5agUaNGUKlUUKlUCAoKwvbt2w3Pt2/fHhKJxGgbO3asUY07d+6ge/fusLW1hYeHB6ZOnQqNRmPUJioqCs2aNYNSqUTt2rURERFhidMjIiIiIqrU0tXpUGvVeJr+FGqtGunq9HJVn4iIipestDuQnY+PD7744gv4+/tDEASsXr0avXr1wunTp9GgQQMAwOjRozF79mzDa2xtbQ3fa7VadO/eHV5eXjhy5AgePnyIIUOGQC6X4/PPPwcA3Lp1C927d8fYsWOxZs0a7N27F6NGjYK3tzfCwsIse8JERERERJVEpjYTKy+sROSVSCRlJUGlUGFgvYEY2WgklFbKMl+fiIiKX5kKpXr27Gn0+LPPPsOSJUtw7NgxQyhla2sLLy8vk6/ftWsXLl26hD179sDT0xNNmjTBp59+iunTp2PWrFlQ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MLLRSADiGlLFfXe8kq5PRERERERERBUDQ6lKSGmlxPCGwzG60Wgkq5PhIHeARqcptsCopOsTERERERERUfnHUKqSspHbAABcrFwAoNin1JV0fSIiIiIiIiIq36Sl3QEiIiIiIiIiIqp8GEoREREREREREZHFMZQiIiIiIiIiIiKLYyhFREREREREREQWx1CKiIiIiIiIiIgsjqEUERERERERERFZHEMpIiIiIiIiIiKyOIZSRERERERERERkcQyliIiIiIiIiIjI4hhKERERERERERGRxTGUIiIiIiIiIiIii2MoRUREREREREREFsdQioiIiIiIiIiILI6hFBERERERERERWRxDKSIiIiIiIiIisjiGUkREREREREREZHEMpYiIiIiIiIiIyOIYShERERERERERkcUxlCIiIiIiIiIiIotjKEVERERERERERBZXpkKpJUuWoFGjRlCpVFCpVAgKCsL27dsNz2dkZGD8+PFwdXWFvb09wsPDERsba1Tjzp076N69O2xtbeHh4YGpU6dCo9EYtYmKikKzZs2gVCpRu3ZtREREWOL0iIiIiIiIiIjomTIVSvn4+OCLL77AX3/9hVOnTqFjx47o1asXLl68CACYPHky/vjjD/z666+Ijo7GgwcP0KdPH8PrtVotunfvjqysLBw5cgSrV69GREQEPv74Y0ObW7duoXv37ujQoQPOnDmDSZMmYdSoUdi5c6fFz5eIiIiIiIiIqLKSlXYHsuvZs6fR488++wxLlizBsWPH4OPjgxUrViAyMhIdO3YEAKxatQr169fHsWPH0Lp1a+zatQuXLl3Cnj174OnpiSZNmuDTTz/F9OnTMWvWLCgUCixduhR+fn6YP38+AKB+/fo4dOgQvv76a4SFhVn8nImIiIiIiIiIKqMyFUplp9Vq8euvvyI1NRVBQUH466+/oFar0alTJ0ObevXqoXr16jh69Chat26No0ePIjAwEJ6enoY2YWFhGDduHC5evIimTZvi6NGjRjX0bSZNmpRrXzIzM5GZmWl4nJSUBABQq9VQq9XFdMZU1ug/W37GROUTr2Gi8ovXL1H5xmuYqPyy9PVb5kKp8+fPIygoCBkZGbC3t8fvv/+OgIAAnDlzBgqFAk5OTkbtPT09ERMTAwCIiYkxCqT0z+ufy6tNUlIS0tPTYWNjk6NPc+bMwSeffJJj/65du2Bra2v2uVL5sHv37tLuAhEVAa9hovKL1y9R+cZrmKj82r9/v0WOU+ZCqbp16+LMmTNITEzEb7/9hqFDhyI6OrpU+/TBBx9gypQphsdJSUmoVq0aQkNDoVKpSrFnVJLUajV2796Nzp07Qy6Xl3Z3iKiQeA0TlV+8fonKN17DROWX/vrt0KGDRY5X5kIphUKB2rVrAwCaN2+OkydPYtGiRejXrx+ysrKQkJBgNFoqNjYWXl5eAAAvLy+cOHHCqJ7+7nzZ27x4x77Y2FioVCqTo6QAQKlUQqlU5tgvl8v5S7YS4OdMVL7xGiYqv3j9EpVvvIaJyi9LXbtl6u57puh0OmRmZqJ58+aQy+XYu3ev4bmrV6/izp07CAoKAgAEBQXh/PnziIuLM7TZvXs3VCoVAgICDG2y19C30dcgIiIiIiIiIqKSV6ZGSn3wwQfo2rUrqlevjuTkZERGRiIqKgo7d+6Eo6MjRo4ciSlTpsDFxQUqlQoTJkxAUFAQWrduDQAIDQ1FQEAABg8ejHnz5iEmJgYzZszA+PHjDSOdxo4di8WLF2PatGkYMWIE9u3bh/Xr1+PPP/8szVMnIiIiIiIiIqpUylQoFRcXhyFDhuDhw4dwdHREo0aNsHPnTnTu3BkA8PXXX0MqlSI8PByZmZkICwvD999/b3i9lZUVtm7dinHjxiEoKAh2dnYYOnQoZs+ebWjj5+eHP//8E5MnT8aiRYvg4+OD5cuXIywszOLnS0RERERERERUWZWpUGrFihV5Pm9tbY3vvvsO3333Xa5tfH19sW3btjzrtG/fHqdPnzarj0REREREREREVHRlfk0pIiIiIiIiIiKqeBhKERERERERERGRxTGUIiIiIiIiIiIii2MoRUREREREREREFsdQioiIiIiIiIiILI6hFBERERERERERWRxDKSIiIiIiIiIisjiGUkREREREREREZHEMpYiIiIiIiIiIyOIYShERERERERERkcUxlCIiIiIiIiIiIotjKEVERERERERERBbHUIqIiIiIiIiIiCyOoRQREREREREREVkcQykiIiIiIiIiIrI4hlJERERERERERGRxDKWIiIiIiIiIiMjiGEoREREREREREZHFMZQiIiIiIiIiIiKLYyhFREREREREREQWx1CKiIiIiIiIiIgsjqEUERERERERERFZHEMpIiIiIiIiIiKyOIZSRERERERERERkcQyliIiIiIiIiIjI4hhKERERERERERGRxTGUIiIiIiIiIiIii2MoRUREREREREREFsdQioiIiIiIiIiILI6hFBERERERERERWRxDKSIiIiIiIiIisjiGUkREREREREREZHEMpYiIiIiIiIiIyOIYShERERERERERkcUxlCIiIiIiIiIiIotjKFVZZaUB2iwg9ZH4NSutfNUnIiIiIiIionJNVtodoFKgyQAOLwSOLwMyEgBrJ6DVGKDtFEBmXfbrExEREREREVG5x1CqsslKEwOj6LnP92UkPH8cPAlQ2Jbd+kRERERERERUITCUqmysZOIIJlOOLxNDo5XdxCCpsKydgEG/5V2/7RTg3l+AvTtg7wXIFIU/DhERERERERGVewylKpuMxNwDp4wEIO0RkBEPxF0qfG2PAHENqbzqp8QCW955Xt/OHXDwBlRVsn31AhyqACpvcZ+NMyCRFL4/RERERERERFRmMZSqbKwdxRFNpoIjaydx9FK3rwCduvC1pXIxUMqrvp07YKUQN/1C6KmPgJhzudeV2Yh1DcGVd7bQ6tlXjroiIiIiIiIiKlcYSlU2Wo246Hj2NZ/0Wo0BdFqgRrD59bPS8q4vABgTDQgCkPYUSH4AJD008fUhkPQASH8KaNKB+FvilhdbN9OBFUddEREREREREZU5DKUqG4WtuK4TUDJ3xytofYkEsHMVN6/A3OupM4CUGNOBVfav2iwg7bG4xZzPvZ7M+oVpgi9OHXwWXnHUFREREREREVGJYihVGcmsxQXNQ94DMpIAaxWgVRc9kCqJ+nJrwLmGuOUm11FX+gDr2b60J4Amo8CjrmQO3miVLoV02x7A0ef5qCv9VEKOuiIiIiIiIiIyG0OpykphK361cxO/WhXzyKCSrp9dQUddaTKNQyqTo65iAG0mkPYYkrTH8AKA02dN15NZ51yUnaOuiIiIiIiIiAqEoRRVHjJlIUZdPYQm/i7OH9mFRjXcYJUam8uoq9vilhdbt2wLtJsIrjjqioiIiIiIiCohhlJE2WUbdSW41sWdf7LQMKQbrORy43a5jbp6cd+zUVdIewzE5rfWlalRVy/skylL9vyJiIiIiIiILIShFJE5CjrqKj0+56Lshq/mjLpyzXu6IEddERERERERUTnBUIqopEgkgK2LuHk1zL2dJlNcyyqv4Mow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Ue/eveVyuZSTkyOv19veQwMAAAAAAO2sRaHULbfcotdff1233XabbDZbuMfU6UTbo7Xuh+ua3N5hdcjtdNcbTLmdbqVGp+pvl/ytydduDbfbrYyMDK1atUpjxowJHl+1apW+/e1vS1KwhtTJNcRWrVqlF154QZdccokkad++fTp8+HCrxgMAAAAAADqHFoVSZ5xxhv75z39q6NChmjp1qrKysuoNpyZPntzqAXYGFoulWY/QVfgqNGXAFP1h8x/qnJsyYIr8AX+rHslrrvvvv1+zZ89W3759ddZZZ2nevHnauHGjXn31VUlSamqqoqOj9cEHHygzM1NRUVFKSEjQaaedpr/+9a8655xz5PF4dP/99ys6unUhGQAAAAAA6BxaFEr94Ac/CH5833331duG3fdaLtoRrWmDp0mSXv3y1Xbffe/HP/6xiouLde+996qgoEBnnHGG3nnnHZ122mmSJLvdrueff16PP/64HnnkEY0ePVrLly/XK6+8ounTp2vo0KHKysrSL37xiwb/vgAAAAAAgK7FYhiG0dxPWrFiRZPanfi4V2fi8XiUkJCg4uJiud3ukHOVlZXavXu3srOzFRUV1arrVPgqZLfaVeIrUbwjXv6AX9EOVhqZJRAIyOPxyO12y2pt2m6HaL1wziF0bT6fT4sWLdIll1wih8PR3sMB0AzMXyCyMYeByFU7f0eNGqXk5OR6c49watFKqc4aNnU0tQFUki1JkuSw8Q0dAAAAAAB0Diz/AAAAAAAAgOlatFLqggsuOGUbi8WiJUuWtKR7AAAAAAAAdHItCqUCgYAsFkvIserqan399dfat2+f+vXrp549e4ZlgAAAAAAAAOh8WhRKLV++vMFz7777rqZPn67nnnuupWMCAAAAAABAJxf2mlLf+c539KMf/Uh33313uLuOKC3Y1BCAmDsAAAAA0FW0SaHzvn37av369W3RdYdXu+VpeXl5O48EiExer1eSZLPZ2nkkAAAAAIC21KLH9xrj9/v11ltvKTk5OdxdRwSbzabExEQVFBRIkmJiYurU30JkCAQC8nq9qqyslNXKRpVmCAQCOnTokGJiYmS3h/3bEwAAAACgA2nRu76bbrqp3uNFRUVau3at8vLyunRNqfT0dEkKBlOITIZhqKKiQtHR0QSLJrJarerVqxd/5gAAAADQybUolFq6dGmdN4wWi0XdunXTqFGjdPPNN2vChAlhGWAkslgs6tGjh1JTU+Xz+dp7OGghn8+nlStX6vzzzw8+lom253Q6WZkGAAAAAF1Ai0KpPXv2hHkYnZPNZqMuTgSz2Wzy+/2KiooilAIAAAAAIMw61HKElStX6rLLLlNGRoYsFosWLlwYcv6GG26QxWIJ+XXxxReHtCksLNSUKVPkdruVmJioadOmqbS0NKTN5s2bNXr0aEVFRSkrK0vPPvtsW98aAAAAAAAATtCklVIrV66UJJ1//vkhr0+ltn1TlZWVaciQIbrppps0efLkettcfPHFmjdvXvC1y+UKOT9lyhQdPHhQubm58vl8uvHGGzV9+nS99tprkiSPx6MJEyZo/PjxevHFF7VlyxbddNNNSkxM1PTp05s1XgAAAAAAALRMk0KpsWPHymKxqKKiQk6nM/i6IYZhyGKxqLq6ulmDmTRpkiZNmtRoG5fLFSwkfrIvvvhCH3zwgdavX69zzjlHkvS73/1Ol1xyiX79618rIyNDr776qrxer/70pz/J6XRq4MCB2rhxo5577jlCKQAAAAAAAJM0KZRatmyZpJoCxCe+bg/Lly9XamqqunXrpgsuuEBPPvmkunfvLklas2aNEhMTg4GUJI0fP15Wq1Xr1q3TlVdeqTVr1uj8888P3oskTZw4Uc8884yOHj2qbt261blmVVWVqqqqgq89Ho+kmkLYFDLvvGq/tnyNgcjEHAYiF/MXiGzMYSBymT1/mxRKjRkzptHXZrn44os1efJkZWdna+fOnXrwwQc1adIkrVmzRjabTXl5eUpNTQ35HLvdrqSkJOXl5UmS8vLylJ2dHdImLS0teK6+UOrpp5/WY489Vuf44sWLFRMTE67bQweVm5vb3kMA0ArMYSByMX+ByMYcBiKXWYuRWrT7Xnu55pprgh8PGjRIgwcPVt++fbV8+XJdeOGFbXbdWbNmaebMmcHXHo9HWVlZmjBhgtxud5tdF+3L5/MpNzdXF110EbvvARGIOQxELuYvENmYw0Dkqp2/48aNM+V6TQqlbrrppmZ3bLFY9MorrzT785qjT58+Sk5O1ldffaULL7xQ6enpKigoCGnj9/tVWFgYrEOVnp6u/Pz8kDa1rxuqVeVyueoUVJckh8PBN9kugK8zENmYw0DkYv4CkY05DEQus+Zuk0KppUuX1ilsXl5erkOHDklS8JG3o0ePSpJSUlIUGxsbznHWa//+/Tpy5Ih69OghScrJyVFRUZE2bNigYcOGBcceCAQ0fPjwYJuf//zn8vl8wT/k3Nxc9e/fv95H9wAAAAAAABB+1qY02rNnj3bv3h389d5778nhcOjBBx9UQUGBjhw5oiNHjqigoECzZs2S0+nUe++91+zBlJaWauPGjdq4caMkaffu3dq4caP27t2r0tJS3X///Vq7dq327NmjJUuW6PLLL1e/fv00ceJESdLpp5+uiy++WLfccos++eQTrVq1SnfeeaeuueYaZWRkSJJ++MMfyul0atq0adq2bZvefPNNzZkzJ+TxPAAAAAAAALStFtWUuuuuuzRp0iQ9+eSTIceTk5P11FNPqaCgQHfddZc++uijZvX76aefhjy3WBsUTZ06VX/4wx+0efNm/fnPf1ZRUZEyMjI0YcIEPfHEEyGP1r366qu68847deGFF8pqteqqq67S888/HzyfkJCgxYsXa8aMGRo2bJiSk5P1yCOPaPr06S35owAAAAAAAEALtCiUWrt2rb73ve81eP7ss8/W66+/3ux+x44dK8MwGjz/4YcfnrKPpKQkvfbaa422GTx4sD7++ONmjw8AAAAAAADh0aTH906WlJSk999/v8HzixYtUmJiYkvHBAAAAAAAgE6uRaHUrbfeqnfffVeXX365PvroI+3Zs0d79uxRbm6uvvvd7+r999/XbbfdFu6xAgAAAAAAoJNo0eN7Dz30kKqqqvSrX/1K7777bmiHdrt+9rOf6aGHHgrLAAEAAAAAAND5tCiUkqQnnnhCP/nJT5Sbm6u9e/dKknr37q3x48crOTk5bAMEAAAAAABA59PiUEqq2W3v2muvDddYAAAAAAAA0EW0KpRasWKF3nvvPX399deSalZKXXrppRozZkxYBgcAAAAAAIDOqUWhlNfr1bXXXquFCxfKMIzgTntFRUX6zW9+oyuvvFKvv/66HA5HOMcKAAAAAACATqJFu+899thjevvtt3Xvvffq4MGDKiwsVGFhofLy8nTffffpH//4hx5//PFwjxUAAAAAAACdRItCqddee01Tp07Vs88+q7S0tODx1NRUPfPMM7r++uv117/+NWyDBAAAAAAAQOfSolDq4MGDGj58eIPnhw8frry8vBYPCgAAAAAAAJ1bi0KpzMxMLV++vMHzK1asUGZmZkvHBAAAAAAAgE6uRaHU1KlT9dZbb+m2227T9u3bVV1drUAgoO3bt+v222/XggULdMMNN4R5qAAAAAAAAOgsWrT73oMPPqidO3fq5Zdf1h//+EdZrTXZViAQkGEYmjp1qh588MGwDhQAAAAAAACdR4tCKZvNpvnz52vmzJlatGiRvv76a0lS7969dckll2jw4MFhHSQAAAAAAAA6lxaFUrUGDx5MAAUAAAAAAIBma1UoVevLL7/UggULdPDgQQ0YMEA33HCD3G53OLoGAAAAAABAJ9TkUOr3v/+9nn/+ea1evVrJycnB4//617/0/e9/X16vN3js+eef19q1a0PaAQAAAAAAALWavPveO++8o759+4YETX6/XzfffLNsNpvmzZunLVu26Je//KW+/vprPfXUU20yYAAAAAAAAES+JodSn3/+uUaMGBFybNmyZTp06JDuueceTZ06VQMHDtRPf/pTXX311Vq0aFHYBwsAAAAAAIDOocmh1JEjR5SVlRVybMmSJbJYLLryyitDjp933nnau3dveEYIAAAAAACATqfJoVRaWpry8vJCjn388ceKiYnRkCFDQo47nU45nc7wjBAAAAAAAACdTpNDqXPOOUd//vOfVVJSIknatm2bPvnkE02cOFF2e2i99C+//FKZmZnhHSkAAAAAAAA6jSbvvjd79myde+65Ou200zRw4EBt2LBBFotFs2bNqtP27bff1gUXXBDWgQIAAAAAAKDzaPJKqUGDBmnp0qUaNmyYDhw4oBEjRmjRokUaNmxYSLvly5crJiZG3//+98M+WAAAAAAAAHQOTV4pJUkjR47Ue++912ibsWPHasuWLa0aFAAAAAAAADq3Jq+UAgAAAAAAAMKFUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAA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\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"Q9_XCtPTXWzO"},"source":["### Chart 4: Normalized FAFH Nutrients  \n","This heatmap shows the normalized intake levels of key nutrients consumed from Food Away From Home (FAFH) sources, such as restaurants and fast food, between 1977 and 2018. Each nutrient is scaled individually to show relative changes over time (from 0% to 100% of its peak value), allowing for clear comparison of trend patterns regardless of absolute quantity.\n","\n","Notable patterns include:\n","- A sharp rise in nearly all nutrients during the 1990s and early 2000s.\n","- A plateau or modest decline in nutrients like sodium and saturated fat post-2010, suggesting possible impacts from public health awareness and reformulation efforts.\n","- Persistently low relative growth in fiber intake, indicating a nutritional gap that remains unaddressed.\n","\n","This normalized view helps highlight **temporal trends** in nutrient density without being skewed by the absolute values of inherently high-quantity nutrients like calories or sodium."]},{"cell_type":"code","source":["query = \"\"\"\n","WITH long_format AS (\n","    SELECT Year, 'Calcium' AS Nutrient, \"Food Away From Home | Calcium\" AS Value FROM nut_intake_wide_final\n","    UNION ALL SELECT Year, 'Fiber, dietary', \"Food Away From Home | Fiber, dietary\" FROM nut_intake_wide_final\n","    UNION ALL SELECT Year, 'Iron', \"Food Away From Home | Iron\" FROM nut_intake_wide_final\n","    UNION ALL SELECT Year, 'Protein', \"Food Away From Home | Protein\" FROM nut_intake_wide_final\n","    UNION ALL SELECT Year, 'Energy', \"Food Away From Home | Energy\" FROM nut_intake_wide_final\n","    UNION ALL SELECT Year, 'Saturated fatty acids', \"Food Away From Home | Saturated fatty acids\" FROM nut_intake_wide_final\n","    UNION ALL SELECT Year, 'Sodium', \"Food Away From Home | Sodium\" FROM nut_intake_wide_final\n","),\n","min_max AS (\n","    SELECT Nutrient,\n","           MIN(Value) AS Min_Val,\n","           MAX(Value) AS Max_Val\n","    FROM long_format\n","    GROUP BY Nutrient\n",")\n","SELECT\n","    l.Year,\n","    l.Nutrient,\n","    ROUND((l.Value - m.Min_Val) * 1.0 / (m.Max_Val - m.Min_Val), 4) AS Normalized_Value\n","FROM long_format l\n","JOIN min_max m ON l.Nutrient = m.Nutrient\n","WHERE l.Value IS NOT NULL\n","ORDER BY l.Nutrient, l.Year;\n","\"\"\"\n","\n","chart4_sql_result = pd.read_sql(query, conn)\n","\n","# Pivot for heatmap\n","heatmap_data = chart4_sql_result.pivot(index='Nutrient', columns='Year', values='Normalized_Value')\n","\n","# Ensure numeric dtype\n","heatmap_data = heatmap_data.apply(pd.to_numeric, errors='coerce')\n","\n","# Plot heatmap\n","plt.figure(figsize=(14, 6))\n","sns.heatmap(heatmap_data, cmap='YlGnBu', linewidths=0.5, linecolor='gray')\n","plt.title('Normalized Trends in Food Away From Home Nutrients', fontsize=14)\n","plt.xlabel('Year')\n","plt.ylabel('Nutrient')\n","plt.tight_layout()\n","plt.savefig(\"chart4_fafh_heatmap.png\", dpi=300)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"fobO2bvVpIkz","executionInfo":{"status":"ok","timestamp":1748319587815,"user_tz":300,"elapsed":701,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"ac0bdec2-820a-4158-9ab5-0f0ecd6e93ee"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"Ilidd_rGXcP2"},"source":["### Chart 5: Per Capita Sales Boxplot\n","\n","This boxplot displays the distribution of **nominal per capita food sales** (including taxes and tips) across U.S. states between 1997 and 2023. Each box shows the interquartile range (IQR), median, and outliers for total annual food sales per resident.\n","\n","Key observations:\n","- **States like Nevada, D.C., and Hawaii consistently spend more on food per capita**, likely due to tourism, higher cost of living, and urban density.\n","- **Lower-spending states**, including West Virginia and Mississippi, may reflect regional income differences or more reliance on food prepared at home.\n","- **Wide ranges in states like California and Florida** suggest shifting economic conditions, population diversity, or seasonal dynamics.\n","\n","This visualization helps identify regional disparities in food spending, offering insights into economic behavior and potential areas for targeted nutrition or policy interventions."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KwaOzR0FXYYf","executionInfo":{"status":"ok","timestamp":1748319587821,"user_tz":300,"elapsed":5,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"eced6dad-0b35-400d-af86-f87fc26cef22"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     State  Year  PerCapitaSales\n","0  Alabama  1997         2142.20\n","1  Alabama  1998         2276.54\n","2  Alabama  1999         2404.99\n","3  Alabama  2000         2493.97\n","4  Alabama  2001         2573.36"],"text/html":["\n","  <div id=\"df-a7b709ce-fade-4dbe-94a8-b02db926bed8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>State</th>\n","      <th>Year</th>\n","      <th>PerCapitaSales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alabama</td>\n","      <td>1997</td>\n","      <td>2142.20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Alabama</td>\n","      <td>1998</td>\n","      <td>2276.54</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Alabama</td>\n","      <td>1999</td>\n","      <td>2404.99</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Alabama</td>\n","      <td>2000</td>\n","      <td>2493.97</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Alabama</td>\n","      <td>2001</td>\n","      <td>2573.36</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7b709ce-fade-4dbe-94a8-b02db926bed8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7b709ce-fade-4dbe-94a8-b02db926bed8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7b709ce-fade-4dbe-94a8-b02db926bed8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f3916a4f-07a6-4fa2-9ffb-283e2f23e84c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3916a4f-07a6-4fa2-9ffb-283e2f23e84c')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f3916a4f-07a6-4fa2-9ffb-283e2f23e84c button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"chart5_sql_result","summary":"{\n  \"name\": \"chart5_sql_result\",\n  \"rows\": 1377,\n  \"fields\": [\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Texas\",\n          \"South Carolina\",\n          \"Virginia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 1997,\n        \"max\": 2023,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          2005,\n          2010,\n          2006\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PerCapitaSales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1412.6396937710078,\n        \"min\": 1843.02,\n        \"max\": 13961.68,\n        \"num_unique_values\": 1372,\n        \"samples\": [\n          5934.27,\n          6062.3,\n          6776.26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":64}],"source":["query = \"\"\"\n","-- Query: Distribution of Per Capita Food Sales by State (Chart 5)\n","-- What: This query retrieves total per capita food sales (including taxes and tips) across all U.S. states from 1997 to 2023.\n","-- Why: To analyze how food spending per person varies by state and identify spending patterns or disparities.\n","-- How: This is a simple select query that pulls the relevant per capita column from the cleaned sales dataset.\n","\n","SELECT\n","    State,\n","    Year,\n","    \"Total sales per capita nominal U.S. dollars with taxes and tips\" AS PerCapitaSales\n","FROM sales_percapita_final\n","WHERE \"Total sales per capita nominal U.S. dollars with taxes and tips\" IS NOT NULL\n","ORDER BY State, Year;\n","\"\"\"\n","\n","chart5_sql_result = pd.read_sql(query, conn)\n","chart5_sql_result.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OVjx5YPpiFo8","executionInfo":{"status":"ok","timestamp":1748319588653,"user_tz":300,"elapsed":833,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"9e084673-755c-4cc0-c797-727b48884d43"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Sort states by median for clarity\n","sorted_states = chart5_sql_result.groupby('State')['PerCapitaSales'].median().sort_values(ascending=False).index\n","chart5_sql_result['State'] = pd.Categorical(chart5_sql_result['State'], categories=sorted_states, ordered=True)\n","\n","# Plot boxplot\n","plt.figure(figsize=(10, 14))\n","sns.boxplot(data=chart5_sql_result, y='State', x='PerCapitaSales', orient='h')\n","plt.title('Distribution of Per Capita Food Sales by State (Sorted by Median Spending)')\n","plt.xlabel('Total Sales per Capita (Nominal USD)')\n","plt.ylabel('State')\n","plt.tight_layout()\n","plt.savefig(\"per capita food sales.png\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"liFkD93kcGkE"},"source":["### Chart 6: Nutrient Deviation from Recommendations  \n","\n","These two charts compare the average U.S. nutrient intake per 1000 kcal to USDA recommendations. While the left chart displays all nutrients together, the right chart removes **Calcium** and **Sodium**, which naturally occur in higher quantities and can skew visual comparisons due to their large scale.\n","\n","By splitting the charts and allowing each to use its own y-axis:\n","- The left chart gives a complete view, emphasizing how dramatically **sodium** exceeds recommendations.\n","- The right chart zooms in on **moderate-range nutrients** (e.g., **fiber**, **saturated fat**, and **iron**) to reveal more subtle but important disparities.\n","\n","This split-view approach preserves clarity without compromising completeness, and helps highlight where **nutrient gaps or excesses** may warrant public health attention."]},{"cell_type":"code","source":["query = \"\"\"\n","WITH nutrient_map AS (\n","    SELECT 'Fiber (g)' AS RecLabel, 'Total | Fiber, dietary' AS ActualColumn\n","    UNION ALL SELECT 'Saturated fats (percent of calories)**', 'Total | Saturated fatty acids'\n","    UNION ALL SELECT 'Calcium (mg)', 'Total | Calcium'\n","    UNION ALL SELECT 'Iron (mg)', 'Total | Iron'\n","    UNION ALL SELECT 'Sodium (mg)', 'Total | Sodium'\n","),\n","base AS (\n","    SELECT\n","        r.\"Nutrient or Food group\" AS Nutrient,\n","        r.RecDensity_per1000cal AS Recommended,\n","        n.Year,\n","        CASE\n","            WHEN r.\"Nutrient or Food group\" = 'Fiber (g)' THEN n.\"Total | Fiber, dietary\"\n","            WHEN r.\"Nutrient or Food group\" = 'Saturated fats (percent of calories)**' THEN n.\"Total | Saturated fatty acids\"\n","            WHEN r.\"Nutrient or Food group\" = 'Calcium (mg)' THEN n.\"Total | Calcium\"\n","            WHEN r.\"Nutrient or Food group\" = 'Iron (mg)' THEN n.\"Total | Iron\"\n","            WHEN r.\"Nutrient or Food group\" = 'Sodium (mg)' THEN n.\"Total | Sodium\"\n","        END AS Actual\n","    FROM rec_density_final r\n","    JOIN nutrient_map m ON r.\"Nutrient or Food group\" = m.RecLabel\n","    JOIN nut_intake_wide_final n\n","),\n","final AS (\n","    SELECT\n","        Nutrient,\n","        Year,\n","        ROUND(Recommended, 2) AS Recommended,\n","        ROUND(Actual, 2) AS Actual,\n","        ROUND(Actual - Recommended, 2) AS Delta,\n","        ROUND((Actual - Recommended) * 100.0 / Recommended, 2) AS Percent_Deviation\n","    FROM base\n","    WHERE Actual IS NOT NULL\n",")\n","SELECT * FROM final\n","ORDER BY Nutrient, Year;\n","\"\"\"\n","\n","chart6_sql_untidy = pd.read_sql(query, conn)\n","\n","# Filter to most recent year\n","chart_latest = chart6_sql_untidy[chart6_sql_untidy['Year'] == chart6_sql_untidy['Year'].max()]\n","\n","# Prepare full and zoomed views\n","chart_full = chart_latest.sort_values(by='Actual', ascending=False).copy()\n","chart_zoomed = chart_latest[~chart_latest['Nutrient'].isin(['Calcium (mg)', 'Sodium (mg)'])].copy()\n","chart_zoomed = chart_zoomed.sort_values(by='Actual', ascending=False)\n","\n","# Plot split-view bar charts\n","fig, axes = plt.subplots(1, 2, figsize=(14, 6), sharey=False)\n","\n","# Left: All nutrients\n","sns.barplot(data=chart_full, x='Actual', y='Nutrient', ax=axes[0], color='skyblue', label='Actual')\n","sns.scatterplot(data=chart_full, x='Recommended', y='Nutrient', ax=axes[0], color='red', label='Recommended', zorder=10)\n","axes[0].set_title(\"Nutrient Intake vs. USDA Recommendations\\n(All Nutrients)\")\n","axes[0].legend()\n","\n","# Right: Without Calcium & Sodium\n","sns.barplot(data=chart_zoomed, x='Actual', y='Nutrient', ax=axes[1], color='skyblue', label='Actual')\n","sns.scatterplot(data=chart_zoomed, x='Recommended', y='Nutrient', ax=axes[1], color='red', label='Recommended', zorder=10)\n","axes[1].set_title(\"Nutrient Intake vs. USDA Recommendations\\n(Mid-Range Only)\")\n","axes[1].legend()\n","\n","plt.tight_layout()\n","plt.savefig(\"chart6_nutrient_deviation_splitview.png\", dpi=300)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"-1sLRd2Vpv79","executionInfo":{"status":"ok","timestamp":1748319589386,"user_tz":300,"elapsed":732,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"outputId":"c37e4704-bc9b-41d3-ea51-9ab417d94514"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"ZWhdwFjZaCth"},"source":["## 4. Modeling: Spending vs Nutrient Intake"]},{"cell_type":"markdown","metadata":{"id":"wms_sF8PaCth"},"source":["### Step 1: Join SQL Data  \n","We start by joining national-level nutrient intake data with average per capita food spending data across all U.S. states from 1997 to 2023. This SQL query uses a JOIN and filters for completeness:"]},{"cell_type":"code","source":["query = \"\"\"\n","-- SQL Query: Join Spending and Nutrient Intake Data\n","-- Why: To evaluate if higher spending is associated with healthier nutrient consumption.\n","-- Techniques used: Join, filtering, derived columns\n","\n","SELECT\n","    s.Year,\n","    s.\"Total sales per capita nominal U.S. dollars with taxes and tips\" AS PerCapitaSpending,\n","    n.\"Total | Fiber, dietary\" AS Fiber,\n","    n.\"Total | Protein\" AS Protein,\n","    n.\"Total | Saturated fatty acids\" AS SatFat,\n","    AVG(s.\"Total sales per capita nominal U.S. dollars with taxes and tips\") OVER (PARTITION BY s.Year) AS Rolling_Avg_Spending\n","FROM\n","    sales_percapita_final s\n","JOIN\n","    nut_intake_wide_final n\n","    ON s.Year = n.Year\n","WHERE\n","    s.\"Total sales per capita nominal U.S. dollars with taxes and tips\" IS NOT NULL\n","    AND n.\"Total | Fiber, dietary\" IS NOT NULL\n","    AND n.\"Total | Protein\" IS NOT NULL\n","    AND n.\"Total | Saturated fatty acids\" IS NOT NULL\n","\"\"\"\n","\n","# Run SQL and load results\n","df_model = pd.read_sql(query, conn)\n","\n","# Group to year level: average spending, national nutrient values (since nutrients already represent national data)\n","df_avg = df_model.groupby('Year', as_index=False).agg({\n","    'PerCapitaSpending': 'mean',\n","    'Fiber': 'first',\n","    'Protein': 'first',\n","    'SatFat': 'first'\n","})"],"metadata":{"id":"lMNu0cvnkBR4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"BkN9QAQCaCth"},"source":["### Step 2: Regression Plots  "]},{"cell_type":"code","source":["fig, axs = plt.subplots(1, 3, figsize=(18, 5))\n","nutrients = ['Fiber', 'Protein', 'SatFat']\n","titles = ['Fiber Intake vs Spending', 'Protein Intake vs Spending', 'Saturated Fat vs Spending']\n","\n","for i, nutrient in enumerate(nutrients):\n","    sns.regplot(\n","        ax=axs[i],\n","        x='PerCapitaSpending',\n","        y=nutrient,\n","        data=df_avg,\n","        scatter_kws={'s': 40},\n","        line_kws={'color': 'red'}\n","    )\n","    axs[i].set_title(titles[i])\n","    axs[i].set_xlabel('Per Capita Food Spending (Nominal $)')\n","    axs[i].set_ylabel(f'{nutrient} Intake')\n","\n","plt.tight_layout()\n","plt.savefig(\"regression_plots_nutrients_vs_spending.png\", dpi=300)\n","plt.show()"],"metadata":{"id":"mKUUoLabkTeO","executionInfo":{"status":"ok","timestamp":1748319590531,"user_tz":300,"elapsed":1142,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"colab":{"base_uri":"https://localhost:8080/","height":507},"outputId":"5e8f53aa-6a1f-4cd0-b90d-5125a415bc9b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1800x500 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"jJ4-rAJoaCth"},"source":["### Step 3: Coefficient Table  "]},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression\n","\n","# Define input features\n","X = df_avg[['PerCapitaSpending']]\n","results = {}\n","\n","# Run regression for each nutrient\n","for nutrient in ['Fiber', 'Protein', 'SatFat']:\n","    y = df_avg[nutrient]\n","    model = LinearRegression().fit(X, y)\n","\n","    results[nutrient] = {\n","        'R²': round(model.score(X, y), 3),\n","        'Coefficient': round(model.coef_[0], 4),\n","        'Intercept': round(model.intercept_, 3)\n","    }\n","\n","# Convert results to DataFrame\n","model_results_df = pd.DataFrame(results).T\n","model_results_df.index.name = 'Nutrient'\n","model_results_df.reset_index(inplace=True)\n","\n","# Display the results\n","print(model_results_df)"],"metadata":{"id":"IjeJIXD9lFMt","executionInfo":{"status":"ok","timestamp":1748319590930,"user_tz":300,"elapsed":397,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f6c9a980-d8c5-40b4-f778-d5c06cbb99d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["  Nutrient     R²  Coefficient  Intercept\n","0    Fiber  0.446       0.0006     13.166\n","1  Protein  0.009       0.0002     77.427\n","2   SatFat  0.146       0.0004     24.558\n"]}]},{"cell_type":"markdown","metadata":{"id":"3yIvHcuQaCth"},"source":["### Step 4: Residual Plots  "]},{"cell_type":"code","source":["fig, axs = plt.subplots(1, 3, figsize=(18, 5))\n","\n","for i, nutrient in enumerate(nutrients):\n","    y = df_avg[nutrient]\n","    model = LinearRegression().fit(X, y)\n","    residuals = y - model.predict(X)\n","\n","    axs[i].scatter(df_avg['PerCapitaSpending'], residuals, color='blue')\n","    axs[i].axhline(0, color='red', linestyle='--')\n","    axs[i].set_title(f'Residuals: {nutrient}')\n","    axs[i].set_xlabel(\"Per Capita Spending ($)\")\n","    axs[i].set_ylabel(\"Residuals\")\n","\n","plt.tight_layout()\n","plt.savefig(\"residuals_all_models.png\", dpi=300)\n","plt.show()"],"metadata":{"id":"4YA1s5bRk9GP","executionInfo":{"status":"ok","timestamp":1748319591965,"user_tz":300,"elapsed":1034,"user":{"displayName":"Michael (Mike) Nichols","userId":"00856205093183223660"}},"colab":{"base_uri":"https://localhost:8080/","height":507},"outputId":"4c01b43c-ebdd-4edb-a9b4-3a8c59728b28"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1800x500 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"RQHZ_U90aCth"},"source":["### Modeling Summary: Does Spending More on Food Improve Nutrient Intake?\n","\n","We used linear regression to explore whether per capita food spending is associated with healthier dietary patterns — focusing on three key nutrients: fiber, protein, and saturated fat.\n","\n","| Nutrient       | R²     | Coefficient | Interpretation                                                                       |\n","|----------------|--------|-------------|---------------------------------------------------------------------------------------|\n","| **Fiber**      | 0.446  | +0.0006     | Moderate positive relationship — higher spending is associated with greater fiber intake. |\n","| **Protein**    | 0.009  | +0.0002     | Very weak correlation — spending does not meaningfully predict protein intake.       |\n","| **Saturated Fat** | 0.146  | +0.0004     | Mild positive relationship — more spending is associated with more saturated fat.     |\n","\n","**Interpretation**\n","-\tFiber intake shows the strongest positive correlation with food spending — suggesting that those who spend more tend to consume more fiber, which aligns with improved dietary quality.\n","-\tSaturated fat also increases with higher spending, possibly reflecting greater consumption of restaurant or processed foods, which are often high in unhealthy fats.\n","-\tProtein intake appears relatively stable regardless of spending, likely because it’s present in a wide range of affordable foods.\n","\n","**Takeaway**\n","\n","Spending more on food can lead to better dietary quality (more fiber), but not always. It may also increase intake of less desirable nutrients like saturated fat. This nuance matters for policymakers and public health leaders — it’s not just how much we spend, but what we spend it on that determines nutritional outcomes."]},{"cell_type":"markdown","metadata":{"id":"LEYVxkuQaCth"},"source":["## Conclusion\n","\n","Our analysis reveals that rising food prices have not impacted all food categories equally — with certain nutrient-rich options becoming disproportionately expensive over time. These pricing dynamics are likely contributing to shifts in consumer behavior and nutrient intake, particularly among lower-income demographics.\n","\n","The logistic regression model suggests that nutrient density and food category are significant predictors of whether a food source aligns with USDA recommendations, highlighting potential targets for policy action.\n","\n","Future research could expand this work by incorporating household income data or examining food deserts more granularly. Ultimately, we hope this project supports data-driven policy that improves food accessibility, affordability, and nutritional outcomes for all Americans.\n","\n","Our findings reinforce the importance of integrating economic and public health data to inform smarter interventions — ensuring that nutritious food remains within reach for diverse communities nationwide."]}]}